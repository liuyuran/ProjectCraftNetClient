// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/server.proto

#include "proto/server.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr ServerStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        memorytotal_{::uint64_t{0u}},
        memoryused_{::uint64_t{0u}},
        maxplayers_{::int64_t{0}},
        onlineplayers_{::int64_t{0}},
        tps_{::int64_t{0}},
        ping_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerStatus::ServerStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServerStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerStatusDefaultTypeInternal() {}
  union {
    ServerStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerStatusDefaultTypeInternal _ServerStatus_default_instance_;

inline constexpr PlayerItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{::int64_t{0}},
        ping_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerItem::PlayerItem(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerItemDefaultTypeInternal() {}
  union {
    PlayerItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerItemDefaultTypeInternal _PlayerItem_default_instance_;

inline constexpr BlockDefineItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : block_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        material_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_id_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlockDefineItem::BlockDefineItem(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlockDefineItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockDefineItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockDefineItemDefaultTypeInternal() {}
  union {
    BlockDefineItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockDefineItemDefaultTypeInternal _BlockDefineItem_default_instance_;

inline constexpr BlockData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : block_id_{::int64_t{0}},
        sub_id_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlockData::BlockData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlockDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockDataDefaultTypeInternal() {}
  union {
    BlockData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockDataDefaultTypeInternal _BlockData_default_instance_;

inline constexpr BlockChange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : chunk_x_{0},
        chunk_y_{0},
        chunk_z_{0},
        block_x_{0},
        block_y_{0},
        block_z_{0},
        block_id_{::int64_t{0}},
        sub_id_{::int64_t{0}},
        change_type_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlockChange::BlockChange(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlockChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockChangeDefaultTypeInternal() {}
  union {
    BlockChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockChangeDefaultTypeInternal _BlockChange_default_instance_;

inline constexpr OnlineList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OnlineList::OnlineList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OnlineListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OnlineListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OnlineListDefaultTypeInternal() {}
  union {
    OnlineList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OnlineListDefaultTypeInternal _OnlineList_default_instance_;

inline constexpr ChunkData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : blocks_{},
        x_{0},
        y_{0},
        worldid_{::int64_t{0}},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChunkData::ChunkData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChunkDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChunkDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChunkDataDefaultTypeInternal() {}
  union {
    ChunkData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChunkDataDefaultTypeInternal _ChunkData_default_instance_;

inline constexpr BlockDefine::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlockDefine::BlockDefine(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlockDefineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockDefineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockDefineDefaultTypeInternal() {}
  union {
    BlockDefine _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockDefineDefaultTypeInternal _BlockDefine_default_instance_;
static ::_pb::Metadata file_level_metadata_proto_2fserver_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fserver_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fserver_2eproto = nullptr;
const ::uint32_t TableStruct_proto_2fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ServerStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ServerStatus, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::ServerStatus, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ServerStatus, _impl_.memorytotal_),
    PROTOBUF_FIELD_OFFSET(::ServerStatus, _impl_.memoryused_),
    PROTOBUF_FIELD_OFFSET(::ServerStatus, _impl_.maxplayers_),
    PROTOBUF_FIELD_OFFSET(::ServerStatus, _impl_.onlineplayers_),
    PROTOBUF_FIELD_OFFSET(::ServerStatus, _impl_.tps_),
    PROTOBUF_FIELD_OFFSET(::ServerStatus, _impl_.ping_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::BlockDefineItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::BlockDefineItem, _impl_.block_id_),
    PROTOBUF_FIELD_OFFSET(::BlockDefineItem, _impl_.block_key_),
    PROTOBUF_FIELD_OFFSET(::BlockDefineItem, _impl_.material_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::BlockDefine, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::BlockDefine, _impl_.items_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::BlockData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::BlockData, _impl_.block_id_),
    PROTOBUF_FIELD_OFFSET(::BlockData, _impl_.sub_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ChunkData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ChunkData, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::ChunkData, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::ChunkData, _impl_.z_),
    PROTOBUF_FIELD_OFFSET(::ChunkData, _impl_.worldid_),
    PROTOBUF_FIELD_OFFSET(::ChunkData, _impl_.blocks_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PlayerItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PlayerItem, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::PlayerItem, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::PlayerItem, _impl_.ping_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::OnlineList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::OnlineList, _impl_.players_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::BlockChange, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::BlockChange, _impl_.chunk_x_),
    PROTOBUF_FIELD_OFFSET(::BlockChange, _impl_.chunk_y_),
    PROTOBUF_FIELD_OFFSET(::BlockChange, _impl_.chunk_z_),
    PROTOBUF_FIELD_OFFSET(::BlockChange, _impl_.block_x_),
    PROTOBUF_FIELD_OFFSET(::BlockChange, _impl_.block_y_),
    PROTOBUF_FIELD_OFFSET(::BlockChange, _impl_.block_z_),
    PROTOBUF_FIELD_OFFSET(::BlockChange, _impl_.change_type_),
    PROTOBUF_FIELD_OFFSET(::BlockChange, _impl_.block_id_),
    PROTOBUF_FIELD_OFFSET(::BlockChange, _impl_.sub_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ServerStatus)},
        {16, -1, -1, sizeof(::BlockDefineItem)},
        {27, -1, -1, sizeof(::BlockDefine)},
        {36, -1, -1, sizeof(::BlockData)},
        {46, -1, -1, sizeof(::ChunkData)},
        {59, -1, -1, sizeof(::PlayerItem)},
        {70, -1, -1, sizeof(::OnlineList)},
        {79, -1, -1, sizeof(::BlockChange)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_ServerStatus_default_instance_._instance,
    &::_BlockDefineItem_default_instance_._instance,
    &::_BlockDefine_default_instance_._instance,
    &::_BlockData_default_instance_._instance,
    &::_ChunkData_default_instance_._instance,
    &::_PlayerItem_default_instance_._instance,
    &::_OnlineList_default_instance_._instance,
    &::_BlockChange_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022proto/server.proto\"\234\001\n\014ServerStatus\022\017\n"
    "\007version\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013memoryTo"
    "tal\030\003 \001(\004\022\022\n\nmemoryUsed\030\004 \001(\004\022\022\n\nmaxPlay"
    "ers\030\005 \001(\003\022\025\n\ronlinePlayers\030\006 \001(\003\022\013\n\003tps\030"
    "\007 \001(\003\022\014\n\004ping\030\010 \001(\r\"H\n\017BlockDefineItem\022\020"
    "\n\010block_id\030\001 \001(\003\022\021\n\tblock_key\030\002 \001(\t\022\020\n\010m"
    "aterial\030\003 \001(\t\".\n\013BlockDefine\022\037\n\005items\030\001 "
    "\003(\0132\020.BlockDefineItem\"-\n\tBlockData\022\020\n\010bl"
    "ock_id\030\001 \001(\003\022\016\n\006sub_id\030\002 \001(\003\"Y\n\tChunkDat"
    "a\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\t\n\001z\030\003 \001(\005\022\017\n\007wo"
    "rldId\030\004 \001(\003\022\032\n\006blocks\030\005 \003(\0132\n.BlockData\""
    "4\n\nPlayerItem\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022"
    "\014\n\004ping\030\003 \001(\r\"*\n\nOnlineList\022\034\n\007players\030\001"
    " \003(\0132\013.PlayerItem\"\252\001\n\013BlockChange\022\017\n\007chu"
    "nk_x\030\001 \001(\005\022\017\n\007chunk_y\030\002 \001(\005\022\017\n\007chunk_z\030\003"
    " \001(\005\022\017\n\007block_x\030\004 \001(\005\022\017\n\007block_y\030\005 \001(\005\022\017"
    "\n\007block_z\030\006 \001(\005\022\023\n\013change_type\030\007 \001(\005\022\020\n\010"
    "block_id\030\010 \001(\003\022\016\n\006sub_id\030\t \001(\003B\003\370\001\001b\006pro"
    "to3"
};
static ::absl::once_flag descriptor_table_proto_2fserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fserver_2eproto = {
    false,
    false,
    723,
    descriptor_table_protodef_proto_2fserver_2eproto,
    "proto/server.proto",
    &descriptor_table_proto_2fserver_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_proto_2fserver_2eproto::offsets,
    file_level_metadata_proto_2fserver_2eproto,
    file_level_enum_descriptors_proto_2fserver_2eproto,
    file_level_service_descriptors_proto_2fserver_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fserver_2eproto_getter() {
  return &descriptor_table_proto_2fserver_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2fserver_2eproto(&descriptor_table_proto_2fserver_2eproto);
// ===================================================================

class ServerStatus::_Internal {
 public:
};

ServerStatus::ServerStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServerStatus)
}
inline PROTOBUF_NDEBUG_INLINE ServerStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : version_(arena, from.version_),
        name_(arena, from.name_),
        _cached_size_{0} {}

ServerStatus::ServerStatus(
    ::google::protobuf::Arena* arena,
    const ServerStatus& from)
    : ::google::protobuf::Message(arena) {
  ServerStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, memorytotal_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, memorytotal_),
           offsetof(Impl_, ping_) -
               offsetof(Impl_, memorytotal_) +
               sizeof(Impl_::ping_));

  // @@protoc_insertion_point(copy_constructor:ServerStatus)
}
inline PROTOBUF_NDEBUG_INLINE ServerStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : version_(arena),
        name_(arena),
        _cached_size_{0} {}

inline void ServerStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, memorytotal_),
           0,
           offsetof(Impl_, ping_) -
               offsetof(Impl_, memorytotal_) +
               sizeof(Impl_::ping_));
}
ServerStatus::~ServerStatus() {
  // @@protoc_insertion_point(destructor:ServerStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.version_.Destroy();
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ServerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.version_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.memorytotal_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ping_) -
      reinterpret_cast<char*>(&_impl_.memorytotal_)) + sizeof(_impl_.ping_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 40, 2> ServerStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ServerStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 ping = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerStatus, _impl_.ping_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.ping_)}},
    // string version = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.version_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.name_)}},
    // uint64 memoryTotal = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerStatus, _impl_.memorytotal_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.memorytotal_)}},
    // uint64 memoryUsed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerStatus, _impl_.memoryused_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.memoryused_)}},
    // int64 maxPlayers = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerStatus, _impl_.maxplayers_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.maxplayers_)}},
    // int64 onlinePlayers = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerStatus, _impl_.onlineplayers_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.onlineplayers_)}},
    // int64 tps = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerStatus, _impl_.tps_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.tps_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string version = 1;
    {PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 memoryTotal = 3;
    {PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.memorytotal_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 memoryUsed = 4;
    {PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.memoryused_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int64 maxPlayers = 5;
    {PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.maxplayers_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 onlinePlayers = 6;
    {PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.onlineplayers_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 tps = 7;
    {PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.tps_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // uint32 ping = 8;
    {PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.ping_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\14\7\4\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "ServerStatus"
    "version"
    "name"
  }},
};

::uint8_t* ServerStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string version = 1;
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServerStatus.version");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServerStatus.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint64 memoryTotal = 3;
  if (this->_internal_memorytotal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_memorytotal(), target);
  }

  // uint64 memoryUsed = 4;
  if (this->_internal_memoryused() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_memoryused(), target);
  }

  // int64 maxPlayers = 5;
  if (this->_internal_maxplayers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_maxplayers(), target);
  }

  // int64 onlinePlayers = 6;
  if (this->_internal_onlineplayers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_onlineplayers(), target);
  }

  // int64 tps = 7;
  if (this->_internal_tps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_tps(), target);
  }

  // uint32 ping = 8;
  if (this->_internal_ping() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_ping(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerStatus)
  return target;
}

::size_t ServerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // uint64 memoryTotal = 3;
  if (this->_internal_memorytotal() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_memorytotal());
  }

  // uint64 memoryUsed = 4;
  if (this->_internal_memoryused() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_memoryused());
  }

  // int64 maxPlayers = 5;
  if (this->_internal_maxplayers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_maxplayers());
  }

  // int64 onlinePlayers = 6;
  if (this->_internal_onlineplayers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_onlineplayers());
  }

  // int64 tps = 7;
  if (this->_internal_tps() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_tps());
  }

  // uint32 ping = 8;
  if (this->_internal_ping() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ping());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServerStatus::_class_data_ = {
    ServerStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ServerStatus::GetClassData() const {
  return &_class_data_;
}

void ServerStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServerStatus*>(&to_msg);
  auto& from = static_cast<const ServerStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_memorytotal() != 0) {
    _this->_internal_set_memorytotal(from._internal_memorytotal());
  }
  if (from._internal_memoryused() != 0) {
    _this->_internal_set_memoryused(from._internal_memoryused());
  }
  if (from._internal_maxplayers() != 0) {
    _this->_internal_set_maxplayers(from._internal_maxplayers());
  }
  if (from._internal_onlineplayers() != 0) {
    _this->_internal_set_onlineplayers(from._internal_onlineplayers());
  }
  if (from._internal_tps() != 0) {
    _this->_internal_set_tps(from._internal_tps());
  }
  if (from._internal_ping() != 0) {
    _this->_internal_set_ping(from._internal_ping());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerStatus::CopyFrom(const ServerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ServerStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ServerStatus::InternalSwap(ServerStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.ping_)
      + sizeof(ServerStatus::_impl_.ping_)
      - PROTOBUF_FIELD_OFFSET(ServerStatus, _impl_.memorytotal_)>(
          reinterpret_cast<char*>(&_impl_.memorytotal_),
          reinterpret_cast<char*>(&other->_impl_.memorytotal_));
}

::google::protobuf::Metadata ServerStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fserver_2eproto_getter, &descriptor_table_proto_2fserver_2eproto_once,
      file_level_metadata_proto_2fserver_2eproto[0]);
}
// ===================================================================

class BlockDefineItem::_Internal {
 public:
};

BlockDefineItem::BlockDefineItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BlockDefineItem)
}
inline PROTOBUF_NDEBUG_INLINE BlockDefineItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : block_key_(arena, from.block_key_),
        material_(arena, from.material_),
        _cached_size_{0} {}

BlockDefineItem::BlockDefineItem(
    ::google::protobuf::Arena* arena,
    const BlockDefineItem& from)
    : ::google::protobuf::Message(arena) {
  BlockDefineItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.block_id_ = from._impl_.block_id_;

  // @@protoc_insertion_point(copy_constructor:BlockDefineItem)
}
inline PROTOBUF_NDEBUG_INLINE BlockDefineItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : block_key_(arena),
        material_(arena),
        _cached_size_{0} {}

inline void BlockDefineItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.block_id_ = {};
}
BlockDefineItem::~BlockDefineItem() {
  // @@protoc_insertion_point(destructor:BlockDefineItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlockDefineItem::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.block_key_.Destroy();
  _impl_.material_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BlockDefineItem::Clear() {
// @@protoc_insertion_point(message_clear_start:BlockDefineItem)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.block_key_.ClearToEmpty();
  _impl_.material_.ClearToEmpty();
  _impl_.block_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BlockDefineItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 41, 2> BlockDefineItem::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BlockDefineItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 block_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockDefineItem, _impl_.block_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlockDefineItem, _impl_.block_id_)}},
    // string block_key = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BlockDefineItem, _impl_.block_key_)}},
    // string material = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BlockDefineItem, _impl_.material_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 block_id = 1;
    {PROTOBUF_FIELD_OFFSET(BlockDefineItem, _impl_.block_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string block_key = 2;
    {PROTOBUF_FIELD_OFFSET(BlockDefineItem, _impl_.block_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string material = 3;
    {PROTOBUF_FIELD_OFFSET(BlockDefineItem, _impl_.material_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\0\11\10\0\0\0\0"
    "BlockDefineItem"
    "block_key"
    "material"
  }},
};

::uint8_t* BlockDefineItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BlockDefineItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 block_id = 1;
  if (this->_internal_block_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_block_id(), target);
  }

  // string block_key = 2;
  if (!this->_internal_block_key().empty()) {
    const std::string& _s = this->_internal_block_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BlockDefineItem.block_key");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string material = 3;
  if (!this->_internal_material().empty()) {
    const std::string& _s = this->_internal_material();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BlockDefineItem.material");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BlockDefineItem)
  return target;
}

::size_t BlockDefineItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BlockDefineItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string block_key = 2;
  if (!this->_internal_block_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_block_key());
  }

  // string material = 3;
  if (!this->_internal_material().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_material());
  }

  // int64 block_id = 1;
  if (this->_internal_block_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_block_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BlockDefineItem::_class_data_ = {
    BlockDefineItem::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BlockDefineItem::GetClassData() const {
  return &_class_data_;
}

void BlockDefineItem::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BlockDefineItem*>(&to_msg);
  auto& from = static_cast<const BlockDefineItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BlockDefineItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_block_key().empty()) {
    _this->_internal_set_block_key(from._internal_block_key());
  }
  if (!from._internal_material().empty()) {
    _this->_internal_set_material(from._internal_material());
  }
  if (from._internal_block_id() != 0) {
    _this->_internal_set_block_id(from._internal_block_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockDefineItem::CopyFrom(const BlockDefineItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BlockDefineItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BlockDefineItem::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BlockDefineItem::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BlockDefineItem::InternalSwap(BlockDefineItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_key_, &other->_impl_.block_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.material_, &other->_impl_.material_, arena);
        swap(_impl_.block_id_, other->_impl_.block_id_);
}

::google::protobuf::Metadata BlockDefineItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fserver_2eproto_getter, &descriptor_table_proto_2fserver_2eproto_once,
      file_level_metadata_proto_2fserver_2eproto[1]);
}
// ===================================================================

class BlockDefine::_Internal {
 public:
};

BlockDefine::BlockDefine(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BlockDefine)
}
inline PROTOBUF_NDEBUG_INLINE BlockDefine::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : items_{visibility, arena, from.items_},
        _cached_size_{0} {}

BlockDefine::BlockDefine(
    ::google::protobuf::Arena* arena,
    const BlockDefine& from)
    : ::google::protobuf::Message(arena) {
  BlockDefine* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:BlockDefine)
}
inline PROTOBUF_NDEBUG_INLINE BlockDefine::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : items_{visibility, arena},
        _cached_size_{0} {}

inline void BlockDefine::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlockDefine::~BlockDefine() {
  // @@protoc_insertion_point(destructor:BlockDefine)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlockDefine::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BlockDefine::Clear() {
// @@protoc_insertion_point(message_clear_start:BlockDefine)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BlockDefine::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BlockDefine::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BlockDefine_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .BlockDefineItem items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlockDefine, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .BlockDefineItem items = 1;
    {PROTOBUF_FIELD_OFFSET(BlockDefine, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::BlockDefineItem>()},
  }}, {{
  }},
};

::uint8_t* BlockDefine::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BlockDefine)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .BlockDefineItem items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BlockDefine)
  return target;
}

::size_t BlockDefine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BlockDefine)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .BlockDefineItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BlockDefine::_class_data_ = {
    BlockDefine::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BlockDefine::GetClassData() const {
  return &_class_data_;
}

void BlockDefine::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BlockDefine*>(&to_msg);
  auto& from = static_cast<const BlockDefine&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BlockDefine)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockDefine::CopyFrom(const BlockDefine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BlockDefine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BlockDefine::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BlockDefine::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BlockDefine::InternalSwap(BlockDefine* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata BlockDefine::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fserver_2eproto_getter, &descriptor_table_proto_2fserver_2eproto_once,
      file_level_metadata_proto_2fserver_2eproto[2]);
}
// ===================================================================

class BlockData::_Internal {
 public:
};

BlockData::BlockData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BlockData)
}
BlockData::BlockData(
    ::google::protobuf::Arena* arena, const BlockData& from)
    : BlockData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BlockData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlockData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, block_id_),
           0,
           offsetof(Impl_, sub_id_) -
               offsetof(Impl_, block_id_) +
               sizeof(Impl_::sub_id_));
}
BlockData::~BlockData() {
  // @@protoc_insertion_point(destructor:BlockData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlockData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BlockData::Clear() {
// @@protoc_insertion_point(message_clear_start:BlockData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.block_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sub_id_) -
      reinterpret_cast<char*>(&_impl_.block_id_)) + sizeof(_impl_.sub_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BlockData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> BlockData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BlockData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 sub_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockData, _impl_.sub_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BlockData, _impl_.sub_id_)}},
    // int64 block_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockData, _impl_.block_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlockData, _impl_.block_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 block_id = 1;
    {PROTOBUF_FIELD_OFFSET(BlockData, _impl_.block_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 sub_id = 2;
    {PROTOBUF_FIELD_OFFSET(BlockData, _impl_.sub_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BlockData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BlockData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 block_id = 1;
  if (this->_internal_block_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_block_id(), target);
  }

  // int64 sub_id = 2;
  if (this->_internal_sub_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_sub_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BlockData)
  return target;
}

::size_t BlockData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BlockData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 block_id = 1;
  if (this->_internal_block_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_block_id());
  }

  // int64 sub_id = 2;
  if (this->_internal_sub_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_sub_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BlockData::_class_data_ = {
    BlockData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BlockData::GetClassData() const {
  return &_class_data_;
}

void BlockData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BlockData*>(&to_msg);
  auto& from = static_cast<const BlockData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BlockData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_block_id() != 0) {
    _this->_internal_set_block_id(from._internal_block_id());
  }
  if (from._internal_sub_id() != 0) {
    _this->_internal_set_sub_id(from._internal_sub_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockData::CopyFrom(const BlockData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BlockData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BlockData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BlockData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BlockData::InternalSwap(BlockData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockData, _impl_.sub_id_)
      + sizeof(BlockData::_impl_.sub_id_)
      - PROTOBUF_FIELD_OFFSET(BlockData, _impl_.block_id_)>(
          reinterpret_cast<char*>(&_impl_.block_id_),
          reinterpret_cast<char*>(&other->_impl_.block_id_));
}

::google::protobuf::Metadata BlockData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fserver_2eproto_getter, &descriptor_table_proto_2fserver_2eproto_once,
      file_level_metadata_proto_2fserver_2eproto[3]);
}
// ===================================================================

class ChunkData::_Internal {
 public:
};

ChunkData::ChunkData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ChunkData)
}
inline PROTOBUF_NDEBUG_INLINE ChunkData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : blocks_{visibility, arena, from.blocks_},
        _cached_size_{0} {}

ChunkData::ChunkData(
    ::google::protobuf::Arena* arena,
    const ChunkData& from)
    : ::google::protobuf::Message(arena) {
  ChunkData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));

  // @@protoc_insertion_point(copy_constructor:ChunkData)
}
inline PROTOBUF_NDEBUG_INLINE ChunkData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : blocks_{visibility, arena},
        _cached_size_{0} {}

inline void ChunkData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
ChunkData::~ChunkData() {
  // @@protoc_insertion_point(destructor:ChunkData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChunkData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChunkData::Clear() {
// @@protoc_insertion_point(message_clear_start:ChunkData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blocks_.Clear();
  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChunkData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> ChunkData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChunkData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChunkData, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.x_)}},
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChunkData, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.y_)}},
    // int32 z = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChunkData, _impl_.z_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.z_)}},
    // int64 worldId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChunkData, _impl_.worldid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.worldid_)}},
    // repeated .BlockData blocks = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.blocks_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 z = 3;
    {PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 worldId = 4;
    {PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.worldid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .BlockData blocks = 5;
    {PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.blocks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::BlockData>()},
  }}, {{
  }},
};

::uint8_t* ChunkData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ChunkData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_y(), target);
  }

  // int32 z = 3;
  if (this->_internal_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_z(), target);
  }

  // int64 worldId = 4;
  if (this->_internal_worldid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_worldid(), target);
  }

  // repeated .BlockData blocks = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_blocks_size()); i < n; i++) {
    const auto& repfield = this->_internal_blocks().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChunkData)
  return target;
}

::size_t ChunkData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChunkData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .BlockData blocks = 5;
  total_size += 1UL * this->_internal_blocks_size();
  for (const auto& msg : this->_internal_blocks()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_x());
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_y());
  }

  // int64 worldId = 4;
  if (this->_internal_worldid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_worldid());
  }

  // int32 z = 3;
  if (this->_internal_z() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_z());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChunkData::_class_data_ = {
    ChunkData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChunkData::GetClassData() const {
  return &_class_data_;
}

void ChunkData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChunkData*>(&to_msg);
  auto& from = static_cast<const ChunkData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ChunkData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_blocks()->MergeFrom(
      from._internal_blocks());
  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  if (from._internal_worldid() != 0) {
    _this->_internal_set_worldid(from._internal_worldid());
  }
  if (from._internal_z() != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChunkData::CopyFrom(const ChunkData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChunkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChunkData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ChunkData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChunkData::InternalSwap(ChunkData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.blocks_.InternalSwap(&other->_impl_.blocks_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.z_)
      + sizeof(ChunkData::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(ChunkData, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata ChunkData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fserver_2eproto_getter, &descriptor_table_proto_2fserver_2eproto_once,
      file_level_metadata_proto_2fserver_2eproto[4]);
}
// ===================================================================

class PlayerItem::_Internal {
 public:
};

PlayerItem::PlayerItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerItem)
}
inline PROTOBUF_NDEBUG_INLINE PlayerItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

PlayerItem::PlayerItem(
    ::google::protobuf::Arena* arena,
    const PlayerItem& from)
    : ::google::protobuf::Message(arena) {
  PlayerItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, ping_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::ping_));

  // @@protoc_insertion_point(copy_constructor:PlayerItem)
}
inline PROTOBUF_NDEBUG_INLINE PlayerItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void PlayerItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, ping_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::ping_));
}
PlayerItem::~PlayerItem() {
  // @@protoc_insertion_point(destructor:PlayerItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerItem::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlayerItem::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerItem)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ping_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.ping_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 23, 2> PlayerItem::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlayerItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerItem, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerItem, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerItem, _impl_.name_)}},
    // uint32 ping = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerItem, _impl_.ping_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerItem, _impl_.ping_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerItem, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerItem, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 ping = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerItem, _impl_.ping_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\12\0\4\0\0\0\0\0"
    "PlayerItem"
    "name"
  }},
};

::uint8_t* PlayerItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PlayerItem.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 ping = 3;
  if (this->_internal_ping() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_ping(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerItem)
  return target;
}

::size_t PlayerItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  // uint32 ping = 3;
  if (this->_internal_ping() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ping());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlayerItem::_class_data_ = {
    PlayerItem::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlayerItem::GetClassData() const {
  return &_class_data_;
}

void PlayerItem::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlayerItem*>(&to_msg);
  auto& from = static_cast<const PlayerItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_ping() != 0) {
    _this->_internal_set_ping(from._internal_ping());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerItem::CopyFrom(const PlayerItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerItem::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlayerItem::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlayerItem::InternalSwap(PlayerItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerItem, _impl_.ping_)
      + sizeof(PlayerItem::_impl_.ping_)
      - PROTOBUF_FIELD_OFFSET(PlayerItem, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata PlayerItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fserver_2eproto_getter, &descriptor_table_proto_2fserver_2eproto_once,
      file_level_metadata_proto_2fserver_2eproto[5]);
}
// ===================================================================

class OnlineList::_Internal {
 public:
};

OnlineList::OnlineList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:OnlineList)
}
inline PROTOBUF_NDEBUG_INLINE OnlineList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : players_{visibility, arena, from.players_},
        _cached_size_{0} {}

OnlineList::OnlineList(
    ::google::protobuf::Arena* arena,
    const OnlineList& from)
    : ::google::protobuf::Message(arena) {
  OnlineList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:OnlineList)
}
inline PROTOBUF_NDEBUG_INLINE OnlineList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_{visibility, arena},
        _cached_size_{0} {}

inline void OnlineList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OnlineList::~OnlineList() {
  // @@protoc_insertion_point(destructor:OnlineList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OnlineList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OnlineList::Clear() {
// @@protoc_insertion_point(message_clear_start:OnlineList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OnlineList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> OnlineList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OnlineList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .PlayerItem players = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OnlineList, _impl_.players_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .PlayerItem players = 1;
    {PROTOBUF_FIELD_OFFSET(OnlineList, _impl_.players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PlayerItem>()},
  }}, {{
  }},
};

::uint8_t* OnlineList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OnlineList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .PlayerItem players = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_size()); i < n; i++) {
    const auto& repfield = this->_internal_players().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OnlineList)
  return target;
}

::size_t OnlineList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OnlineList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PlayerItem players = 1;
  total_size += 1UL * this->_internal_players_size();
  for (const auto& msg : this->_internal_players()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OnlineList::_class_data_ = {
    OnlineList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OnlineList::GetClassData() const {
  return &_class_data_;
}

void OnlineList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OnlineList*>(&to_msg);
  auto& from = static_cast<const OnlineList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:OnlineList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OnlineList::CopyFrom(const OnlineList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OnlineList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OnlineList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OnlineList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OnlineList::InternalSwap(OnlineList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
}

::google::protobuf::Metadata OnlineList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fserver_2eproto_getter, &descriptor_table_proto_2fserver_2eproto_once,
      file_level_metadata_proto_2fserver_2eproto[6]);
}
// ===================================================================

class BlockChange::_Internal {
 public:
};

BlockChange::BlockChange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BlockChange)
}
BlockChange::BlockChange(
    ::google::protobuf::Arena* arena, const BlockChange& from)
    : BlockChange(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BlockChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlockChange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, chunk_x_),
           0,
           offsetof(Impl_, change_type_) -
               offsetof(Impl_, chunk_x_) +
               sizeof(Impl_::change_type_));
}
BlockChange::~BlockChange() {
  // @@protoc_insertion_point(destructor:BlockChange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlockChange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BlockChange::Clear() {
// @@protoc_insertion_point(message_clear_start:BlockChange)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.chunk_x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.change_type_) -
      reinterpret_cast<char*>(&_impl_.chunk_x_)) + sizeof(_impl_.change_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BlockChange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> BlockChange::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BlockChange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 chunk_x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockChange, _impl_.chunk_x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.chunk_x_)}},
    // int32 chunk_y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockChange, _impl_.chunk_y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.chunk_y_)}},
    // int32 chunk_z = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockChange, _impl_.chunk_z_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.chunk_z_)}},
    // int32 block_x = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockChange, _impl_.block_x_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.block_x_)}},
    // int32 block_y = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockChange, _impl_.block_y_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.block_y_)}},
    // int32 block_z = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockChange, _impl_.block_z_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.block_z_)}},
    // int32 change_type = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockChange, _impl_.change_type_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.change_type_)}},
    // int64 block_id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockChange, _impl_.block_id_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.block_id_)}},
    // int64 sub_id = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockChange, _impl_.sub_id_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.sub_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 chunk_x = 1;
    {PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.chunk_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 chunk_y = 2;
    {PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.chunk_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 chunk_z = 3;
    {PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.chunk_z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 block_x = 4;
    {PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.block_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 block_y = 5;
    {PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.block_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 block_z = 6;
    {PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.block_z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 change_type = 7;
    {PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.change_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 block_id = 8;
    {PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.block_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 sub_id = 9;
    {PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.sub_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BlockChange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BlockChange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 chunk_x = 1;
  if (this->_internal_chunk_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_chunk_x(), target);
  }

  // int32 chunk_y = 2;
  if (this->_internal_chunk_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_chunk_y(), target);
  }

  // int32 chunk_z = 3;
  if (this->_internal_chunk_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_chunk_z(), target);
  }

  // int32 block_x = 4;
  if (this->_internal_block_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_block_x(), target);
  }

  // int32 block_y = 5;
  if (this->_internal_block_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_block_y(), target);
  }

  // int32 block_z = 6;
  if (this->_internal_block_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_block_z(), target);
  }

  // int32 change_type = 7;
  if (this->_internal_change_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_change_type(), target);
  }

  // int64 block_id = 8;
  if (this->_internal_block_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_block_id(), target);
  }

  // int64 sub_id = 9;
  if (this->_internal_sub_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<9>(
            stream, this->_internal_sub_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BlockChange)
  return target;
}

::size_t BlockChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BlockChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 chunk_x = 1;
  if (this->_internal_chunk_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_chunk_x());
  }

  // int32 chunk_y = 2;
  if (this->_internal_chunk_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_chunk_y());
  }

  // int32 chunk_z = 3;
  if (this->_internal_chunk_z() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_chunk_z());
  }

  // int32 block_x = 4;
  if (this->_internal_block_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_block_x());
  }

  // int32 block_y = 5;
  if (this->_internal_block_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_block_y());
  }

  // int32 block_z = 6;
  if (this->_internal_block_z() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_block_z());
  }

  // int64 block_id = 8;
  if (this->_internal_block_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_block_id());
  }

  // int64 sub_id = 9;
  if (this->_internal_sub_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_sub_id());
  }

  // int32 change_type = 7;
  if (this->_internal_change_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_change_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BlockChange::_class_data_ = {
    BlockChange::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BlockChange::GetClassData() const {
  return &_class_data_;
}

void BlockChange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BlockChange*>(&to_msg);
  auto& from = static_cast<const BlockChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BlockChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_chunk_x() != 0) {
    _this->_internal_set_chunk_x(from._internal_chunk_x());
  }
  if (from._internal_chunk_y() != 0) {
    _this->_internal_set_chunk_y(from._internal_chunk_y());
  }
  if (from._internal_chunk_z() != 0) {
    _this->_internal_set_chunk_z(from._internal_chunk_z());
  }
  if (from._internal_block_x() != 0) {
    _this->_internal_set_block_x(from._internal_block_x());
  }
  if (from._internal_block_y() != 0) {
    _this->_internal_set_block_y(from._internal_block_y());
  }
  if (from._internal_block_z() != 0) {
    _this->_internal_set_block_z(from._internal_block_z());
  }
  if (from._internal_block_id() != 0) {
    _this->_internal_set_block_id(from._internal_block_id());
  }
  if (from._internal_sub_id() != 0) {
    _this->_internal_set_sub_id(from._internal_sub_id());
  }
  if (from._internal_change_type() != 0) {
    _this->_internal_set_change_type(from._internal_change_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockChange::CopyFrom(const BlockChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BlockChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BlockChange::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BlockChange::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BlockChange::InternalSwap(BlockChange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.change_type_)
      + sizeof(BlockChange::_impl_.change_type_)
      - PROTOBUF_FIELD_OFFSET(BlockChange, _impl_.chunk_x_)>(
          reinterpret_cast<char*>(&_impl_.chunk_x_),
          reinterpret_cast<char*>(&other->_impl_.chunk_x_));
}

::google::protobuf::Metadata BlockChange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fserver_2eproto_getter, &descriptor_table_proto_2fserver_2eproto_once,
      file_level_metadata_proto_2fserver_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
