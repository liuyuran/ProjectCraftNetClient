// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_mset.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fmset_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fmset_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/unittest_mset_wire_format.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fmset_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto;
namespace protobuf_unittest {
class NestedTestInt;
struct NestedTestIntDefaultTypeInternal;
extern NestedTestIntDefaultTypeInternal _NestedTestInt_default_instance_;
class NestedTestMessageSetContainer;
struct NestedTestMessageSetContainerDefaultTypeInternal;
extern NestedTestMessageSetContainerDefaultTypeInternal _NestedTestMessageSetContainer_default_instance_;
class RawMessageSet;
struct RawMessageSetDefaultTypeInternal;
extern RawMessageSetDefaultTypeInternal _RawMessageSet_default_instance_;
class RawMessageSet_Item;
struct RawMessageSet_ItemDefaultTypeInternal;
extern RawMessageSet_ItemDefaultTypeInternal _RawMessageSet_Item_default_instance_;
class TestMessageSetContainer;
struct TestMessageSetContainerDefaultTypeInternal;
extern TestMessageSetContainerDefaultTypeInternal _TestMessageSetContainer_default_instance_;
class TestMessageSetExtension1;
struct TestMessageSetExtension1DefaultTypeInternal;
extern TestMessageSetExtension1DefaultTypeInternal _TestMessageSetExtension1_default_instance_;
class TestMessageSetExtension2;
struct TestMessageSetExtension2DefaultTypeInternal;
extern TestMessageSetExtension2DefaultTypeInternal _TestMessageSetExtension2_default_instance_;
class TestMessageSetExtension3;
struct TestMessageSetExtension3DefaultTypeInternal;
extern TestMessageSetExtension3DefaultTypeInternal _TestMessageSetExtension3_default_instance_;
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf_unittest {

// ===================================================================


// -------------------------------------------------------------------

class TestMessageSetExtension2 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageSetExtension2) */ {
 public:
  inline TestMessageSetExtension2() : TestMessageSetExtension2(nullptr) {}
  ~TestMessageSetExtension2() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessageSetExtension2(::google::protobuf::internal::ConstantInitialized);

  inline TestMessageSetExtension2(const TestMessageSetExtension2& from)
      : TestMessageSetExtension2(nullptr, from) {}
  TestMessageSetExtension2(TestMessageSetExtension2&& from) noexcept
    : TestMessageSetExtension2() {
    *this = ::std::move(from);
  }

  inline TestMessageSetExtension2& operator=(const TestMessageSetExtension2& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageSetExtension2& operator=(TestMessageSetExtension2&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessageSetExtension2& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessageSetExtension2* internal_default_instance() {
    return reinterpret_cast<const TestMessageSetExtension2*>(
               &_TestMessageSetExtension2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(TestMessageSetExtension2& a, TestMessageSetExtension2& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageSetExtension2* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageSetExtension2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageSetExtension2* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestMessageSetExtension2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessageSetExtension2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestMessageSetExtension2& from) {
    TestMessageSetExtension2::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMessageSetExtension2* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestMessageSetExtension2";
  }
  protected:
  explicit TestMessageSetExtension2(::google::protobuf::Arena* arena);
  TestMessageSetExtension2(::google::protobuf::Arena* arena, const TestMessageSetExtension2& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrFieldNumber = 25,
  };
  // optional string str = 25;
  bool has_str() const;
  void clear_str() ;
  const std::string& str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_str(Arg_&& arg, Args_... args);
  std::string* mutable_str();
  PROTOBUF_NODISCARD std::string* release_str();
  void set_allocated_str(std::string* value);

  private:
  const std::string& _internal_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_str(
      const std::string& value);
  std::string* _internal_mutable_str();

  public:
  static const int kMessageSetExtensionFieldNumber = 1547769;
  static ::google::protobuf::internal::ExtensionIdentifier< ::proto2_wireformat_unittest::TestMessageSet,
      ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension2 >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageSetExtension2)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr str_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};// -------------------------------------------------------------------

class RawMessageSet_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.RawMessageSet.Item) */ {
 public:
  inline RawMessageSet_Item() : RawMessageSet_Item(nullptr) {}
  ~RawMessageSet_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RawMessageSet_Item(::google::protobuf::internal::ConstantInitialized);

  inline RawMessageSet_Item(const RawMessageSet_Item& from)
      : RawMessageSet_Item(nullptr, from) {}
  RawMessageSet_Item(RawMessageSet_Item&& from) noexcept
    : RawMessageSet_Item() {
    *this = ::std::move(from);
  }

  inline RawMessageSet_Item& operator=(const RawMessageSet_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline RawMessageSet_Item& operator=(RawMessageSet_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RawMessageSet_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const RawMessageSet_Item* internal_default_instance() {
    return reinterpret_cast<const RawMessageSet_Item*>(
               &_RawMessageSet_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(RawMessageSet_Item& a, RawMessageSet_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(RawMessageSet_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RawMessageSet_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RawMessageSet_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RawMessageSet_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RawMessageSet_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RawMessageSet_Item& from) {
    RawMessageSet_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RawMessageSet_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.RawMessageSet.Item";
  }
  protected:
  explicit RawMessageSet_Item(::google::protobuf::Arena* arena);
  RawMessageSet_Item(::google::protobuf::Arena* arena, const RawMessageSet_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 3,
    kTypeIdFieldNumber = 2,
  };
  // required bytes message = 3;
  bool has_message() const;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // required int32 type_id = 2;
  bool has_type_id() const;
  void clear_type_id() ;
  ::int32_t type_id() const;
  void set_type_id(::int32_t value);

  private:
  ::int32_t _internal_type_id() const;
  void _internal_set_type_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.RawMessageSet.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int32_t type_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};// -------------------------------------------------------------------

class NestedTestInt final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.NestedTestInt) */ {
 public:
  inline NestedTestInt() : NestedTestInt(nullptr) {}
  ~NestedTestInt() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NestedTestInt(::google::protobuf::internal::ConstantInitialized);

  inline NestedTestInt(const NestedTestInt& from)
      : NestedTestInt(nullptr, from) {}
  NestedTestInt(NestedTestInt&& from) noexcept
    : NestedTestInt() {
    *this = ::std::move(from);
  }

  inline NestedTestInt& operator=(const NestedTestInt& from) {
    CopyFrom(from);
    return *this;
  }
  inline NestedTestInt& operator=(NestedTestInt&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NestedTestInt& default_instance() {
    return *internal_default_instance();
  }
  static inline const NestedTestInt* internal_default_instance() {
    return reinterpret_cast<const NestedTestInt*>(
               &_NestedTestInt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(NestedTestInt& a, NestedTestInt& b) {
    a.Swap(&b);
  }
  inline void Swap(NestedTestInt* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NestedTestInt* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NestedTestInt* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NestedTestInt>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NestedTestInt& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NestedTestInt& from) {
    NestedTestInt::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NestedTestInt* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.NestedTestInt";
  }
  protected:
  explicit NestedTestInt(::google::protobuf::Arena* arena);
  NestedTestInt(::google::protobuf::Arena* arena, const NestedTestInt& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChildFieldNumber = 2,
    kAFieldNumber = 1,
    kBFieldNumber = 3,
  };
  // optional .protobuf_unittest.NestedTestInt child = 2;
  bool has_child() const;
  void clear_child() ;
  const ::protobuf_unittest::NestedTestInt& child() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::NestedTestInt* release_child();
  ::protobuf_unittest::NestedTestInt* mutable_child();
  void set_allocated_child(::protobuf_unittest::NestedTestInt* value);
  void unsafe_arena_set_allocated_child(::protobuf_unittest::NestedTestInt* value);
  ::protobuf_unittest::NestedTestInt* unsafe_arena_release_child();

  private:
  const ::protobuf_unittest::NestedTestInt& _internal_child() const;
  ::protobuf_unittest::NestedTestInt* _internal_mutable_child();

  public:
  // optional fixed32 a = 1;
  bool has_a() const;
  void clear_a() ;
  ::uint32_t a() const;
  void set_a(::uint32_t value);

  private:
  ::uint32_t _internal_a() const;
  void _internal_set_a(::uint32_t value);

  public:
  // optional int32 b = 3;
  bool has_b() const;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.NestedTestInt)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::protobuf_unittest::NestedTestInt* child_;
    ::uint32_t a_;
    ::int32_t b_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};// -------------------------------------------------------------------

class TestMessageSetExtension3 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageSetExtension3) */ {
 public:
  inline TestMessageSetExtension3() : TestMessageSetExtension3(nullptr) {}
  ~TestMessageSetExtension3() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessageSetExtension3(::google::protobuf::internal::ConstantInitialized);

  inline TestMessageSetExtension3(const TestMessageSetExtension3& from)
      : TestMessageSetExtension3(nullptr, from) {}
  TestMessageSetExtension3(TestMessageSetExtension3&& from) noexcept
    : TestMessageSetExtension3() {
    *this = ::std::move(from);
  }

  inline TestMessageSetExtension3& operator=(const TestMessageSetExtension3& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageSetExtension3& operator=(TestMessageSetExtension3&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessageSetExtension3& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessageSetExtension3* internal_default_instance() {
    return reinterpret_cast<const TestMessageSetExtension3*>(
               &_TestMessageSetExtension3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(TestMessageSetExtension3& a, TestMessageSetExtension3& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageSetExtension3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageSetExtension3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageSetExtension3* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestMessageSetExtension3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessageSetExtension3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestMessageSetExtension3& from) {
    TestMessageSetExtension3::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMessageSetExtension3* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestMessageSetExtension3";
  }
  protected:
  explicit TestMessageSetExtension3(::google::protobuf::Arena* arena);
  TestMessageSetExtension3(::google::protobuf::Arena* arena, const TestMessageSetExtension3& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 35,
    kRequiredIntFieldNumber = 36,
  };
  // optional .protobuf_unittest.NestedTestInt msg = 35;
  bool has_msg() const;
  void clear_msg() ;
  const ::protobuf_unittest::NestedTestInt& msg() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::NestedTestInt* release_msg();
  ::protobuf_unittest::NestedTestInt* mutable_msg();
  void set_allocated_msg(::protobuf_unittest::NestedTestInt* value);
  void unsafe_arena_set_allocated_msg(::protobuf_unittest::NestedTestInt* value);
  ::protobuf_unittest::NestedTestInt* unsafe_arena_release_msg();

  private:
  const ::protobuf_unittest::NestedTestInt& _internal_msg() const;
  ::protobuf_unittest::NestedTestInt* _internal_mutable_msg();

  public:
  // required int32 required_int = 36;
  bool has_required_int() const;
  void clear_required_int() ;
  ::int32_t required_int() const;
  void set_required_int(::int32_t value);

  private:
  ::int32_t _internal_required_int() const;
  void _internal_set_required_int(::int32_t value);

  public:
  static const int kMessageSetExtensionFieldNumber = 195273129;
  static ::google::protobuf::internal::ExtensionIdentifier< ::proto2_wireformat_unittest::TestMessageSet,
      ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension3 >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageSetExtension3)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::protobuf_unittest::NestedTestInt* msg_;
    ::int32_t required_int_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};// -------------------------------------------------------------------

class TestMessageSetExtension1 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageSetExtension1) */ {
 public:
  inline TestMessageSetExtension1() : TestMessageSetExtension1(nullptr) {}
  ~TestMessageSetExtension1() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessageSetExtension1(::google::protobuf::internal::ConstantInitialized);

  inline TestMessageSetExtension1(const TestMessageSetExtension1& from)
      : TestMessageSetExtension1(nullptr, from) {}
  TestMessageSetExtension1(TestMessageSetExtension1&& from) noexcept
    : TestMessageSetExtension1() {
    *this = ::std::move(from);
  }

  inline TestMessageSetExtension1& operator=(const TestMessageSetExtension1& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageSetExtension1& operator=(TestMessageSetExtension1&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessageSetExtension1& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessageSetExtension1* internal_default_instance() {
    return reinterpret_cast<const TestMessageSetExtension1*>(
               &_TestMessageSetExtension1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(TestMessageSetExtension1& a, TestMessageSetExtension1& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageSetExtension1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageSetExtension1* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageSetExtension1* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestMessageSetExtension1>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessageSetExtension1& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestMessageSetExtension1& from) {
    TestMessageSetExtension1::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMessageSetExtension1* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestMessageSetExtension1";
  }
  protected:
  explicit TestMessageSetExtension1(::google::protobuf::Arena* arena);
  TestMessageSetExtension1(::google::protobuf::Arena* arena, const TestMessageSetExtension1& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTestAliasingFieldNumber = 17,
    kRecursiveFieldNumber = 16,
    kIFieldNumber = 15,
  };
  // optional string test_aliasing = 17 [ctype = STRING_PIECE];
  bool has_test_aliasing() const;
  void clear_test_aliasing() ;
  private:  // Hidden due to unknown ctype option.
  const std::string& test_aliasing() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_test_aliasing(Arg_&& arg, Args_... args);
  std::string* mutable_test_aliasing();
  PROTOBUF_NODISCARD std::string* release_test_aliasing();
  void set_allocated_test_aliasing(std::string* value);

  private:
  const std::string& _internal_test_aliasing() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_test_aliasing(
      const std::string& value);
  std::string* _internal_mutable_test_aliasing();

  public:
  // optional .proto2_wireformat_unittest.TestMessageSet recursive = 16;
  bool has_recursive() const;
  void clear_recursive() ;
  const ::proto2_wireformat_unittest::TestMessageSet& recursive() const;
  PROTOBUF_NODISCARD ::proto2_wireformat_unittest::TestMessageSet* release_recursive();
  ::proto2_wireformat_unittest::TestMessageSet* mutable_recursive();
  void set_allocated_recursive(::proto2_wireformat_unittest::TestMessageSet* value);
  void unsafe_arena_set_allocated_recursive(::proto2_wireformat_unittest::TestMessageSet* value);
  ::proto2_wireformat_unittest::TestMessageSet* unsafe_arena_release_recursive();

  private:
  const ::proto2_wireformat_unittest::TestMessageSet& _internal_recursive() const;
  ::proto2_wireformat_unittest::TestMessageSet* _internal_mutable_recursive();

  public:
  // optional int32 i = 15;
  bool has_i() const;
  void clear_i() ;
  ::int32_t i() const;
  void set_i(::int32_t value);

  private:
  ::int32_t _internal_i() const;
  void _internal_set_i(::int32_t value);

  public:
  static const int kMessageSetExtensionFieldNumber = 1545008;
  static ::google::protobuf::internal::ExtensionIdentifier< ::proto2_wireformat_unittest::TestMessageSet,
      ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension1 >, 11, false >
    message_set_extension;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageSetExtension1)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 1,
      64, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr test_aliasing_;
    ::proto2_wireformat_unittest::TestMessageSet* recursive_;
    ::int32_t i_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};// -------------------------------------------------------------------

class TestMessageSetContainer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageSetContainer) */ {
 public:
  inline TestMessageSetContainer() : TestMessageSetContainer(nullptr) {}
  ~TestMessageSetContainer() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessageSetContainer(::google::protobuf::internal::ConstantInitialized);

  inline TestMessageSetContainer(const TestMessageSetContainer& from)
      : TestMessageSetContainer(nullptr, from) {}
  TestMessageSetContainer(TestMessageSetContainer&& from) noexcept
    : TestMessageSetContainer() {
    *this = ::std::move(from);
  }

  inline TestMessageSetContainer& operator=(const TestMessageSetContainer& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageSetContainer& operator=(TestMessageSetContainer&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessageSetContainer& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessageSetContainer* internal_default_instance() {
    return reinterpret_cast<const TestMessageSetContainer*>(
               &_TestMessageSetContainer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TestMessageSetContainer& a, TestMessageSetContainer& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageSetContainer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageSetContainer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageSetContainer* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestMessageSetContainer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessageSetContainer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestMessageSetContainer& from) {
    TestMessageSetContainer::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMessageSetContainer* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestMessageSetContainer";
  }
  protected:
  explicit TestMessageSetContainer(::google::protobuf::Arena* arena);
  TestMessageSetContainer(::google::protobuf::Arena* arena, const TestMessageSetContainer& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageSetFieldNumber = 1,
  };
  // optional .proto2_wireformat_unittest.TestMessageSet message_set = 1;
  bool has_message_set() const;
  void clear_message_set() ;
  const ::proto2_wireformat_unittest::TestMessageSet& message_set() const;
  PROTOBUF_NODISCARD ::proto2_wireformat_unittest::TestMessageSet* release_message_set();
  ::proto2_wireformat_unittest::TestMessageSet* mutable_message_set();
  void set_allocated_message_set(::proto2_wireformat_unittest::TestMessageSet* value);
  void unsafe_arena_set_allocated_message_set(::proto2_wireformat_unittest::TestMessageSet* value);
  ::proto2_wireformat_unittest::TestMessageSet* unsafe_arena_release_message_set();

  private:
  const ::proto2_wireformat_unittest::TestMessageSet& _internal_message_set() const;
  ::proto2_wireformat_unittest::TestMessageSet* _internal_mutable_message_set();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageSetContainer)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::proto2_wireformat_unittest::TestMessageSet* message_set_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};// -------------------------------------------------------------------

class RawMessageSet final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.RawMessageSet) */ {
 public:
  inline RawMessageSet() : RawMessageSet(nullptr) {}
  ~RawMessageSet() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RawMessageSet(::google::protobuf::internal::ConstantInitialized);

  inline RawMessageSet(const RawMessageSet& from)
      : RawMessageSet(nullptr, from) {}
  RawMessageSet(RawMessageSet&& from) noexcept
    : RawMessageSet() {
    *this = ::std::move(from);
  }

  inline RawMessageSet& operator=(const RawMessageSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline RawMessageSet& operator=(RawMessageSet&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RawMessageSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const RawMessageSet* internal_default_instance() {
    return reinterpret_cast<const RawMessageSet*>(
               &_RawMessageSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(RawMessageSet& a, RawMessageSet& b) {
    a.Swap(&b);
  }
  inline void Swap(RawMessageSet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RawMessageSet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RawMessageSet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RawMessageSet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RawMessageSet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RawMessageSet& from) {
    RawMessageSet::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RawMessageSet* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.RawMessageSet";
  }
  protected:
  explicit RawMessageSet(::google::protobuf::Arena* arena);
  RawMessageSet(::google::protobuf::Arena* arena, const RawMessageSet& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = RawMessageSet_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
  };
  // repeated group Item = 1 { ... };
  int item_size() const;
  private:
  int _internal_item_size() const;

  public:
  void clear_item() ;
  ::protobuf_unittest::RawMessageSet_Item* mutable_item(int index);
  ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::RawMessageSet_Item >*
      mutable_item();
  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::RawMessageSet_Item>& _internal_item() const;
  ::google::protobuf::RepeatedPtrField<::protobuf_unittest::RawMessageSet_Item>* _internal_mutable_item();
  public:
  const ::protobuf_unittest::RawMessageSet_Item& item(int index) const;
  ::protobuf_unittest::RawMessageSet_Item* add_item();
  const ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::RawMessageSet_Item >&
      item() const;
  // @@protoc_insertion_point(class_scope:protobuf_unittest.RawMessageSet)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::protobuf_unittest::RawMessageSet_Item > item_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};// -------------------------------------------------------------------

class NestedTestMessageSetContainer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.NestedTestMessageSetContainer) */ {
 public:
  inline NestedTestMessageSetContainer() : NestedTestMessageSetContainer(nullptr) {}
  ~NestedTestMessageSetContainer() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NestedTestMessageSetContainer(::google::protobuf::internal::ConstantInitialized);

  inline NestedTestMessageSetContainer(const NestedTestMessageSetContainer& from)
      : NestedTestMessageSetContainer(nullptr, from) {}
  NestedTestMessageSetContainer(NestedTestMessageSetContainer&& from) noexcept
    : NestedTestMessageSetContainer() {
    *this = ::std::move(from);
  }

  inline NestedTestMessageSetContainer& operator=(const NestedTestMessageSetContainer& from) {
    CopyFrom(from);
    return *this;
  }
  inline NestedTestMessageSetContainer& operator=(NestedTestMessageSetContainer&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NestedTestMessageSetContainer& default_instance() {
    return *internal_default_instance();
  }
  static inline const NestedTestMessageSetContainer* internal_default_instance() {
    return reinterpret_cast<const NestedTestMessageSetContainer*>(
               &_NestedTestMessageSetContainer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NestedTestMessageSetContainer& a, NestedTestMessageSetContainer& b) {
    a.Swap(&b);
  }
  inline void Swap(NestedTestMessageSetContainer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NestedTestMessageSetContainer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NestedTestMessageSetContainer* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NestedTestMessageSetContainer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NestedTestMessageSetContainer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NestedTestMessageSetContainer& from) {
    NestedTestMessageSetContainer::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NestedTestMessageSetContainer* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.NestedTestMessageSetContainer";
  }
  protected:
  explicit NestedTestMessageSetContainer(::google::protobuf::Arena* arena);
  NestedTestMessageSetContainer(::google::protobuf::Arena* arena, const NestedTestMessageSetContainer& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContainerFieldNumber = 1,
    kChildFieldNumber = 2,
    kLazyChildFieldNumber = 3,
  };
  // optional .protobuf_unittest.TestMessageSetContainer container = 1;
  bool has_container() const;
  void clear_container() ;
  const ::protobuf_unittest::TestMessageSetContainer& container() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::TestMessageSetContainer* release_container();
  ::protobuf_unittest::TestMessageSetContainer* mutable_container();
  void set_allocated_container(::protobuf_unittest::TestMessageSetContainer* value);
  void unsafe_arena_set_allocated_container(::protobuf_unittest::TestMessageSetContainer* value);
  ::protobuf_unittest::TestMessageSetContainer* unsafe_arena_release_container();

  private:
  const ::protobuf_unittest::TestMessageSetContainer& _internal_container() const;
  ::protobuf_unittest::TestMessageSetContainer* _internal_mutable_container();

  public:
  // optional .protobuf_unittest.NestedTestMessageSetContainer child = 2;
  bool has_child() const;
  void clear_child() ;
  const ::protobuf_unittest::NestedTestMessageSetContainer& child() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::NestedTestMessageSetContainer* release_child();
  ::protobuf_unittest::NestedTestMessageSetContainer* mutable_child();
  void set_allocated_child(::protobuf_unittest::NestedTestMessageSetContainer* value);
  void unsafe_arena_set_allocated_child(::protobuf_unittest::NestedTestMessageSetContainer* value);
  ::protobuf_unittest::NestedTestMessageSetContainer* unsafe_arena_release_child();

  private:
  const ::protobuf_unittest::NestedTestMessageSetContainer& _internal_child() const;
  ::protobuf_unittest::NestedTestMessageSetContainer* _internal_mutable_child();

  public:
  // optional .protobuf_unittest.NestedTestMessageSetContainer lazy_child = 3 [lazy = true];
  bool has_lazy_child() const;
  void clear_lazy_child() ;
  const ::protobuf_unittest::NestedTestMessageSetContainer& lazy_child() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::NestedTestMessageSetContainer* release_lazy_child();
  ::protobuf_unittest::NestedTestMessageSetContainer* mutable_lazy_child();
  void set_allocated_lazy_child(::protobuf_unittest::NestedTestMessageSetContainer* value);
  void unsafe_arena_set_allocated_lazy_child(::protobuf_unittest::NestedTestMessageSetContainer* value);
  ::protobuf_unittest::NestedTestMessageSetContainer* unsafe_arena_release_lazy_child();

  private:
  const ::protobuf_unittest::NestedTestMessageSetContainer& _internal_lazy_child() const;
  ::protobuf_unittest::NestedTestMessageSetContainer* _internal_mutable_lazy_child();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.NestedTestMessageSetContainer)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::protobuf_unittest::TestMessageSetContainer* container_;
    ::protobuf_unittest::NestedTestMessageSetContainer* child_;
    ::protobuf_unittest::NestedTestMessageSetContainer* lazy_child_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestMessageSetContainer

// optional .proto2_wireformat_unittest.TestMessageSet message_set = 1;
inline bool TestMessageSetContainer::has_message_set() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_set_ != nullptr);
  return value;
}
inline const ::proto2_wireformat_unittest::TestMessageSet& TestMessageSetContainer::_internal_message_set() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto2_wireformat_unittest::TestMessageSet* p = _impl_.message_set_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto2_wireformat_unittest::TestMessageSet&>(::proto2_wireformat_unittest::_TestMessageSet_default_instance_);
}
inline const ::proto2_wireformat_unittest::TestMessageSet& TestMessageSetContainer::message_set() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetContainer.message_set)
  return _internal_message_set();
}
inline void TestMessageSetContainer::unsafe_arena_set_allocated_message_set(::proto2_wireformat_unittest::TestMessageSet* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_set_);
  }
  _impl_.message_set_ = reinterpret_cast<::proto2_wireformat_unittest::TestMessageSet*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestMessageSetContainer.message_set)
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetContainer::release_message_set() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto2_wireformat_unittest::TestMessageSet* released = _impl_.message_set_;
  _impl_.message_set_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetContainer::unsafe_arena_release_message_set() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMessageSetContainer.message_set)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::proto2_wireformat_unittest::TestMessageSet* temp = _impl_.message_set_;
  _impl_.message_set_ = nullptr;
  return temp;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetContainer::_internal_mutable_message_set() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.message_set_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto2_wireformat_unittest::TestMessageSet>(GetArena());
    _impl_.message_set_ = reinterpret_cast<::proto2_wireformat_unittest::TestMessageSet*>(p);
  }
  return _impl_.message_set_;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetContainer::mutable_message_set() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto2_wireformat_unittest::TestMessageSet* _msg = _internal_mutable_message_set();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMessageSetContainer.message_set)
  return _msg;
}
inline void TestMessageSetContainer::set_allocated_message_set(::proto2_wireformat_unittest::TestMessageSet* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.message_set_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.message_set_ = reinterpret_cast<::proto2_wireformat_unittest::TestMessageSet*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMessageSetContainer.message_set)
}

// -------------------------------------------------------------------

// NestedTestMessageSetContainer

// optional .protobuf_unittest.TestMessageSetContainer container = 1;
inline bool NestedTestMessageSetContainer::has_container() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.container_ != nullptr);
  return value;
}
inline void NestedTestMessageSetContainer::clear_container() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.container_ != nullptr) _impl_.container_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::protobuf_unittest::TestMessageSetContainer& NestedTestMessageSetContainer::_internal_container() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::protobuf_unittest::TestMessageSetContainer* p = _impl_.container_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::TestMessageSetContainer&>(::protobuf_unittest::_TestMessageSetContainer_default_instance_);
}
inline const ::protobuf_unittest::TestMessageSetContainer& NestedTestMessageSetContainer::container() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NestedTestMessageSetContainer.container)
  return _internal_container();
}
inline void NestedTestMessageSetContainer::unsafe_arena_set_allocated_container(::protobuf_unittest::TestMessageSetContainer* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.container_);
  }
  _impl_.container_ = reinterpret_cast<::protobuf_unittest::TestMessageSetContainer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.NestedTestMessageSetContainer.container)
}
inline ::protobuf_unittest::TestMessageSetContainer* NestedTestMessageSetContainer::release_container() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::TestMessageSetContainer* released = _impl_.container_;
  _impl_.container_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest::TestMessageSetContainer* NestedTestMessageSetContainer::unsafe_arena_release_container() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.NestedTestMessageSetContainer.container)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::TestMessageSetContainer* temp = _impl_.container_;
  _impl_.container_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::TestMessageSetContainer* NestedTestMessageSetContainer::_internal_mutable_container() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.container_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::TestMessageSetContainer>(GetArena());
    _impl_.container_ = reinterpret_cast<::protobuf_unittest::TestMessageSetContainer*>(p);
  }
  return _impl_.container_;
}
inline ::protobuf_unittest::TestMessageSetContainer* NestedTestMessageSetContainer::mutable_container() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::protobuf_unittest::TestMessageSetContainer* _msg = _internal_mutable_container();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.NestedTestMessageSetContainer.container)
  return _msg;
}
inline void NestedTestMessageSetContainer::set_allocated_container(::protobuf_unittest::TestMessageSetContainer* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::protobuf_unittest::TestMessageSetContainer*>(_impl_.container_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::protobuf_unittest::TestMessageSetContainer*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.container_ = reinterpret_cast<::protobuf_unittest::TestMessageSetContainer*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.NestedTestMessageSetContainer.container)
}

// optional .protobuf_unittest.NestedTestMessageSetContainer child = 2;
inline bool NestedTestMessageSetContainer::has_child() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.child_ != nullptr);
  return value;
}
inline void NestedTestMessageSetContainer::clear_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.child_ != nullptr) _impl_.child_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::protobuf_unittest::NestedTestMessageSetContainer& NestedTestMessageSetContainer::_internal_child() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::protobuf_unittest::NestedTestMessageSetContainer* p = _impl_.child_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::NestedTestMessageSetContainer&>(::protobuf_unittest::_NestedTestMessageSetContainer_default_instance_);
}
inline const ::protobuf_unittest::NestedTestMessageSetContainer& NestedTestMessageSetContainer::child() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NestedTestMessageSetContainer.child)
  return _internal_child();
}
inline void NestedTestMessageSetContainer::unsafe_arena_set_allocated_child(::protobuf_unittest::NestedTestMessageSetContainer* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.child_);
  }
  _impl_.child_ = reinterpret_cast<::protobuf_unittest::NestedTestMessageSetContainer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.NestedTestMessageSetContainer.child)
}
inline ::protobuf_unittest::NestedTestMessageSetContainer* NestedTestMessageSetContainer::release_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::protobuf_unittest::NestedTestMessageSetContainer* released = _impl_.child_;
  _impl_.child_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest::NestedTestMessageSetContainer* NestedTestMessageSetContainer::unsafe_arena_release_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.NestedTestMessageSetContainer.child)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::protobuf_unittest::NestedTestMessageSetContainer* temp = _impl_.child_;
  _impl_.child_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::NestedTestMessageSetContainer* NestedTestMessageSetContainer::_internal_mutable_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.child_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::NestedTestMessageSetContainer>(GetArena());
    _impl_.child_ = reinterpret_cast<::protobuf_unittest::NestedTestMessageSetContainer*>(p);
  }
  return _impl_.child_;
}
inline ::protobuf_unittest::NestedTestMessageSetContainer* NestedTestMessageSetContainer::mutable_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::protobuf_unittest::NestedTestMessageSetContainer* _msg = _internal_mutable_child();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.NestedTestMessageSetContainer.child)
  return _msg;
}
inline void NestedTestMessageSetContainer::set_allocated_child(::protobuf_unittest::NestedTestMessageSetContainer* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::protobuf_unittest::NestedTestMessageSetContainer*>(_impl_.child_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::protobuf_unittest::NestedTestMessageSetContainer*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.child_ = reinterpret_cast<::protobuf_unittest::NestedTestMessageSetContainer*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.NestedTestMessageSetContainer.child)
}

// optional .protobuf_unittest.NestedTestMessageSetContainer lazy_child = 3 [lazy = true];
inline bool NestedTestMessageSetContainer::has_lazy_child() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lazy_child_ != nullptr);
  return value;
}
inline void NestedTestMessageSetContainer::clear_lazy_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.lazy_child_ != nullptr) _impl_.lazy_child_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::protobuf_unittest::NestedTestMessageSetContainer& NestedTestMessageSetContainer::_internal_lazy_child() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::protobuf_unittest::NestedTestMessageSetContainer* p = _impl_.lazy_child_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::NestedTestMessageSetContainer&>(::protobuf_unittest::_NestedTestMessageSetContainer_default_instance_);
}
inline const ::protobuf_unittest::NestedTestMessageSetContainer& NestedTestMessageSetContainer::lazy_child() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NestedTestMessageSetContainer.lazy_child)
  return _internal_lazy_child();
}
inline void NestedTestMessageSetContainer::unsafe_arena_set_allocated_lazy_child(::protobuf_unittest::NestedTestMessageSetContainer* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lazy_child_);
  }
  _impl_.lazy_child_ = reinterpret_cast<::protobuf_unittest::NestedTestMessageSetContainer*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.NestedTestMessageSetContainer.lazy_child)
}
inline ::protobuf_unittest::NestedTestMessageSetContainer* NestedTestMessageSetContainer::release_lazy_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::protobuf_unittest::NestedTestMessageSetContainer* released = _impl_.lazy_child_;
  _impl_.lazy_child_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest::NestedTestMessageSetContainer* NestedTestMessageSetContainer::unsafe_arena_release_lazy_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.NestedTestMessageSetContainer.lazy_child)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::protobuf_unittest::NestedTestMessageSetContainer* temp = _impl_.lazy_child_;
  _impl_.lazy_child_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::NestedTestMessageSetContainer* NestedTestMessageSetContainer::_internal_mutable_lazy_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.lazy_child_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::NestedTestMessageSetContainer>(GetArena());
    _impl_.lazy_child_ = reinterpret_cast<::protobuf_unittest::NestedTestMessageSetContainer*>(p);
  }
  return _impl_.lazy_child_;
}
inline ::protobuf_unittest::NestedTestMessageSetContainer* NestedTestMessageSetContainer::mutable_lazy_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::protobuf_unittest::NestedTestMessageSetContainer* _msg = _internal_mutable_lazy_child();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.NestedTestMessageSetContainer.lazy_child)
  return _msg;
}
inline void NestedTestMessageSetContainer::set_allocated_lazy_child(::protobuf_unittest::NestedTestMessageSetContainer* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::protobuf_unittest::NestedTestMessageSetContainer*>(_impl_.lazy_child_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::protobuf_unittest::NestedTestMessageSetContainer*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.lazy_child_ = reinterpret_cast<::protobuf_unittest::NestedTestMessageSetContainer*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.NestedTestMessageSetContainer.lazy_child)
}

// -------------------------------------------------------------------

// NestedTestInt

// optional fixed32 a = 1;
inline bool NestedTestInt::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NestedTestInt::clear_a() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.a_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t NestedTestInt::a() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NestedTestInt.a)
  return _internal_a();
}
inline void NestedTestInt::set_a(::uint32_t value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.NestedTestInt.a)
}
inline ::uint32_t NestedTestInt::_internal_a() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a_;
}
inline void NestedTestInt::_internal_set_a(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.a_ = value;
}

// optional int32 b = 3;
inline bool NestedTestInt::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NestedTestInt::clear_b() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t NestedTestInt::b() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NestedTestInt.b)
  return _internal_b();
}
inline void NestedTestInt::set_b(::int32_t value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.NestedTestInt.b)
}
inline ::int32_t NestedTestInt::_internal_b() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b_;
}
inline void NestedTestInt::_internal_set_b(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.b_ = value;
}

// optional .protobuf_unittest.NestedTestInt child = 2;
inline bool NestedTestInt::has_child() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.child_ != nullptr);
  return value;
}
inline void NestedTestInt::clear_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.child_ != nullptr) _impl_.child_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::protobuf_unittest::NestedTestInt& NestedTestInt::_internal_child() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::protobuf_unittest::NestedTestInt* p = _impl_.child_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::NestedTestInt&>(::protobuf_unittest::_NestedTestInt_default_instance_);
}
inline const ::protobuf_unittest::NestedTestInt& NestedTestInt::child() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.NestedTestInt.child)
  return _internal_child();
}
inline void NestedTestInt::unsafe_arena_set_allocated_child(::protobuf_unittest::NestedTestInt* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.child_);
  }
  _impl_.child_ = reinterpret_cast<::protobuf_unittest::NestedTestInt*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.NestedTestInt.child)
}
inline ::protobuf_unittest::NestedTestInt* NestedTestInt::release_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::NestedTestInt* released = _impl_.child_;
  _impl_.child_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest::NestedTestInt* NestedTestInt::unsafe_arena_release_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.NestedTestInt.child)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::NestedTestInt* temp = _impl_.child_;
  _impl_.child_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::NestedTestInt* NestedTestInt::_internal_mutable_child() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.child_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::NestedTestInt>(GetArena());
    _impl_.child_ = reinterpret_cast<::protobuf_unittest::NestedTestInt*>(p);
  }
  return _impl_.child_;
}
inline ::protobuf_unittest::NestedTestInt* NestedTestInt::mutable_child() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::protobuf_unittest::NestedTestInt* _msg = _internal_mutable_child();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.NestedTestInt.child)
  return _msg;
}
inline void NestedTestInt::set_allocated_child(::protobuf_unittest::NestedTestInt* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::protobuf_unittest::NestedTestInt*>(_impl_.child_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::protobuf_unittest::NestedTestInt*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.child_ = reinterpret_cast<::protobuf_unittest::NestedTestInt*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.NestedTestInt.child)
}

// -------------------------------------------------------------------

// TestMessageSetExtension1

// optional int32 i = 15;
inline bool TestMessageSetExtension1::has_i() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TestMessageSetExtension1::clear_i() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.i_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t TestMessageSetExtension1::i() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetExtension1.i)
  return _internal_i();
}
inline void TestMessageSetExtension1::set_i(::int32_t value) {
  _internal_set_i(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestMessageSetExtension1.i)
}
inline ::int32_t TestMessageSetExtension1::_internal_i() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.i_;
}
inline void TestMessageSetExtension1::_internal_set_i(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.i_ = value;
}

// optional .proto2_wireformat_unittest.TestMessageSet recursive = 16;
inline bool TestMessageSetExtension1::has_recursive() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.recursive_ != nullptr);
  return value;
}
inline const ::proto2_wireformat_unittest::TestMessageSet& TestMessageSetExtension1::_internal_recursive() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::proto2_wireformat_unittest::TestMessageSet* p = _impl_.recursive_;
  return p != nullptr ? *p : reinterpret_cast<const ::proto2_wireformat_unittest::TestMessageSet&>(::proto2_wireformat_unittest::_TestMessageSet_default_instance_);
}
inline const ::proto2_wireformat_unittest::TestMessageSet& TestMessageSetExtension1::recursive() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetExtension1.recursive)
  return _internal_recursive();
}
inline void TestMessageSetExtension1::unsafe_arena_set_allocated_recursive(::proto2_wireformat_unittest::TestMessageSet* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.recursive_);
  }
  _impl_.recursive_ = reinterpret_cast<::proto2_wireformat_unittest::TestMessageSet*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestMessageSetExtension1.recursive)
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetExtension1::release_recursive() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::proto2_wireformat_unittest::TestMessageSet* released = _impl_.recursive_;
  _impl_.recursive_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetExtension1::unsafe_arena_release_recursive() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMessageSetExtension1.recursive)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::proto2_wireformat_unittest::TestMessageSet* temp = _impl_.recursive_;
  _impl_.recursive_ = nullptr;
  return temp;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetExtension1::_internal_mutable_recursive() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.recursive_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto2_wireformat_unittest::TestMessageSet>(GetArena());
    _impl_.recursive_ = reinterpret_cast<::proto2_wireformat_unittest::TestMessageSet*>(p);
  }
  return _impl_.recursive_;
}
inline ::proto2_wireformat_unittest::TestMessageSet* TestMessageSetExtension1::mutable_recursive() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::proto2_wireformat_unittest::TestMessageSet* _msg = _internal_mutable_recursive();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMessageSetExtension1.recursive)
  return _msg;
}
inline void TestMessageSetExtension1::set_allocated_recursive(::proto2_wireformat_unittest::TestMessageSet* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.recursive_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.recursive_ = reinterpret_cast<::proto2_wireformat_unittest::TestMessageSet*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMessageSetExtension1.recursive)
}

// optional string test_aliasing = 17 [ctype = STRING_PIECE];
inline bool TestMessageSetExtension1::has_test_aliasing() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestMessageSetExtension1::clear_test_aliasing() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.test_aliasing_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestMessageSetExtension1::test_aliasing() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
  return _internal_test_aliasing();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestMessageSetExtension1::set_test_aliasing(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.test_aliasing_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
}
inline std::string* TestMessageSetExtension1::mutable_test_aliasing() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_test_aliasing();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
  return _s;
}
inline const std::string& TestMessageSetExtension1::_internal_test_aliasing() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.test_aliasing_.Get();
}
inline void TestMessageSetExtension1::_internal_set_test_aliasing(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.test_aliasing_.Set(value, GetArena());
}
inline std::string* TestMessageSetExtension1::_internal_mutable_test_aliasing() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.test_aliasing_.Mutable( GetArena());
}
inline std::string* TestMessageSetExtension1::release_test_aliasing() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.test_aliasing_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.test_aliasing_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestMessageSetExtension1::set_allocated_test_aliasing(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.test_aliasing_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.test_aliasing_.IsDefault()) {
          _impl_.test_aliasing_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMessageSetExtension1.test_aliasing)
}

// -------------------------------------------------------------------

// TestMessageSetExtension2

// optional string str = 25;
inline bool TestMessageSetExtension2::has_str() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestMessageSetExtension2::clear_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.str_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestMessageSetExtension2::str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetExtension2.str)
  return _internal_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestMessageSetExtension2::set_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestMessageSetExtension2.str)
}
inline std::string* TestMessageSetExtension2::mutable_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_str();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMessageSetExtension2.str)
  return _s;
}
inline const std::string& TestMessageSetExtension2::_internal_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.str_.Get();
}
inline void TestMessageSetExtension2::_internal_set_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str_.Set(value, GetArena());
}
inline std::string* TestMessageSetExtension2::_internal_mutable_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.str_.Mutable( GetArena());
}
inline std::string* TestMessageSetExtension2::release_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMessageSetExtension2.str)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.str_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.str_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestMessageSetExtension2::set_allocated_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.str_.IsDefault()) {
          _impl_.str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMessageSetExtension2.str)
}

// -------------------------------------------------------------------

// TestMessageSetExtension3

// optional .protobuf_unittest.NestedTestInt msg = 35;
inline bool TestMessageSetExtension3::has_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.msg_ != nullptr);
  return value;
}
inline void TestMessageSetExtension3::clear_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.msg_ != nullptr) _impl_.msg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::protobuf_unittest::NestedTestInt& TestMessageSetExtension3::_internal_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::protobuf_unittest::NestedTestInt* p = _impl_.msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::NestedTestInt&>(::protobuf_unittest::_NestedTestInt_default_instance_);
}
inline const ::protobuf_unittest::NestedTestInt& TestMessageSetExtension3::msg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetExtension3.msg)
  return _internal_msg();
}
inline void TestMessageSetExtension3::unsafe_arena_set_allocated_msg(::protobuf_unittest::NestedTestInt* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.msg_);
  }
  _impl_.msg_ = reinterpret_cast<::protobuf_unittest::NestedTestInt*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestMessageSetExtension3.msg)
}
inline ::protobuf_unittest::NestedTestInt* TestMessageSetExtension3::release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::NestedTestInt* released = _impl_.msg_;
  _impl_.msg_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest::NestedTestInt* TestMessageSetExtension3::unsafe_arena_release_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMessageSetExtension3.msg)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::NestedTestInt* temp = _impl_.msg_;
  _impl_.msg_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::NestedTestInt* TestMessageSetExtension3::_internal_mutable_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::NestedTestInt>(GetArena());
    _impl_.msg_ = reinterpret_cast<::protobuf_unittest::NestedTestInt*>(p);
  }
  return _impl_.msg_;
}
inline ::protobuf_unittest::NestedTestInt* TestMessageSetExtension3::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::protobuf_unittest::NestedTestInt* _msg = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMessageSetExtension3.msg)
  return _msg;
}
inline void TestMessageSetExtension3::set_allocated_msg(::protobuf_unittest::NestedTestInt* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::protobuf_unittest::NestedTestInt*>(_impl_.msg_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::protobuf_unittest::NestedTestInt*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.msg_ = reinterpret_cast<::protobuf_unittest::NestedTestInt*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMessageSetExtension3.msg)
}

// required int32 required_int = 36;
inline bool TestMessageSetExtension3::has_required_int() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestMessageSetExtension3::clear_required_int() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.required_int_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t TestMessageSetExtension3::required_int() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMessageSetExtension3.required_int)
  return _internal_required_int();
}
inline void TestMessageSetExtension3::set_required_int(::int32_t value) {
  _internal_set_required_int(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.TestMessageSetExtension3.required_int)
}
inline ::int32_t TestMessageSetExtension3::_internal_required_int() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.required_int_;
}
inline void TestMessageSetExtension3::_internal_set_required_int(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.required_int_ = value;
}

// -------------------------------------------------------------------

// RawMessageSet_Item

// required int32 type_id = 2;
inline bool RawMessageSet_Item::has_type_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void RawMessageSet_Item::clear_type_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t RawMessageSet_Item::type_id() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.RawMessageSet.Item.type_id)
  return _internal_type_id();
}
inline void RawMessageSet_Item::set_type_id(::int32_t value) {
  _internal_set_type_id(value);
  // @@protoc_insertion_point(field_set:protobuf_unittest.RawMessageSet.Item.type_id)
}
inline ::int32_t RawMessageSet_Item::_internal_type_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_id_;
}
inline void RawMessageSet_Item::_internal_set_type_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_id_ = value;
}

// required bytes message = 3;
inline bool RawMessageSet_Item::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void RawMessageSet_Item::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RawMessageSet_Item::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.RawMessageSet.Item.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RawMessageSet_Item::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_unittest.RawMessageSet.Item.message)
}
inline std::string* RawMessageSet_Item::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.RawMessageSet.Item.message)
  return _s;
}
inline const std::string& RawMessageSet_Item::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void RawMessageSet_Item::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* RawMessageSet_Item::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* RawMessageSet_Item::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.RawMessageSet.Item.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void RawMessageSet_Item::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.RawMessageSet.Item.message)
}

// -------------------------------------------------------------------

// RawMessageSet

// repeated group Item = 1 { ... };
inline int RawMessageSet::_internal_item_size() const {
  return _internal_item().size();
}
inline int RawMessageSet::item_size() const {
  return _internal_item_size();
}
inline void RawMessageSet::clear_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.item_.Clear();
}
inline ::protobuf_unittest::RawMessageSet_Item* RawMessageSet::mutable_item(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.RawMessageSet.item)
  return _internal_mutable_item()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::RawMessageSet_Item>* RawMessageSet::mutable_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_unittest.RawMessageSet.item)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_item();
}
inline const ::protobuf_unittest::RawMessageSet_Item& RawMessageSet::item(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.RawMessageSet.item)
  return _internal_item().Get(index);
}
inline ::protobuf_unittest::RawMessageSet_Item* RawMessageSet::add_item() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::protobuf_unittest::RawMessageSet_Item* _add = _internal_mutable_item()->Add();
  // @@protoc_insertion_point(field_add:protobuf_unittest.RawMessageSet.item)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::RawMessageSet_Item>& RawMessageSet::item() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_unittest.RawMessageSet.item)
  return _internal_item();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_unittest::RawMessageSet_Item>&
RawMessageSet::_internal_item() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.item_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_unittest::RawMessageSet_Item>*
RawMessageSet::_internal_mutable_item() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.item_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2funittest_5fmset_2eproto_2epb_2eh
