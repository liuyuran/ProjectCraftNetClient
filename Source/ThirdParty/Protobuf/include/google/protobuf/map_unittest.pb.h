// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/map_unittest.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fmap_5funittest_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fmap_5funittest_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/unittest.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fmap_5funittest_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fprotobuf_2fmap_5funittest_2eproto;
namespace protobuf_unittest {
class MessageContainingEnumCalledType;
struct MessageContainingEnumCalledTypeDefaultTypeInternal;
extern MessageContainingEnumCalledTypeDefaultTypeInternal _MessageContainingEnumCalledType_default_instance_;
class MessageContainingEnumCalledType_TypeEntry_DoNotUse;
struct MessageContainingEnumCalledType_TypeEntry_DoNotUseDefaultTypeInternal;
extern MessageContainingEnumCalledType_TypeEntry_DoNotUseDefaultTypeInternal _MessageContainingEnumCalledType_TypeEntry_DoNotUse_default_instance_;
class MessageContainingMapCalledEntry;
struct MessageContainingMapCalledEntryDefaultTypeInternal;
extern MessageContainingMapCalledEntryDefaultTypeInternal _MessageContainingMapCalledEntry_default_instance_;
class MessageContainingMapCalledEntry_EntryEntry_DoNotUse;
struct MessageContainingMapCalledEntry_EntryEntry_DoNotUseDefaultTypeInternal;
extern MessageContainingMapCalledEntry_EntryEntry_DoNotUseDefaultTypeInternal _MessageContainingMapCalledEntry_EntryEntry_DoNotUse_default_instance_;
class TestArenaMap;
struct TestArenaMapDefaultTypeInternal;
extern TestArenaMapDefaultTypeInternal _TestArenaMap_default_instance_;
class TestArenaMap_MapBoolBoolEntry_DoNotUse;
struct TestArenaMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapBoolBoolEntry_DoNotUse_default_instance_;
class TestArenaMap_MapFixed32Fixed32Entry_DoNotUse;
struct TestArenaMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
class TestArenaMap_MapFixed64Fixed64Entry_DoNotUse;
struct TestArenaMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
class TestArenaMap_MapInt32BytesEntry_DoNotUse;
struct TestArenaMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32BytesEntry_DoNotUse_default_instance_;
class TestArenaMap_MapInt32DoubleEntry_DoNotUse;
struct TestArenaMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32DoubleEntry_DoNotUse_default_instance_;
class TestArenaMap_MapInt32EnumEntry_DoNotUse;
struct TestArenaMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32EnumEntry_DoNotUse_default_instance_;
class TestArenaMap_MapInt32FloatEntry_DoNotUse;
struct TestArenaMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32FloatEntry_DoNotUse_default_instance_;
class TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse;
struct TestArenaMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse_default_instance_;
class TestArenaMap_MapInt32Int32Entry_DoNotUse;
struct TestArenaMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt32Int32Entry_DoNotUse_default_instance_;
class TestArenaMap_MapInt64Int64Entry_DoNotUse;
struct TestArenaMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapInt64Int64Entry_DoNotUse_default_instance_;
class TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse;
struct TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
class TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse;
struct TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
class TestArenaMap_MapSint32Sint32Entry_DoNotUse;
struct TestArenaMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapSint32Sint32Entry_DoNotUse_default_instance_;
class TestArenaMap_MapSint64Sint64Entry_DoNotUse;
struct TestArenaMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapSint64Sint64Entry_DoNotUse_default_instance_;
class TestArenaMap_MapStringStringEntry_DoNotUse;
struct TestArenaMap_MapStringStringEntry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapStringStringEntry_DoNotUseDefaultTypeInternal _TestArenaMap_MapStringStringEntry_DoNotUse_default_instance_;
class TestArenaMap_MapUint32Uint32Entry_DoNotUse;
struct TestArenaMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapUint32Uint32Entry_DoNotUse_default_instance_;
class TestArenaMap_MapUint64Uint64Entry_DoNotUse;
struct TestArenaMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal;
extern TestArenaMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal _TestArenaMap_MapUint64Uint64Entry_DoNotUse_default_instance_;
class TestMap;
struct TestMapDefaultTypeInternal;
extern TestMapDefaultTypeInternal _TestMap_default_instance_;
class TestMapSubmessage;
struct TestMapSubmessageDefaultTypeInternal;
extern TestMapSubmessageDefaultTypeInternal _TestMapSubmessage_default_instance_;
class TestMap_MapBoolBoolEntry_DoNotUse;
struct TestMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal;
extern TestMap_MapBoolBoolEntry_DoNotUseDefaultTypeInternal _TestMap_MapBoolBoolEntry_DoNotUse_default_instance_;
class TestMap_MapFixed32Fixed32Entry_DoNotUse;
struct TestMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal;
extern TestMap_MapFixed32Fixed32Entry_DoNotUseDefaultTypeInternal _TestMap_MapFixed32Fixed32Entry_DoNotUse_default_instance_;
class TestMap_MapFixed64Fixed64Entry_DoNotUse;
struct TestMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal;
extern TestMap_MapFixed64Fixed64Entry_DoNotUseDefaultTypeInternal _TestMap_MapFixed64Fixed64Entry_DoNotUse_default_instance_;
class TestMap_MapInt32AllTypesEntry_DoNotUse;
struct TestMap_MapInt32AllTypesEntry_DoNotUseDefaultTypeInternal;
extern TestMap_MapInt32AllTypesEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32AllTypesEntry_DoNotUse_default_instance_;
class TestMap_MapInt32BytesEntry_DoNotUse;
struct TestMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal;
extern TestMap_MapInt32BytesEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32BytesEntry_DoNotUse_default_instance_;
class TestMap_MapInt32DoubleEntry_DoNotUse;
struct TestMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal;
extern TestMap_MapInt32DoubleEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32DoubleEntry_DoNotUse_default_instance_;
class TestMap_MapInt32EnumEntry_DoNotUse;
struct TestMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal;
extern TestMap_MapInt32EnumEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32EnumEntry_DoNotUse_default_instance_;
class TestMap_MapInt32FloatEntry_DoNotUse;
struct TestMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal;
extern TestMap_MapInt32FloatEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32FloatEntry_DoNotUse_default_instance_;
class TestMap_MapInt32ForeignMessageEntry_DoNotUse;
struct TestMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal;
extern TestMap_MapInt32ForeignMessageEntry_DoNotUseDefaultTypeInternal _TestMap_MapInt32ForeignMessageEntry_DoNotUse_default_instance_;
class TestMap_MapInt32Int32Entry_DoNotUse;
struct TestMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal;
extern TestMap_MapInt32Int32Entry_DoNotUseDefaultTypeInternal _TestMap_MapInt32Int32Entry_DoNotUse_default_instance_;
class TestMap_MapInt64Int64Entry_DoNotUse;
struct TestMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal;
extern TestMap_MapInt64Int64Entry_DoNotUseDefaultTypeInternal _TestMap_MapInt64Int64Entry_DoNotUse_default_instance_;
class TestMap_MapSfixed32Sfixed32Entry_DoNotUse;
struct TestMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal;
extern TestMap_MapSfixed32Sfixed32Entry_DoNotUseDefaultTypeInternal _TestMap_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_;
class TestMap_MapSfixed64Sfixed64Entry_DoNotUse;
struct TestMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal;
extern TestMap_MapSfixed64Sfixed64Entry_DoNotUseDefaultTypeInternal _TestMap_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_;
class TestMap_MapSint32Sint32Entry_DoNotUse;
struct TestMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal;
extern TestMap_MapSint32Sint32Entry_DoNotUseDefaultTypeInternal _TestMap_MapSint32Sint32Entry_DoNotUse_default_instance_;
class TestMap_MapSint64Sint64Entry_DoNotUse;
struct TestMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal;
extern TestMap_MapSint64Sint64Entry_DoNotUseDefaultTypeInternal _TestMap_MapSint64Sint64Entry_DoNotUse_default_instance_;
class TestMap_MapStringForeignMessageEntry_DoNotUse;
struct TestMap_MapStringForeignMessageEntry_DoNotUseDefaultTypeInternal;
extern TestMap_MapStringForeignMessageEntry_DoNotUseDefaultTypeInternal _TestMap_MapStringForeignMessageEntry_DoNotUse_default_instance_;
class TestMap_MapStringStringEntry_DoNotUse;
struct TestMap_MapStringStringEntry_DoNotUseDefaultTypeInternal;
extern TestMap_MapStringStringEntry_DoNotUseDefaultTypeInternal _TestMap_MapStringStringEntry_DoNotUse_default_instance_;
class TestMap_MapUint32Uint32Entry_DoNotUse;
struct TestMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal;
extern TestMap_MapUint32Uint32Entry_DoNotUseDefaultTypeInternal _TestMap_MapUint32Uint32Entry_DoNotUse_default_instance_;
class TestMap_MapUint64Uint64Entry_DoNotUse;
struct TestMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal;
extern TestMap_MapUint64Uint64Entry_DoNotUseDefaultTypeInternal _TestMap_MapUint64Uint64Entry_DoNotUse_default_instance_;
class TestMessageMap;
struct TestMessageMapDefaultTypeInternal;
extern TestMessageMapDefaultTypeInternal _TestMessageMap_default_instance_;
class TestMessageMap_MapInt32MessageEntry_DoNotUse;
struct TestMessageMap_MapInt32MessageEntry_DoNotUseDefaultTypeInternal;
extern TestMessageMap_MapInt32MessageEntry_DoNotUseDefaultTypeInternal _TestMessageMap_MapInt32MessageEntry_DoNotUse_default_instance_;
class TestRecursiveMapMessage;
struct TestRecursiveMapMessageDefaultTypeInternal;
extern TestRecursiveMapMessageDefaultTypeInternal _TestRecursiveMapMessage_default_instance_;
class TestRecursiveMapMessage_AEntry_DoNotUse;
struct TestRecursiveMapMessage_AEntry_DoNotUseDefaultTypeInternal;
extern TestRecursiveMapMessage_AEntry_DoNotUseDefaultTypeInternal _TestRecursiveMapMessage_AEntry_DoNotUse_default_instance_;
class TestRequiredMessageMap;
struct TestRequiredMessageMapDefaultTypeInternal;
extern TestRequiredMessageMapDefaultTypeInternal _TestRequiredMessageMap_default_instance_;
class TestRequiredMessageMap_MapFieldEntry_DoNotUse;
struct TestRequiredMessageMap_MapFieldEntry_DoNotUseDefaultTypeInternal;
extern TestRequiredMessageMap_MapFieldEntry_DoNotUseDefaultTypeInternal _TestRequiredMessageMap_MapFieldEntry_DoNotUse_default_instance_;
class TestSameTypeMap;
struct TestSameTypeMapDefaultTypeInternal;
extern TestSameTypeMapDefaultTypeInternal _TestSameTypeMap_default_instance_;
class TestSameTypeMap_Map1Entry_DoNotUse;
struct TestSameTypeMap_Map1Entry_DoNotUseDefaultTypeInternal;
extern TestSameTypeMap_Map1Entry_DoNotUseDefaultTypeInternal _TestSameTypeMap_Map1Entry_DoNotUse_default_instance_;
class TestSameTypeMap_Map2Entry_DoNotUse;
struct TestSameTypeMap_Map2Entry_DoNotUseDefaultTypeInternal;
extern TestSameTypeMap_Map2Entry_DoNotUseDefaultTypeInternal _TestSameTypeMap_Map2Entry_DoNotUse_default_instance_;
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf_unittest {
enum MessageContainingEnumCalledType_Type : int {
  MessageContainingEnumCalledType_Type_TYPE_FOO = 0,
  MessageContainingEnumCalledType_Type_MessageContainingEnumCalledType_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MessageContainingEnumCalledType_Type_MessageContainingEnumCalledType_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MessageContainingEnumCalledType_Type_IsValid(int value);
extern const uint32_t MessageContainingEnumCalledType_Type_internal_data_[];
constexpr MessageContainingEnumCalledType_Type MessageContainingEnumCalledType_Type_Type_MIN = static_cast<MessageContainingEnumCalledType_Type>(0);
constexpr MessageContainingEnumCalledType_Type MessageContainingEnumCalledType_Type_Type_MAX = static_cast<MessageContainingEnumCalledType_Type>(0);
constexpr int MessageContainingEnumCalledType_Type_Type_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
MessageContainingEnumCalledType_Type_descriptor();
template <typename T>
const std::string& MessageContainingEnumCalledType_Type_Name(T value) {
  static_assert(std::is_same<T, MessageContainingEnumCalledType_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return MessageContainingEnumCalledType_Type_Name(static_cast<MessageContainingEnumCalledType_Type>(value));
}
template <>
inline const std::string& MessageContainingEnumCalledType_Type_Name(MessageContainingEnumCalledType_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MessageContainingEnumCalledType_Type_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool MessageContainingEnumCalledType_Type_Parse(absl::string_view name, MessageContainingEnumCalledType_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageContainingEnumCalledType_Type>(
      MessageContainingEnumCalledType_Type_descriptor(), name, value);
}
enum MapEnum : int {
  MAP_ENUM_FOO = 0,
  MAP_ENUM_BAR = 1,
  MAP_ENUM_BAZ = 2,
  MapEnum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MapEnum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MapEnum_IsValid(int value);
extern const uint32_t MapEnum_internal_data_[];
constexpr MapEnum MapEnum_MIN = static_cast<MapEnum>(0);
constexpr MapEnum MapEnum_MAX = static_cast<MapEnum>(2);
constexpr int MapEnum_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
MapEnum_descriptor();
template <typename T>
const std::string& MapEnum_Name(T value) {
  static_assert(std::is_same<T, MapEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MapEnum_Name().");
  return MapEnum_Name(static_cast<MapEnum>(value));
}
template <>
inline const std::string& MapEnum_Name(MapEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MapEnum_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool MapEnum_Parse(absl::string_view name, MapEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MapEnum>(
      MapEnum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TestSameTypeMap_Map2Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestSameTypeMap_Map2Entry_DoNotUse, ::int32_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestSameTypeMap_Map2Entry_DoNotUse, ::int32_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  TestSameTypeMap_Map2Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestSameTypeMap_Map2Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestSameTypeMap_Map2Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestSameTypeMap_Map2Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestSameTypeMap_Map2Entry_DoNotUse*>(
        &_TestSameTypeMap_Map2Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestSameTypeMap_Map1Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestSameTypeMap_Map1Entry_DoNotUse, ::int32_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestSameTypeMap_Map1Entry_DoNotUse, ::int32_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  TestSameTypeMap_Map1Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestSameTypeMap_Map1Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestSameTypeMap_Map1Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestSameTypeMap_Map1Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestSameTypeMap_Map1Entry_DoNotUse*>(
        &_TestSameTypeMap_Map1Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestRecursiveMapMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestRecursiveMapMessage) */ {
 public:
  inline TestRecursiveMapMessage() : TestRecursiveMapMessage(nullptr) {}
  ~TestRecursiveMapMessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestRecursiveMapMessage(::google::protobuf::internal::ConstantInitialized);

  inline TestRecursiveMapMessage(const TestRecursiveMapMessage& from)
      : TestRecursiveMapMessage(nullptr, from) {}
  TestRecursiveMapMessage(TestRecursiveMapMessage&& from) noexcept
    : TestRecursiveMapMessage() {
    *this = ::std::move(from);
  }

  inline TestRecursiveMapMessage& operator=(const TestRecursiveMapMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRecursiveMapMessage& operator=(TestRecursiveMapMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRecursiveMapMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRecursiveMapMessage* internal_default_instance() {
    return reinterpret_cast<const TestRecursiveMapMessage*>(
               &_TestRecursiveMapMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(TestRecursiveMapMessage& a, TestRecursiveMapMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(TestRecursiveMapMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRecursiveMapMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRecursiveMapMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestRecursiveMapMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRecursiveMapMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestRecursiveMapMessage& from) {
    TestRecursiveMapMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRecursiveMapMessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestRecursiveMapMessage";
  }
  protected:
  explicit TestRecursiveMapMessage(::google::protobuf::Arena* arena);
  TestRecursiveMapMessage(::google::protobuf::Arena* arena, const TestRecursiveMapMessage& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kAFieldNumber = 1,
  };
  // map<string, .protobuf_unittest.TestRecursiveMapMessage> a = 1;
  int a_size() const;
  private:
  int _internal_a_size() const;

  public:
  void clear_a() ;
  const ::google::protobuf::Map<std::string, ::protobuf_unittest::TestRecursiveMapMessage>& a() const;
  ::google::protobuf::Map<std::string, ::protobuf_unittest::TestRecursiveMapMessage>* mutable_a();

  private:
  const ::google::protobuf::Map<std::string, ::protobuf_unittest::TestRecursiveMapMessage>& _internal_a() const;
  ::google::protobuf::Map<std::string, ::protobuf_unittest::TestRecursiveMapMessage>* _internal_mutable_a();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestRecursiveMapMessage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<TestRecursiveMapMessage_AEntry_DoNotUse, std::string, ::protobuf_unittest::TestRecursiveMapMessage,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        a_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};// -------------------------------------------------------------------

class TestRecursiveMapMessage_AEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestRecursiveMapMessage_AEntry_DoNotUse, std::string, ::protobuf_unittest::TestRecursiveMapMessage,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestRecursiveMapMessage_AEntry_DoNotUse, std::string, ::protobuf_unittest::TestRecursiveMapMessage,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  TestRecursiveMapMessage_AEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRecursiveMapMessage_AEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestRecursiveMapMessage_AEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestRecursiveMapMessage_AEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestRecursiveMapMessage_AEntry_DoNotUse*>(
        &_TestRecursiveMapMessage_AEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "protobuf_unittest.TestRecursiveMapMessage.AEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapUint64Uint64Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapUint64Uint64Entry_DoNotUse, ::uint64_t, ::uint64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapUint64Uint64Entry_DoNotUse, ::uint64_t, ::uint64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>;
  TestMap_MapUint64Uint64Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapUint64Uint64Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapUint64Uint64Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapUint64Uint64Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapUint64Uint64Entry_DoNotUse*>(
        &_TestMap_MapUint64Uint64Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapUint32Uint32Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapUint32Uint32Entry_DoNotUse, ::uint32_t, ::uint32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapUint32Uint32Entry_DoNotUse, ::uint32_t, ::uint32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>;
  TestMap_MapUint32Uint32Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapUint32Uint32Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapUint32Uint32Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapUint32Uint32Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapUint32Uint32Entry_DoNotUse*>(
        &_TestMap_MapUint32Uint32Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapStringStringEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapStringStringEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapStringStringEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TestMap_MapStringStringEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapStringStringEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapStringStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapStringStringEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapStringStringEntry_DoNotUse*>(
        &_TestMap_MapStringStringEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "protobuf_unittest.TestMap.MapStringStringEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "protobuf_unittest.TestMap.MapStringStringEntry.value");
 }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapSint64Sint64Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapSint64Sint64Entry_DoNotUse, ::int64_t, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_SINT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapSint64Sint64Entry_DoNotUse, ::int64_t, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>;
  TestMap_MapSint64Sint64Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapSint64Sint64Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapSint64Sint64Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapSint64Sint64Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapSint64Sint64Entry_DoNotUse*>(
        &_TestMap_MapSint64Sint64Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapSint32Sint32Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapSint32Sint32Entry_DoNotUse, ::int32_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_SINT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapSint32Sint32Entry_DoNotUse, ::int32_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>;
  TestMap_MapSint32Sint32Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapSint32Sint32Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapSint32Sint32Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapSint32Sint32Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapSint32Sint32Entry_DoNotUse*>(
        &_TestMap_MapSint32Sint32Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapSfixed64Sfixed64Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapSfixed64Sfixed64Entry_DoNotUse, ::int64_t, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64,
          ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapSfixed64Sfixed64Entry_DoNotUse, ::int64_t, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>;
  TestMap_MapSfixed64Sfixed64Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapSfixed64Sfixed64Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapSfixed64Sfixed64Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapSfixed64Sfixed64Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapSfixed64Sfixed64Entry_DoNotUse*>(
        &_TestMap_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapSfixed32Sfixed32Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapSfixed32Sfixed32Entry_DoNotUse, ::int32_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
          ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapSfixed32Sfixed32Entry_DoNotUse, ::int32_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>;
  TestMap_MapSfixed32Sfixed32Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapSfixed32Sfixed32Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapSfixed32Sfixed32Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapSfixed32Sfixed32Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapSfixed32Sfixed32Entry_DoNotUse*>(
        &_TestMap_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapInt64Int64Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapInt64Int64Entry_DoNotUse, ::int64_t, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapInt64Int64Entry_DoNotUse, ::int64_t, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>;
  TestMap_MapInt64Int64Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapInt64Int64Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapInt64Int64Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapInt64Int64Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapInt64Int64Entry_DoNotUse*>(
        &_TestMap_MapInt64Int64Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapInt32Int32Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapInt32Int32Entry_DoNotUse, ::int32_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapInt32Int32Entry_DoNotUse, ::int32_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  TestMap_MapInt32Int32Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapInt32Int32Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapInt32Int32Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapInt32Int32Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapInt32Int32Entry_DoNotUse*>(
        &_TestMap_MapInt32Int32Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapInt32FloatEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapInt32FloatEntry_DoNotUse, ::int32_t, float,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapInt32FloatEntry_DoNotUse, ::int32_t, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>;
  TestMap_MapInt32FloatEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapInt32FloatEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapInt32FloatEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapInt32FloatEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapInt32FloatEntry_DoNotUse*>(
        &_TestMap_MapInt32FloatEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapInt32EnumEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapInt32EnumEntry_DoNotUse, ::int32_t, ::protobuf_unittest::MapEnum,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_ENUM> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapInt32EnumEntry_DoNotUse, ::int32_t, ::protobuf_unittest::MapEnum,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>;
  TestMap_MapInt32EnumEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapInt32EnumEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapInt32EnumEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapInt32EnumEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapInt32EnumEntry_DoNotUse*>(
        &_TestMap_MapInt32EnumEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapInt32DoubleEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapInt32DoubleEntry_DoNotUse, ::int32_t, double,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapInt32DoubleEntry_DoNotUse, ::int32_t, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>;
  TestMap_MapInt32DoubleEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapInt32DoubleEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapInt32DoubleEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapInt32DoubleEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapInt32DoubleEntry_DoNotUse*>(
        &_TestMap_MapInt32DoubleEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapInt32BytesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapInt32BytesEntry_DoNotUse, ::int32_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapInt32BytesEntry_DoNotUse, ::int32_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  TestMap_MapInt32BytesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapInt32BytesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapInt32BytesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapInt32BytesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapInt32BytesEntry_DoNotUse*>(
        &_TestMap_MapInt32BytesEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapFixed64Fixed64Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapFixed64Fixed64Entry_DoNotUse, ::uint64_t, ::uint64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapFixed64Fixed64Entry_DoNotUse, ::uint64_t, ::uint64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>;
  TestMap_MapFixed64Fixed64Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapFixed64Fixed64Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapFixed64Fixed64Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapFixed64Fixed64Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapFixed64Fixed64Entry_DoNotUse*>(
        &_TestMap_MapFixed64Fixed64Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapFixed32Fixed32Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapFixed32Fixed32Entry_DoNotUse, ::uint32_t, ::uint32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapFixed32Fixed32Entry_DoNotUse, ::uint32_t, ::uint32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>;
  TestMap_MapFixed32Fixed32Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapFixed32Fixed32Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapFixed32Fixed32Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapFixed32Fixed32Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapFixed32Fixed32Entry_DoNotUse*>(
        &_TestMap_MapFixed32Fixed32Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapBoolBoolEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapBoolBoolEntry_DoNotUse, bool, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapBoolBoolEntry_DoNotUse, bool, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  TestMap_MapBoolBoolEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapBoolBoolEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapBoolBoolEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapBoolBoolEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapBoolBoolEntry_DoNotUse*>(
        &_TestMap_MapBoolBoolEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapUint64Uint64Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapUint64Uint64Entry_DoNotUse, ::uint64_t, ::uint64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapUint64Uint64Entry_DoNotUse, ::uint64_t, ::uint64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>;
  TestArenaMap_MapUint64Uint64Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapUint64Uint64Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapUint64Uint64Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapUint64Uint64Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapUint64Uint64Entry_DoNotUse*>(
        &_TestArenaMap_MapUint64Uint64Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapUint32Uint32Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapUint32Uint32Entry_DoNotUse, ::uint32_t, ::uint32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapUint32Uint32Entry_DoNotUse, ::uint32_t, ::uint32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>;
  TestArenaMap_MapUint32Uint32Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapUint32Uint32Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapUint32Uint32Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapUint32Uint32Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapUint32Uint32Entry_DoNotUse*>(
        &_TestArenaMap_MapUint32Uint32Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapStringStringEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapStringStringEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapStringStringEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TestArenaMap_MapStringStringEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapStringStringEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapStringStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapStringStringEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapStringStringEntry_DoNotUse*>(
        &_TestArenaMap_MapStringStringEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "protobuf_unittest.TestArenaMap.MapStringStringEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "protobuf_unittest.TestArenaMap.MapStringStringEntry.value");
 }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapSint64Sint64Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapSint64Sint64Entry_DoNotUse, ::int64_t, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_SINT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapSint64Sint64Entry_DoNotUse, ::int64_t, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>;
  TestArenaMap_MapSint64Sint64Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapSint64Sint64Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapSint64Sint64Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapSint64Sint64Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapSint64Sint64Entry_DoNotUse*>(
        &_TestArenaMap_MapSint64Sint64Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapSint32Sint32Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapSint32Sint32Entry_DoNotUse, ::int32_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_SINT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapSint32Sint32Entry_DoNotUse, ::int32_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>;
  TestArenaMap_MapSint32Sint32Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapSint32Sint32Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapSint32Sint32Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapSint32Sint32Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapSint32Sint32Entry_DoNotUse*>(
        &_TestArenaMap_MapSint32Sint32Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse, ::int64_t, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64,
          ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse, ::int64_t, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>;
  TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse*>(
        &_TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse, ::int32_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
          ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse, ::int32_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>;
  TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse*>(
        &_TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapInt64Int64Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapInt64Int64Entry_DoNotUse, ::int64_t, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapInt64Int64Entry_DoNotUse, ::int64_t, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>;
  TestArenaMap_MapInt64Int64Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapInt64Int64Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapInt64Int64Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapInt64Int64Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapInt64Int64Entry_DoNotUse*>(
        &_TestArenaMap_MapInt64Int64Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapInt32Int32Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapInt32Int32Entry_DoNotUse, ::int32_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapInt32Int32Entry_DoNotUse, ::int32_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  TestArenaMap_MapInt32Int32Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapInt32Int32Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapInt32Int32Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapInt32Int32Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapInt32Int32Entry_DoNotUse*>(
        &_TestArenaMap_MapInt32Int32Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapInt32FloatEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapInt32FloatEntry_DoNotUse, ::int32_t, float,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapInt32FloatEntry_DoNotUse, ::int32_t, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>;
  TestArenaMap_MapInt32FloatEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapInt32FloatEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapInt32FloatEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapInt32FloatEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapInt32FloatEntry_DoNotUse*>(
        &_TestArenaMap_MapInt32FloatEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapInt32EnumEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapInt32EnumEntry_DoNotUse, ::int32_t, ::protobuf_unittest::MapEnum,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_ENUM> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapInt32EnumEntry_DoNotUse, ::int32_t, ::protobuf_unittest::MapEnum,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>;
  TestArenaMap_MapInt32EnumEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapInt32EnumEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapInt32EnumEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapInt32EnumEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapInt32EnumEntry_DoNotUse*>(
        &_TestArenaMap_MapInt32EnumEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapInt32DoubleEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapInt32DoubleEntry_DoNotUse, ::int32_t, double,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapInt32DoubleEntry_DoNotUse, ::int32_t, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>;
  TestArenaMap_MapInt32DoubleEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapInt32DoubleEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapInt32DoubleEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapInt32DoubleEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapInt32DoubleEntry_DoNotUse*>(
        &_TestArenaMap_MapInt32DoubleEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapInt32BytesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapInt32BytesEntry_DoNotUse, ::int32_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapInt32BytesEntry_DoNotUse, ::int32_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  TestArenaMap_MapInt32BytesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapInt32BytesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapInt32BytesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapInt32BytesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapInt32BytesEntry_DoNotUse*>(
        &_TestArenaMap_MapInt32BytesEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapFixed64Fixed64Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapFixed64Fixed64Entry_DoNotUse, ::uint64_t, ::uint64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapFixed64Fixed64Entry_DoNotUse, ::uint64_t, ::uint64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>;
  TestArenaMap_MapFixed64Fixed64Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapFixed64Fixed64Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapFixed64Fixed64Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapFixed64Fixed64Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapFixed64Fixed64Entry_DoNotUse*>(
        &_TestArenaMap_MapFixed64Fixed64Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapFixed32Fixed32Entry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapFixed32Fixed32Entry_DoNotUse, ::uint32_t, ::uint32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32,
          ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapFixed32Fixed32Entry_DoNotUse, ::uint32_t, ::uint32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>;
  TestArenaMap_MapFixed32Fixed32Entry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapFixed32Fixed32Entry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapFixed32Fixed32Entry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapFixed32Fixed32Entry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapFixed32Fixed32Entry_DoNotUse*>(
        &_TestArenaMap_MapFixed32Fixed32Entry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapBoolBoolEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapBoolBoolEntry_DoNotUse, bool, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapBoolBoolEntry_DoNotUse, bool, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  TestArenaMap_MapBoolBoolEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapBoolBoolEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapBoolBoolEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapBoolBoolEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapBoolBoolEntry_DoNotUse*>(
        &_TestArenaMap_MapBoolBoolEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class MessageContainingMapCalledEntry_EntryEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          MessageContainingMapCalledEntry_EntryEntry_DoNotUse, ::int32_t, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      MessageContainingMapCalledEntry_EntryEntry_DoNotUse, ::int32_t, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  MessageContainingMapCalledEntry_EntryEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MessageContainingMapCalledEntry_EntryEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MessageContainingMapCalledEntry_EntryEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MessageContainingMapCalledEntry_EntryEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MessageContainingMapCalledEntry_EntryEntry_DoNotUse*>(
        &_MessageContainingMapCalledEntry_EntryEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class MessageContainingEnumCalledType final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.MessageContainingEnumCalledType) */ {
 public:
  inline MessageContainingEnumCalledType() : MessageContainingEnumCalledType(nullptr) {}
  ~MessageContainingEnumCalledType() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MessageContainingEnumCalledType(::google::protobuf::internal::ConstantInitialized);

  inline MessageContainingEnumCalledType(const MessageContainingEnumCalledType& from)
      : MessageContainingEnumCalledType(nullptr, from) {}
  MessageContainingEnumCalledType(MessageContainingEnumCalledType&& from) noexcept
    : MessageContainingEnumCalledType() {
    *this = ::std::move(from);
  }

  inline MessageContainingEnumCalledType& operator=(const MessageContainingEnumCalledType& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageContainingEnumCalledType& operator=(MessageContainingEnumCalledType&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageContainingEnumCalledType& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageContainingEnumCalledType* internal_default_instance() {
    return reinterpret_cast<const MessageContainingEnumCalledType*>(
               &_MessageContainingEnumCalledType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(MessageContainingEnumCalledType& a, MessageContainingEnumCalledType& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageContainingEnumCalledType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageContainingEnumCalledType* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageContainingEnumCalledType* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageContainingEnumCalledType>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MessageContainingEnumCalledType& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MessageContainingEnumCalledType& from) {
    MessageContainingEnumCalledType::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MessageContainingEnumCalledType* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.MessageContainingEnumCalledType";
  }
  protected:
  explicit MessageContainingEnumCalledType(::google::protobuf::Arena* arena);
  MessageContainingEnumCalledType(::google::protobuf::Arena* arena, const MessageContainingEnumCalledType& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  using Type = MessageContainingEnumCalledType_Type;
  static constexpr Type TYPE_FOO = MessageContainingEnumCalledType_Type_TYPE_FOO;
  static inline bool Type_IsValid(int value) {
    return MessageContainingEnumCalledType_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = MessageContainingEnumCalledType_Type_Type_MIN;
  static constexpr Type Type_MAX = MessageContainingEnumCalledType_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = MessageContainingEnumCalledType_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return MessageContainingEnumCalledType_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return MessageContainingEnumCalledType_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return MessageContainingEnumCalledType_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
  };
  // map<string, .protobuf_unittest.MessageContainingEnumCalledType> type = 1;
  int type_size() const;
  private:
  int _internal_type_size() const;

  public:
  void clear_type() ;
  const ::google::protobuf::Map<std::string, ::protobuf_unittest::MessageContainingEnumCalledType>& type() const;
  ::google::protobuf::Map<std::string, ::protobuf_unittest::MessageContainingEnumCalledType>* mutable_type();

  private:
  const ::google::protobuf::Map<std::string, ::protobuf_unittest::MessageContainingEnumCalledType>& _internal_type() const;
  ::google::protobuf::Map<std::string, ::protobuf_unittest::MessageContainingEnumCalledType>* _internal_mutable_type();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.MessageContainingEnumCalledType)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<MessageContainingEnumCalledType_TypeEntry_DoNotUse, std::string, ::protobuf_unittest::MessageContainingEnumCalledType,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};// -------------------------------------------------------------------

class MessageContainingEnumCalledType_TypeEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          MessageContainingEnumCalledType_TypeEntry_DoNotUse, std::string, ::protobuf_unittest::MessageContainingEnumCalledType,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      MessageContainingEnumCalledType_TypeEntry_DoNotUse, std::string, ::protobuf_unittest::MessageContainingEnumCalledType,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  MessageContainingEnumCalledType_TypeEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MessageContainingEnumCalledType_TypeEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MessageContainingEnumCalledType_TypeEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MessageContainingEnumCalledType_TypeEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MessageContainingEnumCalledType_TypeEntry_DoNotUse*>(
        &_MessageContainingEnumCalledType_TypeEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "protobuf_unittest.MessageContainingEnumCalledType.TypeEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestSameTypeMap final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestSameTypeMap) */ {
 public:
  inline TestSameTypeMap() : TestSameTypeMap(nullptr) {}
  ~TestSameTypeMap() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestSameTypeMap(::google::protobuf::internal::ConstantInitialized);

  inline TestSameTypeMap(const TestSameTypeMap& from)
      : TestSameTypeMap(nullptr, from) {}
  TestSameTypeMap(TestSameTypeMap&& from) noexcept
    : TestSameTypeMap() {
    *this = ::std::move(from);
  }

  inline TestSameTypeMap& operator=(const TestSameTypeMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestSameTypeMap& operator=(TestSameTypeMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestSameTypeMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestSameTypeMap* internal_default_instance() {
    return reinterpret_cast<const TestSameTypeMap*>(
               &_TestSameTypeMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(TestSameTypeMap& a, TestSameTypeMap& b) {
    a.Swap(&b);
  }
  inline void Swap(TestSameTypeMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestSameTypeMap* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestSameTypeMap* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestSameTypeMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestSameTypeMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestSameTypeMap& from) {
    TestSameTypeMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestSameTypeMap* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestSameTypeMap";
  }
  protected:
  explicit TestSameTypeMap(::google::protobuf::Arena* arena);
  TestSameTypeMap(::google::protobuf::Arena* arena, const TestSameTypeMap& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMap1FieldNumber = 1,
    kMap2FieldNumber = 2,
  };
  // map<int32, int32> map1 = 1;
  int map1_size() const;
  private:
  int _internal_map1_size() const;

  public:
  void clear_map1() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map1() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map1();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map1() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map1();

  public:
  // map<int32, int32> map2 = 2;
  int map2_size() const;
  private:
  int _internal_map2_size() const;

  public:
  void clear_map2() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map2() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map2();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map2() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map2();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestSameTypeMap)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<TestSameTypeMap_Map1Entry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        map1_;
    ::google::protobuf::internal::MapField<TestSameTypeMap_Map2Entry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        map2_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};// -------------------------------------------------------------------

class TestMap_MapStringForeignMessageEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapStringForeignMessageEntry_DoNotUse, std::string, ::protobuf_unittest::ForeignMessage,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapStringForeignMessageEntry_DoNotUse, std::string, ::protobuf_unittest::ForeignMessage,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  TestMap_MapStringForeignMessageEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapStringForeignMessageEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapStringForeignMessageEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapStringForeignMessageEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapStringForeignMessageEntry_DoNotUse*>(
        &_TestMap_MapStringForeignMessageEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "protobuf_unittest.TestMap.MapStringForeignMessageEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapInt32ForeignMessageEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapInt32ForeignMessageEntry_DoNotUse, ::int32_t, ::protobuf_unittest::ForeignMessage,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapInt32ForeignMessageEntry_DoNotUse, ::int32_t, ::protobuf_unittest::ForeignMessage,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  TestMap_MapInt32ForeignMessageEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapInt32ForeignMessageEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapInt32ForeignMessageEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapInt32ForeignMessageEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapInt32ForeignMessageEntry_DoNotUse*>(
        &_TestMap_MapInt32ForeignMessageEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse, ::int32_t, ::protobuf_unittest::ForeignMessage,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse, ::int32_t, ::protobuf_unittest::ForeignMessage,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse*>(
        &_TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class MessageContainingMapCalledEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.MessageContainingMapCalledEntry) */ {
 public:
  inline MessageContainingMapCalledEntry() : MessageContainingMapCalledEntry(nullptr) {}
  ~MessageContainingMapCalledEntry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MessageContainingMapCalledEntry(::google::protobuf::internal::ConstantInitialized);

  inline MessageContainingMapCalledEntry(const MessageContainingMapCalledEntry& from)
      : MessageContainingMapCalledEntry(nullptr, from) {}
  MessageContainingMapCalledEntry(MessageContainingMapCalledEntry&& from) noexcept
    : MessageContainingMapCalledEntry() {
    *this = ::std::move(from);
  }

  inline MessageContainingMapCalledEntry& operator=(const MessageContainingMapCalledEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageContainingMapCalledEntry& operator=(MessageContainingMapCalledEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageContainingMapCalledEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageContainingMapCalledEntry* internal_default_instance() {
    return reinterpret_cast<const MessageContainingMapCalledEntry*>(
               &_MessageContainingMapCalledEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(MessageContainingMapCalledEntry& a, MessageContainingMapCalledEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageContainingMapCalledEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageContainingMapCalledEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageContainingMapCalledEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageContainingMapCalledEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MessageContainingMapCalledEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MessageContainingMapCalledEntry& from) {
    MessageContainingMapCalledEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MessageContainingMapCalledEntry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.MessageContainingMapCalledEntry";
  }
  protected:
  explicit MessageContainingMapCalledEntry(::google::protobuf::Arena* arena);
  MessageContainingMapCalledEntry(::google::protobuf::Arena* arena, const MessageContainingMapCalledEntry& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kEntryFieldNumber = 1,
  };
  // map<int32, int32> entry = 1;
  int entry_size() const;
  private:
  int _internal_entry_size() const;

  public:
  void clear_entry() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& entry() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_entry();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_entry() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_entry();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.MessageContainingMapCalledEntry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<MessageContainingMapCalledEntry_EntryEntry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        entry_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};// -------------------------------------------------------------------

class TestRequiredMessageMap_MapFieldEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestRequiredMessageMap_MapFieldEntry_DoNotUse, ::int32_t, ::protobuf_unittest::TestRequired,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestRequiredMessageMap_MapFieldEntry_DoNotUse, ::int32_t, ::protobuf_unittest::TestRequired,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  TestRequiredMessageMap_MapFieldEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredMessageMap_MapFieldEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestRequiredMessageMap_MapFieldEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestRequiredMessageMap_MapFieldEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestRequiredMessageMap_MapFieldEntry_DoNotUse*>(
        &_TestRequiredMessageMap_MapFieldEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMessageMap_MapInt32MessageEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMessageMap_MapInt32MessageEntry_DoNotUse, ::int32_t, ::protobuf_unittest::TestAllTypes,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMessageMap_MapInt32MessageEntry_DoNotUse, ::int32_t, ::protobuf_unittest::TestAllTypes,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  TestMessageMap_MapInt32MessageEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessageMap_MapInt32MessageEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMessageMap_MapInt32MessageEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMessageMap_MapInt32MessageEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMessageMap_MapInt32MessageEntry_DoNotUse*>(
        &_TestMessageMap_MapInt32MessageEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestMap_MapInt32AllTypesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestMap_MapInt32AllTypesEntry_DoNotUse, ::int32_t, ::protobuf_unittest::TestAllTypes,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestMap_MapInt32AllTypesEntry_DoNotUse, ::int32_t, ::protobuf_unittest::TestAllTypes,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  TestMap_MapInt32AllTypesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap_MapInt32AllTypesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestMap_MapInt32AllTypesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestMap_MapInt32AllTypesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestMap_MapInt32AllTypesEntry_DoNotUse*>(
        &_TestMap_MapInt32AllTypesEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};
// -------------------------------------------------------------------

class TestArenaMap final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestArenaMap) */ {
 public:
  inline TestArenaMap() : TestArenaMap(nullptr) {}
  ~TestArenaMap() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestArenaMap(::google::protobuf::internal::ConstantInitialized);

  inline TestArenaMap(const TestArenaMap& from)
      : TestArenaMap(nullptr, from) {}
  TestArenaMap(TestArenaMap&& from) noexcept
    : TestArenaMap() {
    *this = ::std::move(from);
  }

  inline TestArenaMap& operator=(const TestArenaMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestArenaMap& operator=(TestArenaMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestArenaMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestArenaMap* internal_default_instance() {
    return reinterpret_cast<const TestArenaMap*>(
               &_TestArenaMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(TestArenaMap& a, TestArenaMap& b) {
    a.Swap(&b);
  }
  inline void Swap(TestArenaMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestArenaMap* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestArenaMap* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestArenaMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestArenaMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestArenaMap& from) {
    TestArenaMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestArenaMap* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestArenaMap";
  }
  protected:
  explicit TestArenaMap(::google::protobuf::Arena* arena);
  TestArenaMap(::google::protobuf::Arena* arena, const TestArenaMap& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMapInt32Int32FieldNumber = 1,
    kMapInt64Int64FieldNumber = 2,
    kMapUint32Uint32FieldNumber = 3,
    kMapUint64Uint64FieldNumber = 4,
    kMapSint32Sint32FieldNumber = 5,
    kMapSint64Sint64FieldNumber = 6,
    kMapFixed32Fixed32FieldNumber = 7,
    kMapFixed64Fixed64FieldNumber = 8,
    kMapSfixed32Sfixed32FieldNumber = 9,
    kMapSfixed64Sfixed64FieldNumber = 10,
    kMapInt32FloatFieldNumber = 11,
    kMapInt32DoubleFieldNumber = 12,
    kMapBoolBoolFieldNumber = 13,
    kMapStringStringFieldNumber = 14,
    kMapInt32BytesFieldNumber = 15,
    kMapInt32EnumFieldNumber = 16,
    kMapInt32ForeignMessageFieldNumber = 17,
  };
  // map<int32, int32> map_int32_int32 = 1;
  int map_int32_int32_size() const;
  private:
  int _internal_map_int32_int32_size() const;

  public:
  void clear_map_int32_int32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_int32_int32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_int32_int32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_int32_int32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_int32_int32();

  public:
  // map<int64, int64> map_int64_int64 = 2;
  int map_int64_int64_size() const;
  private:
  int _internal_map_int64_int64_size() const;

  public:
  void clear_map_int64_int64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_int64_int64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_int64_int64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_int64_int64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_int64_int64();

  public:
  // map<uint32, uint32> map_uint32_uint32 = 3;
  int map_uint32_uint32_size() const;
  private:
  int _internal_map_uint32_uint32_size() const;

  public:
  void clear_map_uint32_uint32() ;
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& map_uint32_uint32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* mutable_map_uint32_uint32();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& _internal_map_uint32_uint32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* _internal_mutable_map_uint32_uint32();

  public:
  // map<uint64, uint64> map_uint64_uint64 = 4;
  int map_uint64_uint64_size() const;
  private:
  int _internal_map_uint64_uint64_size() const;

  public:
  void clear_map_uint64_uint64() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& map_uint64_uint64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_map_uint64_uint64();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_map_uint64_uint64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_map_uint64_uint64();

  public:
  // map<sint32, sint32> map_sint32_sint32 = 5;
  int map_sint32_sint32_size() const;
  private:
  int _internal_map_sint32_sint32_size() const;

  public:
  void clear_map_sint32_sint32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_sint32_sint32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_sint32_sint32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_sint32_sint32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_sint32_sint32();

  public:
  // map<sint64, sint64> map_sint64_sint64 = 6;
  int map_sint64_sint64_size() const;
  private:
  int _internal_map_sint64_sint64_size() const;

  public:
  void clear_map_sint64_sint64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_sint64_sint64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_sint64_sint64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_sint64_sint64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_sint64_sint64();

  public:
  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  int map_fixed32_fixed32_size() const;
  private:
  int _internal_map_fixed32_fixed32_size() const;

  public:
  void clear_map_fixed32_fixed32() ;
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& map_fixed32_fixed32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* mutable_map_fixed32_fixed32();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& _internal_map_fixed32_fixed32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* _internal_mutable_map_fixed32_fixed32();

  public:
  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  int map_fixed64_fixed64_size() const;
  private:
  int _internal_map_fixed64_fixed64_size() const;

  public:
  void clear_map_fixed64_fixed64() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& map_fixed64_fixed64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_map_fixed64_fixed64();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_map_fixed64_fixed64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_map_fixed64_fixed64();

  public:
  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  int map_sfixed32_sfixed32_size() const;
  private:
  int _internal_map_sfixed32_sfixed32_size() const;

  public:
  void clear_map_sfixed32_sfixed32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_sfixed32_sfixed32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_sfixed32_sfixed32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_sfixed32_sfixed32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_sfixed32_sfixed32();

  public:
  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  int map_sfixed64_sfixed64_size() const;
  private:
  int _internal_map_sfixed64_sfixed64_size() const;

  public:
  void clear_map_sfixed64_sfixed64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_sfixed64_sfixed64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_sfixed64_sfixed64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_sfixed64_sfixed64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_sfixed64_sfixed64();

  public:
  // map<int32, float> map_int32_float = 11;
  int map_int32_float_size() const;
  private:
  int _internal_map_int32_float_size() const;

  public:
  void clear_map_int32_float() ;
  const ::google::protobuf::Map<::int32_t, float>& map_int32_float() const;
  ::google::protobuf::Map<::int32_t, float>* mutable_map_int32_float();

  private:
  const ::google::protobuf::Map<::int32_t, float>& _internal_map_int32_float() const;
  ::google::protobuf::Map<::int32_t, float>* _internal_mutable_map_int32_float();

  public:
  // map<int32, double> map_int32_double = 12;
  int map_int32_double_size() const;
  private:
  int _internal_map_int32_double_size() const;

  public:
  void clear_map_int32_double() ;
  const ::google::protobuf::Map<::int32_t, double>& map_int32_double() const;
  ::google::protobuf::Map<::int32_t, double>* mutable_map_int32_double();

  private:
  const ::google::protobuf::Map<::int32_t, double>& _internal_map_int32_double() const;
  ::google::protobuf::Map<::int32_t, double>* _internal_mutable_map_int32_double();

  public:
  // map<bool, bool> map_bool_bool = 13;
  int map_bool_bool_size() const;
  private:
  int _internal_map_bool_bool_size() const;

  public:
  void clear_map_bool_bool() ;
  const ::google::protobuf::Map<bool, bool>& map_bool_bool() const;
  ::google::protobuf::Map<bool, bool>* mutable_map_bool_bool();

  private:
  const ::google::protobuf::Map<bool, bool>& _internal_map_bool_bool() const;
  ::google::protobuf::Map<bool, bool>* _internal_mutable_map_bool_bool();

  public:
  // map<string, string> map_string_string = 14;
  int map_string_string_size() const;
  private:
  int _internal_map_string_string_size() const;

  public:
  void clear_map_string_string() ;
  const ::google::protobuf::Map<std::string, std::string>& map_string_string() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_map_string_string();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_map_string_string() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_map_string_string();

  public:
  // map<int32, bytes> map_int32_bytes = 15;
  int map_int32_bytes_size() const;
  private:
  int _internal_map_int32_bytes_size() const;

  public:
  void clear_map_int32_bytes() ;
  const ::google::protobuf::Map<::int32_t, std::string>& map_int32_bytes() const;
  ::google::protobuf::Map<::int32_t, std::string>* mutable_map_int32_bytes();

  private:
  const ::google::protobuf::Map<::int32_t, std::string>& _internal_map_int32_bytes() const;
  ::google::protobuf::Map<::int32_t, std::string>* _internal_mutable_map_int32_bytes();

  public:
  // map<int32, .protobuf_unittest.MapEnum> map_int32_enum = 16;
  int map_int32_enum_size() const;
  private:
  int _internal_map_int32_enum_size() const;

  public:
  void clear_map_int32_enum() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>& map_int32_enum() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>* mutable_map_int32_enum();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>& _internal_map_int32_enum() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>* _internal_mutable_map_int32_enum();

  public:
  // map<int32, .protobuf_unittest.ForeignMessage> map_int32_foreign_message = 17;
  int map_int32_foreign_message_size() const;
  private:
  int _internal_map_int32_foreign_message_size() const;

  public:
  void clear_map_int32_foreign_message() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>& map_int32_foreign_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>* mutable_map_int32_foreign_message();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>& _internal_map_int32_foreign_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>* _internal_mutable_map_int32_foreign_message();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestArenaMap)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 17, 18,
      72, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<TestArenaMap_MapInt32Int32Entry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        map_int32_int32_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapInt64Int64Entry_DoNotUse, ::int64_t, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>
        map_int64_int64_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapUint32Uint32Entry_DoNotUse, ::uint32_t, ::uint32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>
        map_uint32_uint32_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapUint64Uint64Entry_DoNotUse, ::uint64_t, ::uint64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>
        map_uint64_uint64_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapSint32Sint32Entry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>
        map_sint32_sint32_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapSint64Sint64Entry_DoNotUse, ::int64_t, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>
        map_sint64_sint64_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapFixed32Fixed32Entry_DoNotUse, ::uint32_t, ::uint32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>
        map_fixed32_fixed32_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapFixed64Fixed64Entry_DoNotUse, ::uint64_t, ::uint64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>
        map_fixed64_fixed64_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapSfixed32Sfixed32Entry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>
        map_sfixed32_sfixed32_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapSfixed64Sfixed64Entry_DoNotUse, ::int64_t, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>
        map_sfixed64_sfixed64_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapInt32FloatEntry_DoNotUse, ::int32_t, float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>
        map_int32_float_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapInt32DoubleEntry_DoNotUse, ::int32_t, double,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>
        map_int32_double_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapBoolBoolEntry_DoNotUse, bool, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        map_bool_bool_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapStringStringEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        map_string_string_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapInt32BytesEntry_DoNotUse, ::int32_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        map_int32_bytes_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapInt32EnumEntry_DoNotUse, ::int32_t, ::protobuf_unittest::MapEnum,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>
        map_int32_enum_;
    ::google::protobuf::internal::MapField<TestArenaMap_MapInt32ForeignMessageEntry_DoNotUse, ::int32_t, ::protobuf_unittest::ForeignMessage,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        map_int32_foreign_message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};// -------------------------------------------------------------------

class TestRequiredMessageMap final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestRequiredMessageMap) */ {
 public:
  inline TestRequiredMessageMap() : TestRequiredMessageMap(nullptr) {}
  ~TestRequiredMessageMap() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequiredMessageMap(::google::protobuf::internal::ConstantInitialized);

  inline TestRequiredMessageMap(const TestRequiredMessageMap& from)
      : TestRequiredMessageMap(nullptr, from) {}
  TestRequiredMessageMap(TestRequiredMessageMap&& from) noexcept
    : TestRequiredMessageMap() {
    *this = ::std::move(from);
  }

  inline TestRequiredMessageMap& operator=(const TestRequiredMessageMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequiredMessageMap& operator=(TestRequiredMessageMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequiredMessageMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequiredMessageMap* internal_default_instance() {
    return reinterpret_cast<const TestRequiredMessageMap*>(
               &_TestRequiredMessageMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(TestRequiredMessageMap& a, TestRequiredMessageMap& b) {
    a.Swap(&b);
  }
  inline void Swap(TestRequiredMessageMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequiredMessageMap* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequiredMessageMap* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestRequiredMessageMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequiredMessageMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestRequiredMessageMap& from) {
    TestRequiredMessageMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequiredMessageMap* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestRequiredMessageMap";
  }
  protected:
  explicit TestRequiredMessageMap(::google::protobuf::Arena* arena);
  TestRequiredMessageMap(::google::protobuf::Arena* arena, const TestRequiredMessageMap& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMapFieldFieldNumber = 1,
  };
  // map<int32, .protobuf_unittest.TestRequired> map_field = 1;
  int map_field_size() const;
  private:
  int _internal_map_field_size() const;

  public:
  void clear_map_field() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequired>& map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequired>* mutable_map_field();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequired>& _internal_map_field() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequired>* _internal_mutable_map_field();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestRequiredMessageMap)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<TestRequiredMessageMap_MapFieldEntry_DoNotUse, ::int32_t, ::protobuf_unittest::TestRequired,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        map_field_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};// -------------------------------------------------------------------

class TestMessageMap final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMessageMap) */ {
 public:
  inline TestMessageMap() : TestMessageMap(nullptr) {}
  ~TestMessageMap() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestMessageMap(::google::protobuf::internal::ConstantInitialized);

  inline TestMessageMap(const TestMessageMap& from)
      : TestMessageMap(nullptr, from) {}
  TestMessageMap(TestMessageMap&& from) noexcept
    : TestMessageMap() {
    *this = ::std::move(from);
  }

  inline TestMessageMap& operator=(const TestMessageMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMessageMap& operator=(TestMessageMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMessageMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMessageMap* internal_default_instance() {
    return reinterpret_cast<const TestMessageMap*>(
               &_TestMessageMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(TestMessageMap& a, TestMessageMap& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMessageMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMessageMap* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMessageMap* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestMessageMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMessageMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestMessageMap& from) {
    TestMessageMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMessageMap* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestMessageMap";
  }
  protected:
  explicit TestMessageMap(::google::protobuf::Arena* arena);
  TestMessageMap(::google::protobuf::Arena* arena, const TestMessageMap& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMapInt32MessageFieldNumber = 1,
  };
  // map<int32, .protobuf_unittest.TestAllTypes> map_int32_message = 1;
  int map_int32_message_size() const;
  private:
  int _internal_map_int32_message_size() const;

  public:
  void clear_map_int32_message() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>& map_int32_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>* mutable_map_int32_message();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>& _internal_map_int32_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>* _internal_mutable_map_int32_message();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMessageMap)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<TestMessageMap_MapInt32MessageEntry_DoNotUse, ::int32_t, ::protobuf_unittest::TestAllTypes,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        map_int32_message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};// -------------------------------------------------------------------

class TestMap final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMap) */ {
 public:
  inline TestMap() : TestMap(nullptr) {}
  ~TestMap() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestMap(::google::protobuf::internal::ConstantInitialized);

  inline TestMap(const TestMap& from)
      : TestMap(nullptr, from) {}
  TestMap(TestMap&& from) noexcept
    : TestMap() {
    *this = ::std::move(from);
  }

  inline TestMap& operator=(const TestMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMap& operator=(TestMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMap* internal_default_instance() {
    return reinterpret_cast<const TestMap*>(
               &_TestMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(TestMap& a, TestMap& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMap* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMap* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestMap& from) {
    TestMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMap* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestMap";
  }
  protected:
  explicit TestMap(::google::protobuf::Arena* arena);
  TestMap(::google::protobuf::Arena* arena, const TestMap& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMapInt32Int32FieldNumber = 1,
    kMapInt64Int64FieldNumber = 2,
    kMapUint32Uint32FieldNumber = 3,
    kMapUint64Uint64FieldNumber = 4,
    kMapSint32Sint32FieldNumber = 5,
    kMapSint64Sint64FieldNumber = 6,
    kMapFixed32Fixed32FieldNumber = 7,
    kMapFixed64Fixed64FieldNumber = 8,
    kMapSfixed32Sfixed32FieldNumber = 9,
    kMapSfixed64Sfixed64FieldNumber = 10,
    kMapInt32FloatFieldNumber = 11,
    kMapInt32DoubleFieldNumber = 12,
    kMapBoolBoolFieldNumber = 13,
    kMapStringStringFieldNumber = 14,
    kMapInt32BytesFieldNumber = 15,
    kMapInt32EnumFieldNumber = 16,
    kMapInt32ForeignMessageFieldNumber = 17,
    kMapStringForeignMessageFieldNumber = 18,
    kMapInt32AllTypesFieldNumber = 19,
  };
  // map<int32, int32> map_int32_int32 = 1;
  int map_int32_int32_size() const;
  private:
  int _internal_map_int32_int32_size() const;

  public:
  void clear_map_int32_int32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_int32_int32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_int32_int32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_int32_int32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_int32_int32();

  public:
  // map<int64, int64> map_int64_int64 = 2;
  int map_int64_int64_size() const;
  private:
  int _internal_map_int64_int64_size() const;

  public:
  void clear_map_int64_int64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_int64_int64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_int64_int64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_int64_int64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_int64_int64();

  public:
  // map<uint32, uint32> map_uint32_uint32 = 3;
  int map_uint32_uint32_size() const;
  private:
  int _internal_map_uint32_uint32_size() const;

  public:
  void clear_map_uint32_uint32() ;
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& map_uint32_uint32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* mutable_map_uint32_uint32();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& _internal_map_uint32_uint32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* _internal_mutable_map_uint32_uint32();

  public:
  // map<uint64, uint64> map_uint64_uint64 = 4;
  int map_uint64_uint64_size() const;
  private:
  int _internal_map_uint64_uint64_size() const;

  public:
  void clear_map_uint64_uint64() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& map_uint64_uint64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_map_uint64_uint64();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_map_uint64_uint64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_map_uint64_uint64();

  public:
  // map<sint32, sint32> map_sint32_sint32 = 5;
  int map_sint32_sint32_size() const;
  private:
  int _internal_map_sint32_sint32_size() const;

  public:
  void clear_map_sint32_sint32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_sint32_sint32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_sint32_sint32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_sint32_sint32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_sint32_sint32();

  public:
  // map<sint64, sint64> map_sint64_sint64 = 6;
  int map_sint64_sint64_size() const;
  private:
  int _internal_map_sint64_sint64_size() const;

  public:
  void clear_map_sint64_sint64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_sint64_sint64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_sint64_sint64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_sint64_sint64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_sint64_sint64();

  public:
  // map<fixed32, fixed32> map_fixed32_fixed32 = 7;
  int map_fixed32_fixed32_size() const;
  private:
  int _internal_map_fixed32_fixed32_size() const;

  public:
  void clear_map_fixed32_fixed32() ;
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& map_fixed32_fixed32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* mutable_map_fixed32_fixed32();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& _internal_map_fixed32_fixed32() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* _internal_mutable_map_fixed32_fixed32();

  public:
  // map<fixed64, fixed64> map_fixed64_fixed64 = 8;
  int map_fixed64_fixed64_size() const;
  private:
  int _internal_map_fixed64_fixed64_size() const;

  public:
  void clear_map_fixed64_fixed64() ;
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& map_fixed64_fixed64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* mutable_map_fixed64_fixed64();

  private:
  const ::google::protobuf::Map<::uint64_t, ::uint64_t>& _internal_map_fixed64_fixed64() const;
  ::google::protobuf::Map<::uint64_t, ::uint64_t>* _internal_mutable_map_fixed64_fixed64();

  public:
  // map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
  int map_sfixed32_sfixed32_size() const;
  private:
  int _internal_map_sfixed32_sfixed32_size() const;

  public:
  void clear_map_sfixed32_sfixed32() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& map_sfixed32_sfixed32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_map_sfixed32_sfixed32();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_map_sfixed32_sfixed32() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_map_sfixed32_sfixed32();

  public:
  // map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
  int map_sfixed64_sfixed64_size() const;
  private:
  int _internal_map_sfixed64_sfixed64_size() const;

  public:
  void clear_map_sfixed64_sfixed64() ;
  const ::google::protobuf::Map<::int64_t, ::int64_t>& map_sfixed64_sfixed64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* mutable_map_sfixed64_sfixed64();

  private:
  const ::google::protobuf::Map<::int64_t, ::int64_t>& _internal_map_sfixed64_sfixed64() const;
  ::google::protobuf::Map<::int64_t, ::int64_t>* _internal_mutable_map_sfixed64_sfixed64();

  public:
  // map<int32, float> map_int32_float = 11;
  int map_int32_float_size() const;
  private:
  int _internal_map_int32_float_size() const;

  public:
  void clear_map_int32_float() ;
  const ::google::protobuf::Map<::int32_t, float>& map_int32_float() const;
  ::google::protobuf::Map<::int32_t, float>* mutable_map_int32_float();

  private:
  const ::google::protobuf::Map<::int32_t, float>& _internal_map_int32_float() const;
  ::google::protobuf::Map<::int32_t, float>* _internal_mutable_map_int32_float();

  public:
  // map<int32, double> map_int32_double = 12;
  int map_int32_double_size() const;
  private:
  int _internal_map_int32_double_size() const;

  public:
  void clear_map_int32_double() ;
  const ::google::protobuf::Map<::int32_t, double>& map_int32_double() const;
  ::google::protobuf::Map<::int32_t, double>* mutable_map_int32_double();

  private:
  const ::google::protobuf::Map<::int32_t, double>& _internal_map_int32_double() const;
  ::google::protobuf::Map<::int32_t, double>* _internal_mutable_map_int32_double();

  public:
  // map<bool, bool> map_bool_bool = 13;
  int map_bool_bool_size() const;
  private:
  int _internal_map_bool_bool_size() const;

  public:
  void clear_map_bool_bool() ;
  const ::google::protobuf::Map<bool, bool>& map_bool_bool() const;
  ::google::protobuf::Map<bool, bool>* mutable_map_bool_bool();

  private:
  const ::google::protobuf::Map<bool, bool>& _internal_map_bool_bool() const;
  ::google::protobuf::Map<bool, bool>* _internal_mutable_map_bool_bool();

  public:
  // map<string, string> map_string_string = 14;
  int map_string_string_size() const;
  private:
  int _internal_map_string_string_size() const;

  public:
  void clear_map_string_string() ;
  const ::google::protobuf::Map<std::string, std::string>& map_string_string() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_map_string_string();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_map_string_string() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_map_string_string();

  public:
  // map<int32, bytes> map_int32_bytes = 15;
  int map_int32_bytes_size() const;
  private:
  int _internal_map_int32_bytes_size() const;

  public:
  void clear_map_int32_bytes() ;
  const ::google::protobuf::Map<::int32_t, std::string>& map_int32_bytes() const;
  ::google::protobuf::Map<::int32_t, std::string>* mutable_map_int32_bytes();

  private:
  const ::google::protobuf::Map<::int32_t, std::string>& _internal_map_int32_bytes() const;
  ::google::protobuf::Map<::int32_t, std::string>* _internal_mutable_map_int32_bytes();

  public:
  // map<int32, .protobuf_unittest.MapEnum> map_int32_enum = 16;
  int map_int32_enum_size() const;
  private:
  int _internal_map_int32_enum_size() const;

  public:
  void clear_map_int32_enum() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>& map_int32_enum() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>* mutable_map_int32_enum();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>& _internal_map_int32_enum() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>* _internal_mutable_map_int32_enum();

  public:
  // map<int32, .protobuf_unittest.ForeignMessage> map_int32_foreign_message = 17;
  int map_int32_foreign_message_size() const;
  private:
  int _internal_map_int32_foreign_message_size() const;

  public:
  void clear_map_int32_foreign_message() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>& map_int32_foreign_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>* mutable_map_int32_foreign_message();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>& _internal_map_int32_foreign_message() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>* _internal_mutable_map_int32_foreign_message();

  public:
  // map<string, .protobuf_unittest.ForeignMessage> map_string_foreign_message = 18;
  int map_string_foreign_message_size() const;
  private:
  int _internal_map_string_foreign_message_size() const;

  public:
  void clear_map_string_foreign_message() ;
  const ::google::protobuf::Map<std::string, ::protobuf_unittest::ForeignMessage>& map_string_foreign_message() const;
  ::google::protobuf::Map<std::string, ::protobuf_unittest::ForeignMessage>* mutable_map_string_foreign_message();

  private:
  const ::google::protobuf::Map<std::string, ::protobuf_unittest::ForeignMessage>& _internal_map_string_foreign_message() const;
  ::google::protobuf::Map<std::string, ::protobuf_unittest::ForeignMessage>* _internal_mutable_map_string_foreign_message();

  public:
  // map<int32, .protobuf_unittest.TestAllTypes> map_int32_all_types = 19;
  int map_int32_all_types_size() const;
  private:
  int _internal_map_int32_all_types_size() const;

  public:
  void clear_map_int32_all_types() ;
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>& map_int32_all_types() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>* mutable_map_int32_all_types();

  private:
  const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>& _internal_map_int32_all_types() const;
  ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>* _internal_mutable_map_int32_all_types();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMap)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 19, 22,
      93, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<TestMap_MapInt32Int32Entry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        map_int32_int32_;
    ::google::protobuf::internal::MapField<TestMap_MapInt64Int64Entry_DoNotUse, ::int64_t, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>
        map_int64_int64_;
    ::google::protobuf::internal::MapField<TestMap_MapUint32Uint32Entry_DoNotUse, ::uint32_t, ::uint32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>
        map_uint32_uint32_;
    ::google::protobuf::internal::MapField<TestMap_MapUint64Uint64Entry_DoNotUse, ::uint64_t, ::uint64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>
        map_uint64_uint64_;
    ::google::protobuf::internal::MapField<TestMap_MapSint32Sint32Entry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>
        map_sint32_sint32_;
    ::google::protobuf::internal::MapField<TestMap_MapSint64Sint64Entry_DoNotUse, ::int64_t, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>
        map_sint64_sint64_;
    ::google::protobuf::internal::MapField<TestMap_MapFixed32Fixed32Entry_DoNotUse, ::uint32_t, ::uint32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>
        map_fixed32_fixed32_;
    ::google::protobuf::internal::MapField<TestMap_MapFixed64Fixed64Entry_DoNotUse, ::uint64_t, ::uint64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>
        map_fixed64_fixed64_;
    ::google::protobuf::internal::MapField<TestMap_MapSfixed32Sfixed32Entry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>
        map_sfixed32_sfixed32_;
    ::google::protobuf::internal::MapField<TestMap_MapSfixed64Sfixed64Entry_DoNotUse, ::int64_t, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>
        map_sfixed64_sfixed64_;
    ::google::protobuf::internal::MapField<TestMap_MapInt32FloatEntry_DoNotUse, ::int32_t, float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>
        map_int32_float_;
    ::google::protobuf::internal::MapField<TestMap_MapInt32DoubleEntry_DoNotUse, ::int32_t, double,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>
        map_int32_double_;
    ::google::protobuf::internal::MapField<TestMap_MapBoolBoolEntry_DoNotUse, bool, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        map_bool_bool_;
    ::google::protobuf::internal::MapField<TestMap_MapStringStringEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        map_string_string_;
    ::google::protobuf::internal::MapField<TestMap_MapInt32BytesEntry_DoNotUse, ::int32_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        map_int32_bytes_;
    ::google::protobuf::internal::MapField<TestMap_MapInt32EnumEntry_DoNotUse, ::int32_t, ::protobuf_unittest::MapEnum,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>
        map_int32_enum_;
    ::google::protobuf::internal::MapField<TestMap_MapInt32ForeignMessageEntry_DoNotUse, ::int32_t, ::protobuf_unittest::ForeignMessage,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        map_int32_foreign_message_;
    ::google::protobuf::internal::MapField<TestMap_MapStringForeignMessageEntry_DoNotUse, std::string, ::protobuf_unittest::ForeignMessage,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        map_string_foreign_message_;
    ::google::protobuf::internal::MapField<TestMap_MapInt32AllTypesEntry_DoNotUse, ::int32_t, ::protobuf_unittest::TestAllTypes,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        map_int32_all_types_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};// -------------------------------------------------------------------

class TestMapSubmessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf_unittest.TestMapSubmessage) */ {
 public:
  inline TestMapSubmessage() : TestMapSubmessage(nullptr) {}
  ~TestMapSubmessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestMapSubmessage(::google::protobuf::internal::ConstantInitialized);

  inline TestMapSubmessage(const TestMapSubmessage& from)
      : TestMapSubmessage(nullptr, from) {}
  TestMapSubmessage(TestMapSubmessage&& from) noexcept
    : TestMapSubmessage() {
    *this = ::std::move(from);
  }

  inline TestMapSubmessage& operator=(const TestMapSubmessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestMapSubmessage& operator=(TestMapSubmessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestMapSubmessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestMapSubmessage* internal_default_instance() {
    return reinterpret_cast<const TestMapSubmessage*>(
               &_TestMapSubmessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(TestMapSubmessage& a, TestMapSubmessage& b) {
    a.Swap(&b);
  }
  inline void Swap(TestMapSubmessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestMapSubmessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestMapSubmessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestMapSubmessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestMapSubmessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestMapSubmessage& from) {
    TestMapSubmessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestMapSubmessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf_unittest.TestMapSubmessage";
  }
  protected:
  explicit TestMapSubmessage(::google::protobuf::Arena* arena);
  TestMapSubmessage(::google::protobuf::Arena* arena, const TestMapSubmessage& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTestMapFieldNumber = 1,
  };
  // .protobuf_unittest.TestMap test_map = 1;
  bool has_test_map() const;
  void clear_test_map() ;
  const ::protobuf_unittest::TestMap& test_map() const;
  PROTOBUF_NODISCARD ::protobuf_unittest::TestMap* release_test_map();
  ::protobuf_unittest::TestMap* mutable_test_map();
  void set_allocated_test_map(::protobuf_unittest::TestMap* value);
  void unsafe_arena_set_allocated_test_map(::protobuf_unittest::TestMap* value);
  ::protobuf_unittest::TestMap* unsafe_arena_release_test_map();

  private:
  const ::protobuf_unittest::TestMap& _internal_test_map() const;
  ::protobuf_unittest::TestMap* _internal_mutable_test_map();

  public:
  // @@protoc_insertion_point(class_scope:protobuf_unittest.TestMapSubmessage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::protobuf_unittest::TestMap* test_map_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fprotobuf_2fmap_5funittest_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestMap

// map<int32, int32> map_int32_int32 = 1;
inline int TestMap::_internal_map_int32_int32_size() const {
  return _internal_map_int32_int32().size();
}
inline int TestMap::map_int32_int32_size() const {
  return _internal_map_int32_int32_size();
}
inline void TestMap::clear_map_int32_int32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int32_int32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMap::_internal_map_int32_int32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_int32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMap::map_int32_int32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_int32_int32)
  return _internal_map_int32_int32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMap::_internal_mutable_map_int32_int32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_int32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMap::mutable_map_int32_int32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_int32_int32)
  return _internal_mutable_map_int32_int32();
}

// map<int64, int64> map_int64_int64 = 2;
inline int TestMap::_internal_map_int64_int64_size() const {
  return _internal_map_int64_int64().size();
}
inline int TestMap::map_int64_int64_size() const {
  return _internal_map_int64_int64_size();
}
inline void TestMap::clear_map_int64_int64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int64_int64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMap::_internal_map_int64_int64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int64_int64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMap::map_int64_int64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_int64_int64)
  return _internal_map_int64_int64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMap::_internal_mutable_map_int64_int64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int64_int64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMap::mutable_map_int64_int64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_int64_int64)
  return _internal_mutable_map_int64_int64();
}

// map<uint32, uint32> map_uint32_uint32 = 3;
inline int TestMap::_internal_map_uint32_uint32_size() const {
  return _internal_map_uint32_uint32().size();
}
inline int TestMap::map_uint32_uint32_size() const {
  return _internal_map_uint32_uint32_size();
}
inline void TestMap::clear_map_uint32_uint32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_uint32_uint32_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestMap::_internal_map_uint32_uint32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_uint32_uint32_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestMap::map_uint32_uint32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_uint32_uint32)
  return _internal_map_uint32_uint32();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestMap::_internal_mutable_map_uint32_uint32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_uint32_uint32_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestMap::mutable_map_uint32_uint32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_uint32_uint32)
  return _internal_mutable_map_uint32_uint32();
}

// map<uint64, uint64> map_uint64_uint64 = 4;
inline int TestMap::_internal_map_uint64_uint64_size() const {
  return _internal_map_uint64_uint64().size();
}
inline int TestMap::map_uint64_uint64_size() const {
  return _internal_map_uint64_uint64_size();
}
inline void TestMap::clear_map_uint64_uint64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_uint64_uint64_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestMap::_internal_map_uint64_uint64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_uint64_uint64_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestMap::map_uint64_uint64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_uint64_uint64)
  return _internal_map_uint64_uint64();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestMap::_internal_mutable_map_uint64_uint64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_uint64_uint64_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestMap::mutable_map_uint64_uint64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_uint64_uint64)
  return _internal_mutable_map_uint64_uint64();
}

// map<sint32, sint32> map_sint32_sint32 = 5;
inline int TestMap::_internal_map_sint32_sint32_size() const {
  return _internal_map_sint32_sint32().size();
}
inline int TestMap::map_sint32_sint32_size() const {
  return _internal_map_sint32_sint32_size();
}
inline void TestMap::clear_map_sint32_sint32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_sint32_sint32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMap::_internal_map_sint32_sint32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_sint32_sint32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMap::map_sint32_sint32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_sint32_sint32)
  return _internal_map_sint32_sint32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMap::_internal_mutable_map_sint32_sint32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_sint32_sint32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMap::mutable_map_sint32_sint32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_sint32_sint32)
  return _internal_mutable_map_sint32_sint32();
}

// map<sint64, sint64> map_sint64_sint64 = 6;
inline int TestMap::_internal_map_sint64_sint64_size() const {
  return _internal_map_sint64_sint64().size();
}
inline int TestMap::map_sint64_sint64_size() const {
  return _internal_map_sint64_sint64_size();
}
inline void TestMap::clear_map_sint64_sint64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_sint64_sint64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMap::_internal_map_sint64_sint64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_sint64_sint64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMap::map_sint64_sint64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_sint64_sint64)
  return _internal_map_sint64_sint64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMap::_internal_mutable_map_sint64_sint64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_sint64_sint64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMap::mutable_map_sint64_sint64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_sint64_sint64)
  return _internal_mutable_map_sint64_sint64();
}

// map<fixed32, fixed32> map_fixed32_fixed32 = 7;
inline int TestMap::_internal_map_fixed32_fixed32_size() const {
  return _internal_map_fixed32_fixed32().size();
}
inline int TestMap::map_fixed32_fixed32_size() const {
  return _internal_map_fixed32_fixed32_size();
}
inline void TestMap::clear_map_fixed32_fixed32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_fixed32_fixed32_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestMap::_internal_map_fixed32_fixed32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_fixed32_fixed32_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestMap::map_fixed32_fixed32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_fixed32_fixed32)
  return _internal_map_fixed32_fixed32();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestMap::_internal_mutable_map_fixed32_fixed32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_fixed32_fixed32_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestMap::mutable_map_fixed32_fixed32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_fixed32_fixed32)
  return _internal_mutable_map_fixed32_fixed32();
}

// map<fixed64, fixed64> map_fixed64_fixed64 = 8;
inline int TestMap::_internal_map_fixed64_fixed64_size() const {
  return _internal_map_fixed64_fixed64().size();
}
inline int TestMap::map_fixed64_fixed64_size() const {
  return _internal_map_fixed64_fixed64_size();
}
inline void TestMap::clear_map_fixed64_fixed64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_fixed64_fixed64_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestMap::_internal_map_fixed64_fixed64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_fixed64_fixed64_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestMap::map_fixed64_fixed64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_fixed64_fixed64)
  return _internal_map_fixed64_fixed64();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestMap::_internal_mutable_map_fixed64_fixed64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_fixed64_fixed64_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestMap::mutable_map_fixed64_fixed64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_fixed64_fixed64)
  return _internal_mutable_map_fixed64_fixed64();
}

// map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
inline int TestMap::_internal_map_sfixed32_sfixed32_size() const {
  return _internal_map_sfixed32_sfixed32().size();
}
inline int TestMap::map_sfixed32_sfixed32_size() const {
  return _internal_map_sfixed32_sfixed32_size();
}
inline void TestMap::clear_map_sfixed32_sfixed32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_sfixed32_sfixed32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMap::_internal_map_sfixed32_sfixed32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_sfixed32_sfixed32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestMap::map_sfixed32_sfixed32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_sfixed32_sfixed32)
  return _internal_map_sfixed32_sfixed32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMap::_internal_mutable_map_sfixed32_sfixed32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_sfixed32_sfixed32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestMap::mutable_map_sfixed32_sfixed32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_sfixed32_sfixed32)
  return _internal_mutable_map_sfixed32_sfixed32();
}

// map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
inline int TestMap::_internal_map_sfixed64_sfixed64_size() const {
  return _internal_map_sfixed64_sfixed64().size();
}
inline int TestMap::map_sfixed64_sfixed64_size() const {
  return _internal_map_sfixed64_sfixed64_size();
}
inline void TestMap::clear_map_sfixed64_sfixed64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_sfixed64_sfixed64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMap::_internal_map_sfixed64_sfixed64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_sfixed64_sfixed64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestMap::map_sfixed64_sfixed64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_sfixed64_sfixed64)
  return _internal_map_sfixed64_sfixed64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMap::_internal_mutable_map_sfixed64_sfixed64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_sfixed64_sfixed64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestMap::mutable_map_sfixed64_sfixed64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_sfixed64_sfixed64)
  return _internal_mutable_map_sfixed64_sfixed64();
}

// map<int32, float> map_int32_float = 11;
inline int TestMap::_internal_map_int32_float_size() const {
  return _internal_map_int32_float().size();
}
inline int TestMap::map_int32_float_size() const {
  return _internal_map_int32_float_size();
}
inline void TestMap::clear_map_int32_float() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int32_float_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, float>& TestMap::_internal_map_int32_float() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_float_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, float>& TestMap::map_int32_float() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_int32_float)
  return _internal_map_int32_float();
}
inline ::google::protobuf::Map<::int32_t, float>* TestMap::_internal_mutable_map_int32_float() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_float_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, float>* TestMap::mutable_map_int32_float() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_int32_float)
  return _internal_mutable_map_int32_float();
}

// map<int32, double> map_int32_double = 12;
inline int TestMap::_internal_map_int32_double_size() const {
  return _internal_map_int32_double().size();
}
inline int TestMap::map_int32_double_size() const {
  return _internal_map_int32_double_size();
}
inline void TestMap::clear_map_int32_double() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int32_double_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, double>& TestMap::_internal_map_int32_double() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_double_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, double>& TestMap::map_int32_double() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_int32_double)
  return _internal_map_int32_double();
}
inline ::google::protobuf::Map<::int32_t, double>* TestMap::_internal_mutable_map_int32_double() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_double_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, double>* TestMap::mutable_map_int32_double() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_int32_double)
  return _internal_mutable_map_int32_double();
}

// map<bool, bool> map_bool_bool = 13;
inline int TestMap::_internal_map_bool_bool_size() const {
  return _internal_map_bool_bool().size();
}
inline int TestMap::map_bool_bool_size() const {
  return _internal_map_bool_bool_size();
}
inline void TestMap::clear_map_bool_bool() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_bool_bool_.Clear();
}
inline const ::google::protobuf::Map<bool, bool>& TestMap::_internal_map_bool_bool() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_bool_bool_.GetMap();
}
inline const ::google::protobuf::Map<bool, bool>& TestMap::map_bool_bool() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_bool_bool)
  return _internal_map_bool_bool();
}
inline ::google::protobuf::Map<bool, bool>* TestMap::_internal_mutable_map_bool_bool() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_bool_bool_.MutableMap();
}
inline ::google::protobuf::Map<bool, bool>* TestMap::mutable_map_bool_bool() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_bool_bool)
  return _internal_mutable_map_bool_bool();
}

// map<string, string> map_string_string = 14;
inline int TestMap::_internal_map_string_string_size() const {
  return _internal_map_string_string().size();
}
inline int TestMap::map_string_string_size() const {
  return _internal_map_string_string_size();
}
inline void TestMap::clear_map_string_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_string_string_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestMap::_internal_map_string_string() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_string_string_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestMap::map_string_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_string_string)
  return _internal_map_string_string();
}
inline ::google::protobuf::Map<std::string, std::string>* TestMap::_internal_mutable_map_string_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_string_string_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TestMap::mutable_map_string_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_string_string)
  return _internal_mutable_map_string_string();
}

// map<int32, bytes> map_int32_bytes = 15;
inline int TestMap::_internal_map_int32_bytes_size() const {
  return _internal_map_int32_bytes().size();
}
inline int TestMap::map_int32_bytes_size() const {
  return _internal_map_int32_bytes_size();
}
inline void TestMap::clear_map_int32_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int32_bytes_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, std::string>& TestMap::_internal_map_int32_bytes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_bytes_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, std::string>& TestMap::map_int32_bytes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_int32_bytes)
  return _internal_map_int32_bytes();
}
inline ::google::protobuf::Map<::int32_t, std::string>* TestMap::_internal_mutable_map_int32_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_bytes_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, std::string>* TestMap::mutable_map_int32_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_int32_bytes)
  return _internal_mutable_map_int32_bytes();
}

// map<int32, .protobuf_unittest.MapEnum> map_int32_enum = 16;
inline int TestMap::_internal_map_int32_enum_size() const {
  return _internal_map_int32_enum().size();
}
inline int TestMap::map_int32_enum_size() const {
  return _internal_map_int32_enum_size();
}
inline void TestMap::clear_map_int32_enum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int32_enum_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>& TestMap::_internal_map_int32_enum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_enum_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>& TestMap::map_int32_enum() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_int32_enum)
  return _internal_map_int32_enum();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>* TestMap::_internal_mutable_map_int32_enum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_enum_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>* TestMap::mutable_map_int32_enum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_int32_enum)
  return _internal_mutable_map_int32_enum();
}

// map<int32, .protobuf_unittest.ForeignMessage> map_int32_foreign_message = 17;
inline int TestMap::_internal_map_int32_foreign_message_size() const {
  return _internal_map_int32_foreign_message().size();
}
inline int TestMap::map_int32_foreign_message_size() const {
  return _internal_map_int32_foreign_message_size();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>& TestMap::_internal_map_int32_foreign_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_foreign_message_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>& TestMap::map_int32_foreign_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_int32_foreign_message)
  return _internal_map_int32_foreign_message();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>* TestMap::_internal_mutable_map_int32_foreign_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_foreign_message_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>* TestMap::mutable_map_int32_foreign_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_int32_foreign_message)
  return _internal_mutable_map_int32_foreign_message();
}

// map<string, .protobuf_unittest.ForeignMessage> map_string_foreign_message = 18;
inline int TestMap::_internal_map_string_foreign_message_size() const {
  return _internal_map_string_foreign_message().size();
}
inline int TestMap::map_string_foreign_message_size() const {
  return _internal_map_string_foreign_message_size();
}
inline const ::google::protobuf::Map<std::string, ::protobuf_unittest::ForeignMessage>& TestMap::_internal_map_string_foreign_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_string_foreign_message_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::protobuf_unittest::ForeignMessage>& TestMap::map_string_foreign_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_string_foreign_message)
  return _internal_map_string_foreign_message();
}
inline ::google::protobuf::Map<std::string, ::protobuf_unittest::ForeignMessage>* TestMap::_internal_mutable_map_string_foreign_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_string_foreign_message_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::protobuf_unittest::ForeignMessage>* TestMap::mutable_map_string_foreign_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_string_foreign_message)
  return _internal_mutable_map_string_foreign_message();
}

// map<int32, .protobuf_unittest.TestAllTypes> map_int32_all_types = 19;
inline int TestMap::_internal_map_int32_all_types_size() const {
  return _internal_map_int32_all_types().size();
}
inline int TestMap::map_int32_all_types_size() const {
  return _internal_map_int32_all_types_size();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>& TestMap::_internal_map_int32_all_types() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_all_types_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>& TestMap::map_int32_all_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMap.map_int32_all_types)
  return _internal_map_int32_all_types();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>* TestMap::_internal_mutable_map_int32_all_types() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_all_types_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>* TestMap::mutable_map_int32_all_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMap.map_int32_all_types)
  return _internal_mutable_map_int32_all_types();
}

// -------------------------------------------------------------------

// TestMapSubmessage

// .protobuf_unittest.TestMap test_map = 1;
inline bool TestMapSubmessage::has_test_map() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.test_map_ != nullptr);
  return value;
}
inline void TestMapSubmessage::clear_test_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.test_map_ != nullptr) _impl_.test_map_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::protobuf_unittest::TestMap& TestMapSubmessage::_internal_test_map() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::protobuf_unittest::TestMap* p = _impl_.test_map_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_unittest::TestMap&>(::protobuf_unittest::_TestMap_default_instance_);
}
inline const ::protobuf_unittest::TestMap& TestMapSubmessage::test_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestMapSubmessage.test_map)
  return _internal_test_map();
}
inline void TestMapSubmessage::unsafe_arena_set_allocated_test_map(::protobuf_unittest::TestMap* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.test_map_);
  }
  _impl_.test_map_ = reinterpret_cast<::protobuf_unittest::TestMap*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestMapSubmessage.test_map)
}
inline ::protobuf_unittest::TestMap* TestMapSubmessage::release_test_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::TestMap* released = _impl_.test_map_;
  _impl_.test_map_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf_unittest::TestMap* TestMapSubmessage::unsafe_arena_release_test_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf_unittest.TestMapSubmessage.test_map)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf_unittest::TestMap* temp = _impl_.test_map_;
  _impl_.test_map_ = nullptr;
  return temp;
}
inline ::protobuf_unittest::TestMap* TestMapSubmessage::_internal_mutable_test_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.test_map_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_unittest::TestMap>(GetArena());
    _impl_.test_map_ = reinterpret_cast<::protobuf_unittest::TestMap*>(p);
  }
  return _impl_.test_map_;
}
inline ::protobuf_unittest::TestMap* TestMapSubmessage::mutable_test_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::protobuf_unittest::TestMap* _msg = _internal_mutable_test_map();
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestMapSubmessage.test_map)
  return _msg;
}
inline void TestMapSubmessage::set_allocated_test_map(::protobuf_unittest::TestMap* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::protobuf_unittest::TestMap*>(_impl_.test_map_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::protobuf_unittest::TestMap*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.test_map_ = reinterpret_cast<::protobuf_unittest::TestMap*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestMapSubmessage.test_map)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestMessageMap

// map<int32, .protobuf_unittest.TestAllTypes> map_int32_message = 1;
inline int TestMessageMap::_internal_map_int32_message_size() const {
  return _internal_map_int32_message().size();
}
inline int TestMessageMap::map_int32_message_size() const {
  return _internal_map_int32_message_size();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>& TestMessageMap::_internal_map_int32_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_message_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>& TestMessageMap::map_int32_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestMessageMap.map_int32_message)
  return _internal_map_int32_message();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>* TestMessageMap::_internal_mutable_map_int32_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_message_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestAllTypes>* TestMessageMap::mutable_map_int32_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestMessageMap.map_int32_message)
  return _internal_mutable_map_int32_message();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestSameTypeMap

// map<int32, int32> map1 = 1;
inline int TestSameTypeMap::_internal_map1_size() const {
  return _internal_map1().size();
}
inline int TestSameTypeMap::map1_size() const {
  return _internal_map1_size();
}
inline void TestSameTypeMap::clear_map1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map1_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestSameTypeMap::_internal_map1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map1_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestSameTypeMap::map1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestSameTypeMap.map1)
  return _internal_map1();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestSameTypeMap::_internal_mutable_map1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map1_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestSameTypeMap::mutable_map1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestSameTypeMap.map1)
  return _internal_mutable_map1();
}

// map<int32, int32> map2 = 2;
inline int TestSameTypeMap::_internal_map2_size() const {
  return _internal_map2().size();
}
inline int TestSameTypeMap::map2_size() const {
  return _internal_map2_size();
}
inline void TestSameTypeMap::clear_map2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map2_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestSameTypeMap::_internal_map2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map2_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestSameTypeMap::map2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestSameTypeMap.map2)
  return _internal_map2();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestSameTypeMap::_internal_mutable_map2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map2_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestSameTypeMap::mutable_map2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestSameTypeMap.map2)
  return _internal_mutable_map2();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestRequiredMessageMap

// map<int32, .protobuf_unittest.TestRequired> map_field = 1;
inline int TestRequiredMessageMap::_internal_map_field_size() const {
  return _internal_map_field().size();
}
inline int TestRequiredMessageMap::map_field_size() const {
  return _internal_map_field_size();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequired>& TestRequiredMessageMap::_internal_map_field() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_field_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequired>& TestRequiredMessageMap::map_field() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestRequiredMessageMap.map_field)
  return _internal_map_field();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequired>* TestRequiredMessageMap::_internal_mutable_map_field() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_field_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::TestRequired>* TestRequiredMessageMap::mutable_map_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestRequiredMessageMap.map_field)
  return _internal_mutable_map_field();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestArenaMap

// map<int32, int32> map_int32_int32 = 1;
inline int TestArenaMap::_internal_map_int32_int32_size() const {
  return _internal_map_int32_int32().size();
}
inline int TestArenaMap::map_int32_int32_size() const {
  return _internal_map_int32_int32_size();
}
inline void TestArenaMap::clear_map_int32_int32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int32_int32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMap::_internal_map_int32_int32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_int32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMap::map_int32_int32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_int32_int32)
  return _internal_map_int32_int32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMap::_internal_mutable_map_int32_int32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_int32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMap::mutable_map_int32_int32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_int32_int32)
  return _internal_mutable_map_int32_int32();
}

// map<int64, int64> map_int64_int64 = 2;
inline int TestArenaMap::_internal_map_int64_int64_size() const {
  return _internal_map_int64_int64().size();
}
inline int TestArenaMap::map_int64_int64_size() const {
  return _internal_map_int64_int64_size();
}
inline void TestArenaMap::clear_map_int64_int64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int64_int64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMap::_internal_map_int64_int64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int64_int64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMap::map_int64_int64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_int64_int64)
  return _internal_map_int64_int64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMap::_internal_mutable_map_int64_int64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int64_int64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMap::mutable_map_int64_int64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_int64_int64)
  return _internal_mutable_map_int64_int64();
}

// map<uint32, uint32> map_uint32_uint32 = 3;
inline int TestArenaMap::_internal_map_uint32_uint32_size() const {
  return _internal_map_uint32_uint32().size();
}
inline int TestArenaMap::map_uint32_uint32_size() const {
  return _internal_map_uint32_uint32_size();
}
inline void TestArenaMap::clear_map_uint32_uint32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_uint32_uint32_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestArenaMap::_internal_map_uint32_uint32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_uint32_uint32_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestArenaMap::map_uint32_uint32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_uint32_uint32)
  return _internal_map_uint32_uint32();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestArenaMap::_internal_mutable_map_uint32_uint32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_uint32_uint32_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestArenaMap::mutable_map_uint32_uint32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_uint32_uint32)
  return _internal_mutable_map_uint32_uint32();
}

// map<uint64, uint64> map_uint64_uint64 = 4;
inline int TestArenaMap::_internal_map_uint64_uint64_size() const {
  return _internal_map_uint64_uint64().size();
}
inline int TestArenaMap::map_uint64_uint64_size() const {
  return _internal_map_uint64_uint64_size();
}
inline void TestArenaMap::clear_map_uint64_uint64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_uint64_uint64_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestArenaMap::_internal_map_uint64_uint64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_uint64_uint64_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestArenaMap::map_uint64_uint64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_uint64_uint64)
  return _internal_map_uint64_uint64();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestArenaMap::_internal_mutable_map_uint64_uint64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_uint64_uint64_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestArenaMap::mutable_map_uint64_uint64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_uint64_uint64)
  return _internal_mutable_map_uint64_uint64();
}

// map<sint32, sint32> map_sint32_sint32 = 5;
inline int TestArenaMap::_internal_map_sint32_sint32_size() const {
  return _internal_map_sint32_sint32().size();
}
inline int TestArenaMap::map_sint32_sint32_size() const {
  return _internal_map_sint32_sint32_size();
}
inline void TestArenaMap::clear_map_sint32_sint32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_sint32_sint32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMap::_internal_map_sint32_sint32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_sint32_sint32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMap::map_sint32_sint32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_sint32_sint32)
  return _internal_map_sint32_sint32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMap::_internal_mutable_map_sint32_sint32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_sint32_sint32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMap::mutable_map_sint32_sint32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_sint32_sint32)
  return _internal_mutable_map_sint32_sint32();
}

// map<sint64, sint64> map_sint64_sint64 = 6;
inline int TestArenaMap::_internal_map_sint64_sint64_size() const {
  return _internal_map_sint64_sint64().size();
}
inline int TestArenaMap::map_sint64_sint64_size() const {
  return _internal_map_sint64_sint64_size();
}
inline void TestArenaMap::clear_map_sint64_sint64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_sint64_sint64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMap::_internal_map_sint64_sint64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_sint64_sint64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMap::map_sint64_sint64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_sint64_sint64)
  return _internal_map_sint64_sint64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMap::_internal_mutable_map_sint64_sint64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_sint64_sint64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMap::mutable_map_sint64_sint64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_sint64_sint64)
  return _internal_mutable_map_sint64_sint64();
}

// map<fixed32, fixed32> map_fixed32_fixed32 = 7;
inline int TestArenaMap::_internal_map_fixed32_fixed32_size() const {
  return _internal_map_fixed32_fixed32().size();
}
inline int TestArenaMap::map_fixed32_fixed32_size() const {
  return _internal_map_fixed32_fixed32_size();
}
inline void TestArenaMap::clear_map_fixed32_fixed32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_fixed32_fixed32_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestArenaMap::_internal_map_fixed32_fixed32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_fixed32_fixed32_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& TestArenaMap::map_fixed32_fixed32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_fixed32_fixed32)
  return _internal_map_fixed32_fixed32();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestArenaMap::_internal_mutable_map_fixed32_fixed32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_fixed32_fixed32_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* TestArenaMap::mutable_map_fixed32_fixed32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_fixed32_fixed32)
  return _internal_mutable_map_fixed32_fixed32();
}

// map<fixed64, fixed64> map_fixed64_fixed64 = 8;
inline int TestArenaMap::_internal_map_fixed64_fixed64_size() const {
  return _internal_map_fixed64_fixed64().size();
}
inline int TestArenaMap::map_fixed64_fixed64_size() const {
  return _internal_map_fixed64_fixed64_size();
}
inline void TestArenaMap::clear_map_fixed64_fixed64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_fixed64_fixed64_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestArenaMap::_internal_map_fixed64_fixed64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_fixed64_fixed64_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, ::uint64_t>& TestArenaMap::map_fixed64_fixed64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_fixed64_fixed64)
  return _internal_map_fixed64_fixed64();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestArenaMap::_internal_mutable_map_fixed64_fixed64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_fixed64_fixed64_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, ::uint64_t>* TestArenaMap::mutable_map_fixed64_fixed64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_fixed64_fixed64)
  return _internal_mutable_map_fixed64_fixed64();
}

// map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 9;
inline int TestArenaMap::_internal_map_sfixed32_sfixed32_size() const {
  return _internal_map_sfixed32_sfixed32().size();
}
inline int TestArenaMap::map_sfixed32_sfixed32_size() const {
  return _internal_map_sfixed32_sfixed32_size();
}
inline void TestArenaMap::clear_map_sfixed32_sfixed32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_sfixed32_sfixed32_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMap::_internal_map_sfixed32_sfixed32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_sfixed32_sfixed32_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& TestArenaMap::map_sfixed32_sfixed32() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_sfixed32_sfixed32)
  return _internal_map_sfixed32_sfixed32();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMap::_internal_mutable_map_sfixed32_sfixed32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_sfixed32_sfixed32_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* TestArenaMap::mutable_map_sfixed32_sfixed32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_sfixed32_sfixed32)
  return _internal_mutable_map_sfixed32_sfixed32();
}

// map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 10;
inline int TestArenaMap::_internal_map_sfixed64_sfixed64_size() const {
  return _internal_map_sfixed64_sfixed64().size();
}
inline int TestArenaMap::map_sfixed64_sfixed64_size() const {
  return _internal_map_sfixed64_sfixed64_size();
}
inline void TestArenaMap::clear_map_sfixed64_sfixed64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_sfixed64_sfixed64_.Clear();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMap::_internal_map_sfixed64_sfixed64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_sfixed64_sfixed64_.GetMap();
}
inline const ::google::protobuf::Map<::int64_t, ::int64_t>& TestArenaMap::map_sfixed64_sfixed64() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_sfixed64_sfixed64)
  return _internal_map_sfixed64_sfixed64();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMap::_internal_mutable_map_sfixed64_sfixed64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_sfixed64_sfixed64_.MutableMap();
}
inline ::google::protobuf::Map<::int64_t, ::int64_t>* TestArenaMap::mutable_map_sfixed64_sfixed64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_sfixed64_sfixed64)
  return _internal_mutable_map_sfixed64_sfixed64();
}

// map<int32, float> map_int32_float = 11;
inline int TestArenaMap::_internal_map_int32_float_size() const {
  return _internal_map_int32_float().size();
}
inline int TestArenaMap::map_int32_float_size() const {
  return _internal_map_int32_float_size();
}
inline void TestArenaMap::clear_map_int32_float() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int32_float_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, float>& TestArenaMap::_internal_map_int32_float() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_float_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, float>& TestArenaMap::map_int32_float() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_int32_float)
  return _internal_map_int32_float();
}
inline ::google::protobuf::Map<::int32_t, float>* TestArenaMap::_internal_mutable_map_int32_float() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_float_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, float>* TestArenaMap::mutable_map_int32_float() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_int32_float)
  return _internal_mutable_map_int32_float();
}

// map<int32, double> map_int32_double = 12;
inline int TestArenaMap::_internal_map_int32_double_size() const {
  return _internal_map_int32_double().size();
}
inline int TestArenaMap::map_int32_double_size() const {
  return _internal_map_int32_double_size();
}
inline void TestArenaMap::clear_map_int32_double() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int32_double_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, double>& TestArenaMap::_internal_map_int32_double() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_double_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, double>& TestArenaMap::map_int32_double() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_int32_double)
  return _internal_map_int32_double();
}
inline ::google::protobuf::Map<::int32_t, double>* TestArenaMap::_internal_mutable_map_int32_double() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_double_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, double>* TestArenaMap::mutable_map_int32_double() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_int32_double)
  return _internal_mutable_map_int32_double();
}

// map<bool, bool> map_bool_bool = 13;
inline int TestArenaMap::_internal_map_bool_bool_size() const {
  return _internal_map_bool_bool().size();
}
inline int TestArenaMap::map_bool_bool_size() const {
  return _internal_map_bool_bool_size();
}
inline void TestArenaMap::clear_map_bool_bool() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_bool_bool_.Clear();
}
inline const ::google::protobuf::Map<bool, bool>& TestArenaMap::_internal_map_bool_bool() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_bool_bool_.GetMap();
}
inline const ::google::protobuf::Map<bool, bool>& TestArenaMap::map_bool_bool() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_bool_bool)
  return _internal_map_bool_bool();
}
inline ::google::protobuf::Map<bool, bool>* TestArenaMap::_internal_mutable_map_bool_bool() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_bool_bool_.MutableMap();
}
inline ::google::protobuf::Map<bool, bool>* TestArenaMap::mutable_map_bool_bool() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_bool_bool)
  return _internal_mutable_map_bool_bool();
}

// map<string, string> map_string_string = 14;
inline int TestArenaMap::_internal_map_string_string_size() const {
  return _internal_map_string_string().size();
}
inline int TestArenaMap::map_string_string_size() const {
  return _internal_map_string_string_size();
}
inline void TestArenaMap::clear_map_string_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_string_string_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestArenaMap::_internal_map_string_string() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_string_string_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TestArenaMap::map_string_string() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_string_string)
  return _internal_map_string_string();
}
inline ::google::protobuf::Map<std::string, std::string>* TestArenaMap::_internal_mutable_map_string_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_string_string_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TestArenaMap::mutable_map_string_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_string_string)
  return _internal_mutable_map_string_string();
}

// map<int32, bytes> map_int32_bytes = 15;
inline int TestArenaMap::_internal_map_int32_bytes_size() const {
  return _internal_map_int32_bytes().size();
}
inline int TestArenaMap::map_int32_bytes_size() const {
  return _internal_map_int32_bytes_size();
}
inline void TestArenaMap::clear_map_int32_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int32_bytes_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, std::string>& TestArenaMap::_internal_map_int32_bytes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_bytes_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, std::string>& TestArenaMap::map_int32_bytes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_int32_bytes)
  return _internal_map_int32_bytes();
}
inline ::google::protobuf::Map<::int32_t, std::string>* TestArenaMap::_internal_mutable_map_int32_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_bytes_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, std::string>* TestArenaMap::mutable_map_int32_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_int32_bytes)
  return _internal_mutable_map_int32_bytes();
}

// map<int32, .protobuf_unittest.MapEnum> map_int32_enum = 16;
inline int TestArenaMap::_internal_map_int32_enum_size() const {
  return _internal_map_int32_enum().size();
}
inline int TestArenaMap::map_int32_enum_size() const {
  return _internal_map_int32_enum_size();
}
inline void TestArenaMap::clear_map_int32_enum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_int32_enum_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>& TestArenaMap::_internal_map_int32_enum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_enum_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>& TestArenaMap::map_int32_enum() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_int32_enum)
  return _internal_map_int32_enum();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>* TestArenaMap::_internal_mutable_map_int32_enum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_enum_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::MapEnum>* TestArenaMap::mutable_map_int32_enum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_int32_enum)
  return _internal_mutable_map_int32_enum();
}

// map<int32, .protobuf_unittest.ForeignMessage> map_int32_foreign_message = 17;
inline int TestArenaMap::_internal_map_int32_foreign_message_size() const {
  return _internal_map_int32_foreign_message().size();
}
inline int TestArenaMap::map_int32_foreign_message_size() const {
  return _internal_map_int32_foreign_message_size();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>& TestArenaMap::_internal_map_int32_foreign_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_int32_foreign_message_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>& TestArenaMap::map_int32_foreign_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestArenaMap.map_int32_foreign_message)
  return _internal_map_int32_foreign_message();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>* TestArenaMap::_internal_mutable_map_int32_foreign_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_int32_foreign_message_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::protobuf_unittest::ForeignMessage>* TestArenaMap::mutable_map_int32_foreign_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestArenaMap.map_int32_foreign_message)
  return _internal_mutable_map_int32_foreign_message();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MessageContainingEnumCalledType

// map<string, .protobuf_unittest.MessageContainingEnumCalledType> type = 1;
inline int MessageContainingEnumCalledType::_internal_type_size() const {
  return _internal_type().size();
}
inline int MessageContainingEnumCalledType::type_size() const {
  return _internal_type_size();
}
inline void MessageContainingEnumCalledType::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::protobuf_unittest::MessageContainingEnumCalledType>& MessageContainingEnumCalledType::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::protobuf_unittest::MessageContainingEnumCalledType>& MessageContainingEnumCalledType::type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.MessageContainingEnumCalledType.type)
  return _internal_type();
}
inline ::google::protobuf::Map<std::string, ::protobuf_unittest::MessageContainingEnumCalledType>* MessageContainingEnumCalledType::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.type_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::protobuf_unittest::MessageContainingEnumCalledType>* MessageContainingEnumCalledType::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.MessageContainingEnumCalledType.type)
  return _internal_mutable_type();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MessageContainingMapCalledEntry

// map<int32, int32> entry = 1;
inline int MessageContainingMapCalledEntry::_internal_entry_size() const {
  return _internal_entry().size();
}
inline int MessageContainingMapCalledEntry::entry_size() const {
  return _internal_entry_size();
}
inline void MessageContainingMapCalledEntry::clear_entry() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entry_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& MessageContainingMapCalledEntry::_internal_entry() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entry_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& MessageContainingMapCalledEntry::entry() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.MessageContainingMapCalledEntry.entry)
  return _internal_entry();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* MessageContainingMapCalledEntry::_internal_mutable_entry() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.entry_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* MessageContainingMapCalledEntry::mutable_entry() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.MessageContainingMapCalledEntry.entry)
  return _internal_mutable_entry();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestRecursiveMapMessage

// map<string, .protobuf_unittest.TestRecursiveMapMessage> a = 1;
inline int TestRecursiveMapMessage::_internal_a_size() const {
  return _internal_a().size();
}
inline int TestRecursiveMapMessage::a_size() const {
  return _internal_a_size();
}
inline void TestRecursiveMapMessage::clear_a() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.a_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::protobuf_unittest::TestRecursiveMapMessage>& TestRecursiveMapMessage::_internal_a() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::protobuf_unittest::TestRecursiveMapMessage>& TestRecursiveMapMessage::a() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:protobuf_unittest.TestRecursiveMapMessage.a)
  return _internal_a();
}
inline ::google::protobuf::Map<std::string, ::protobuf_unittest::TestRecursiveMapMessage>* TestRecursiveMapMessage::_internal_mutable_a() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.a_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::protobuf_unittest::TestRecursiveMapMessage>* TestRecursiveMapMessage::mutable_a() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:protobuf_unittest.TestRecursiveMapMessage.a)
  return _internal_mutable_a();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::protobuf_unittest::MessageContainingEnumCalledType_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::protobuf_unittest::MessageContainingEnumCalledType_Type>() {
  return ::protobuf_unittest::MessageContainingEnumCalledType_Type_descriptor();
}
template <>
struct is_proto_enum<::protobuf_unittest::MapEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::protobuf_unittest::MapEnum>() {
  return ::protobuf_unittest::MapEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fmap_5funittest_2eproto_2epb_2eh
