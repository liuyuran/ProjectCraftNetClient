// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_no_field_presence.proto

#include "google/protobuf/unittest_no_field_presence.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace proto2_nofieldpresence_unittest {

inline constexpr TestAllTypes_NestedMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bb_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestAllTypes_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypes_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypes_NestedMessageDefaultTypeInternal() {}
  union {
    TestAllTypes_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypes_NestedMessageDefaultTypeInternal _TestAllTypes_NestedMessage_default_instance_;

inline constexpr ForeignMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : c_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ForeignMessage::ForeignMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ForeignMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForeignMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForeignMessageDefaultTypeInternal() {}
  union {
    ForeignMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForeignMessageDefaultTypeInternal _ForeignMessage_default_instance_;

inline constexpr TestProto2Required::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        proto2_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestProto2Required::TestProto2Required(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestProto2RequiredDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestProto2RequiredDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestProto2RequiredDefaultTypeInternal() {}
  union {
    TestProto2Required _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestProto2RequiredDefaultTypeInternal _TestProto2Required_default_instance_;

inline constexpr TestAllTypes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repeated_int32_{},
        _repeated_int32_cached_byte_size_{0},
        repeated_int64_{},
        _repeated_int64_cached_byte_size_{0},
        repeated_uint32_{},
        _repeated_uint32_cached_byte_size_{0},
        repeated_uint64_{},
        _repeated_uint64_cached_byte_size_{0},
        repeated_sint32_{},
        _repeated_sint32_cached_byte_size_{0},
        repeated_sint64_{},
        _repeated_sint64_cached_byte_size_{0},
        repeated_fixed32_{},
        repeated_fixed64_{},
        repeated_sfixed32_{},
        repeated_sfixed64_{},
        repeated_float_{},
        repeated_double_{},
        repeated_bool_{},
        repeated_string_{},
        repeated_bytes_{},
        repeated_nested_message_{},
        repeated_foreign_message_{},
        repeated_proto2_message_{},
        repeated_nested_enum_{},
        _repeated_nested_enum_cached_byte_size_{0},
        repeated_foreign_enum_{},
        _repeated_foreign_enum_cached_byte_size_{0},
        repeated_string_piece_{},
        repeated_cord_{},
        repeated_lazy_message_{},
        optional_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_string_piece_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_cord_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_nested_message_{nullptr},
        optional_foreign_message_{nullptr},
        optional_proto2_message_{nullptr},
        optional_lazy_message_{nullptr},
        optional_int64_{::int64_t{0}},
        optional_int32_{0},
        optional_uint32_{0u},
        optional_uint64_{::uint64_t{0u}},
        optional_sint64_{::int64_t{0}},
        optional_sint32_{0},
        optional_fixed32_{0u},
        optional_fixed64_{::uint64_t{0u}},
        optional_sfixed64_{::int64_t{0}},
        optional_sfixed32_{0},
        optional_float_{0},
        optional_double_{0},
        optional_bool_{false},
        optional_nested_enum_{static_cast< ::proto2_nofieldpresence_unittest::TestAllTypes_NestedEnum >(0)},
        optional_foreign_enum_{static_cast< ::proto2_nofieldpresence_unittest::ForeignEnum >(0)},
        oneof_field_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TestAllTypes::TestAllTypes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestAllTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypesDefaultTypeInternal() {}
  union {
    TestAllTypes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypesDefaultTypeInternal _TestAllTypes_default_instance_;
}  // namespace proto2_nofieldpresence_unittest
static ::_pb::Metadata file_level_metadata_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto = nullptr;
const ::uint32_t TableStruct_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage, _impl_.bb_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_int32_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_int64_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_uint32_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_uint64_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_sint32_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_sint64_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_fixed32_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_fixed64_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_sfixed32_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_sfixed64_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_float_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_double_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_bool_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_string_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_bytes_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_nested_message_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_foreign_message_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_proto2_message_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_nested_enum_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_foreign_enum_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_string_piece_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_cord_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.optional_lazy_message_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_int32_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_int64_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_uint32_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_uint64_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_sint32_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_sint64_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_fixed32_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_fixed64_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_sfixed32_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_sfixed64_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_float_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_double_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_bool_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_string_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_bytes_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_nested_message_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_foreign_message_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_proto2_message_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_nested_enum_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_foreign_enum_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_string_piece_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_cord_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.repeated_lazy_message_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_.oneof_field_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    2,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    3,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestProto2Required, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestProto2Required, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestProto2Required, _impl_.proto2_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::ForeignMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::ForeignMessage, _impl_.c_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage)},
        {9, 68, -1, sizeof(::proto2_nofieldpresence_unittest::TestAllTypes)},
        {118, 127, -1, sizeof(::proto2_nofieldpresence_unittest::TestProto2Required)},
        {128, -1, -1, sizeof(::proto2_nofieldpresence_unittest::ForeignMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::proto2_nofieldpresence_unittest::_TestAllTypes_NestedMessage_default_instance_._instance,
    &::proto2_nofieldpresence_unittest::_TestAllTypes_default_instance_._instance,
    &::proto2_nofieldpresence_unittest::_TestProto2Required_default_instance_._instance,
    &::proto2_nofieldpresence_unittest::_ForeignMessage_default_instance_._instance,
};
const char descriptor_table_protodef_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n0google/protobuf/unittest_no_field_pres"
    "ence.proto\022\037proto2_nofieldpresence_unitt"
    "est\032\036google/protobuf/unittest.proto\"\232\021\n\014"
    "TestAllTypes\022\026\n\016optional_int32\030\001 \001(\005\022\026\n\016"
    "optional_int64\030\002 \001(\003\022\027\n\017optional_uint32\030"
    "\003 \001(\r\022\027\n\017optional_uint64\030\004 \001(\004\022\027\n\017option"
    "al_sint32\030\005 \001(\021\022\027\n\017optional_sint64\030\006 \001(\022"
    "\022\030\n\020optional_fixed32\030\007 \001(\007\022\030\n\020optional_f"
    "ixed64\030\010 \001(\006\022\031\n\021optional_sfixed32\030\t \001(\017\022"
    "\031\n\021optional_sfixed64\030\n \001(\020\022\026\n\016optional_f"
    "loat\030\013 \001(\002\022\027\n\017optional_double\030\014 \001(\001\022\025\n\ro"
    "ptional_bool\030\r \001(\010\022\027\n\017optional_string\030\016 "
    "\001(\t\022\026\n\016optional_bytes\030\017 \001(\014\022\\\n\027optional_"
    "nested_message\030\022 \001(\0132;.proto2_nofieldpre"
    "sence_unittest.TestAllTypes.NestedMessag"
    "e\022Q\n\030optional_foreign_message\030\023 \001(\0132/.pr"
    "oto2_nofieldpresence_unittest.ForeignMes"
    "sage\022@\n\027optional_proto2_message\030\024 \001(\0132\037."
    "protobuf_unittest.TestAllTypes\022V\n\024option"
    "al_nested_enum\030\025 \001(\01628.proto2_nofieldpre"
    "sence_unittest.TestAllTypes.NestedEnum\022K"
    "\n\025optional_foreign_enum\030\026 \001(\0162,.proto2_n"
    "ofieldpresence_unittest.ForeignEnum\022!\n\025o"
    "ptional_string_piece\030\030 \001(\tB\002\010\002\022\031\n\roption"
    "al_cord\030\031 \001(\tB\002\010\001\022^\n\025optional_lazy_messa"
    "ge\030\036 \001(\0132;.proto2_nofieldpresence_unitte"
    "st.TestAllTypes.NestedMessageB\002(\001\022\026\n\016rep"
    "eated_int32\030\037 \003(\005\022\026\n\016repeated_int64\030  \003("
    "\003\022\027\n\017repeated_uint32\030! \003(\r\022\027\n\017repeated_u"
    "int64\030\" \003(\004\022\027\n\017repeated_sint32\030# \003(\021\022\027\n\017"
    "repeated_sint64\030$ \003(\022\022\030\n\020repeated_fixed3"
    "2\030% \003(\007\022\030\n\020repeated_fixed64\030& \003(\006\022\031\n\021rep"
    "eated_sfixed32\030\' \003(\017\022\031\n\021repeated_sfixed6"
    "4\030( \003(\020\022\026\n\016repeated_float\030) \003(\002\022\027\n\017repea"
    "ted_double\030* \003(\001\022\025\n\rrepeated_bool\030+ \003(\010\022"
    "\027\n\017repeated_string\030, \003(\t\022\026\n\016repeated_byt"
    "es\030- \003(\014\022\\\n\027repeated_nested_message\0300 \003("
    "\0132;.proto2_nofieldpresence_unittest.Test"
    "AllTypes.NestedMessage\022Q\n\030repeated_forei"
    "gn_message\0301 \003(\0132/.proto2_nofieldpresenc"
    "e_unittest.ForeignMessage\022@\n\027repeated_pr"
    "oto2_message\0302 \003(\0132\037.protobuf_unittest.T"
    "estAllTypes\022V\n\024repeated_nested_enum\0303 \003("
    "\01628.proto2_nofieldpresence_unittest.Test"
    "AllTypes.NestedEnum\022K\n\025repeated_foreign_"
    "enum\0304 \003(\0162,.proto2_nofieldpresence_unit"
    "test.ForeignEnum\022!\n\025repeated_string_piec"
    "e\0306 \003(\tB\002\010\002\022\031\n\rrepeated_cord\0307 \003(\tB\002\010\001\022^"
    "\n\025repeated_lazy_message\0309 \003(\0132;.proto2_n"
    "ofieldpresence_unittest.TestAllTypes.Nes"
    "tedMessageB\002(\001\022\026\n\014oneof_uint32\030o \001(\rH\000\022["
    "\n\024oneof_nested_message\030p \001(\0132;.proto2_no"
    "fieldpresence_unittest.TestAllTypes.Nest"
    "edMessageH\000\022\026\n\014oneof_string\030q \001(\tH\000\022N\n\no"
    "neof_enum\030r \001(\01628.proto2_nofieldpresence"
    "_unittest.TestAllTypes.NestedEnumH\000\032\033\n\rN"
    "estedMessage\022\n\n\002bb\030\001 \001(\005\"\'\n\nNestedEnum\022\007"
    "\n\003FOO\020\000\022\007\n\003BAR\020\001\022\007\n\003BAZ\020\002B\r\n\013oneof_field"
    "\"E\n\022TestProto2Required\022/\n\006proto2\030\001 \001(\0132\037"
    ".protobuf_unittest.TestRequired\"\033\n\016Forei"
    "gnMessage\022\t\n\001c\030\001 \001(\005*@\n\013ForeignEnum\022\017\n\013F"
    "OREIGN_FOO\020\000\022\017\n\013FOREIGN_BAR\020\001\022\017\n\013FOREIGN"
    "_BAZ\020\002B\005\222\003\002\010\002b\010editionsp\350\007"
};
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2funittest_2eproto,
};
static ::absl::once_flag descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto = {
    false,
    false,
    2506,
    descriptor_table_protodef_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto,
    "google/protobuf/unittest_no_field_presence.proto",
    &descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_once,
    descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto::offsets,
    file_level_metadata_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto,
    file_level_enum_descriptors_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto,
    file_level_service_descriptors_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_getter() {
  return &descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto(&descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto);
namespace proto2_nofieldpresence_unittest {
const ::google::protobuf::EnumDescriptor* TestAllTypes_NestedEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TestAllTypes_NestedEnum_internal_data_[] = {
    196608u, 0u, };
bool TestAllTypes_NestedEnum_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TestAllTypes_NestedEnum TestAllTypes::FOO;
constexpr TestAllTypes_NestedEnum TestAllTypes::BAR;
constexpr TestAllTypes_NestedEnum TestAllTypes::BAZ;
constexpr TestAllTypes_NestedEnum TestAllTypes::NestedEnum_MIN;
constexpr TestAllTypes_NestedEnum TestAllTypes::NestedEnum_MAX;
constexpr int TestAllTypes::NestedEnum_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ForeignEnum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ForeignEnum_internal_data_[] = {
    196608u, 0u, };
bool ForeignEnum_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class TestAllTypes_NestedMessage::_Internal {
 public:
};

TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage)
}
TestAllTypes_NestedMessage::TestAllTypes_NestedMessage(
    ::google::protobuf::Arena* arena, const TestAllTypes_NestedMessage& from)
    : TestAllTypes_NestedMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypes_NestedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestAllTypes_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bb_ = {};
}
TestAllTypes_NestedMessage::~TestAllTypes_NestedMessage() {
  // @@protoc_insertion_point(destructor:proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestAllTypes_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestAllTypes_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bb_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestAllTypes_NestedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestAllTypes_NestedMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestAllTypes_NestedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 bb = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestAllTypes_NestedMessage, _impl_.bb_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes_NestedMessage, _impl_.bb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 bb = 1;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes_NestedMessage, _impl_.bb_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestAllTypes_NestedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 bb = 1;
  if (this->_internal_bb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_bb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage)
  return target;
}

::size_t TestAllTypes_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 bb = 1;
  if (this->_internal_bb() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestAllTypes_NestedMessage::_class_data_ = {
    TestAllTypes_NestedMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TestAllTypes_NestedMessage::GetClassData() const {
  return &_class_data_;
}

void TestAllTypes_NestedMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestAllTypes_NestedMessage*>(&to_msg);
  auto& from = static_cast<const TestAllTypes_NestedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bb() != 0) {
    _this->_internal_set_bb(from._internal_bb());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestAllTypes_NestedMessage::CopyFrom(const TestAllTypes_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypes_NestedMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestAllTypes_NestedMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestAllTypes_NestedMessage::InternalSwap(TestAllTypes_NestedMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.bb_, other->_impl_.bb_);
}

::google::protobuf::Metadata TestAllTypes_NestedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto[0]);
}
// ===================================================================

class TestAllTypes::_Internal {
 public:
  using HasBits = decltype(std::declval<TestAllTypes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::proto2_nofieldpresence_unittest::TestAllTypes, _impl_._oneof_case_);
  static const ::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage& optional_nested_message(const TestAllTypes* msg);
  static void set_has_optional_nested_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::proto2_nofieldpresence_unittest::ForeignMessage& optional_foreign_message(const TestAllTypes* msg);
  static void set_has_optional_foreign_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestAllTypes& optional_proto2_message(const TestAllTypes* msg);
  static void set_has_optional_proto2_message(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage& optional_lazy_message(const TestAllTypes* msg);
  static void set_has_optional_lazy_message(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage& oneof_nested_message(const TestAllTypes* msg);
};

const ::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage& TestAllTypes::_Internal::optional_nested_message(const TestAllTypes* msg) {
  return *msg->_impl_.optional_nested_message_;
}
const ::proto2_nofieldpresence_unittest::ForeignMessage& TestAllTypes::_Internal::optional_foreign_message(const TestAllTypes* msg) {
  return *msg->_impl_.optional_foreign_message_;
}
const ::protobuf_unittest::TestAllTypes& TestAllTypes::_Internal::optional_proto2_message(const TestAllTypes* msg) {
  return *msg->_impl_.optional_proto2_message_;
}
const ::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage& TestAllTypes::_Internal::optional_lazy_message(const TestAllTypes* msg) {
  return *msg->_impl_.optional_lazy_message_;
}
const ::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage& TestAllTypes::_Internal::oneof_nested_message(const TestAllTypes* msg) {
  return *msg->_impl_.oneof_field_.oneof_nested_message_;
}
void TestAllTypes::clear_optional_proto2_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.optional_proto2_message_ != nullptr) _impl_.optional_proto2_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TestAllTypes::clear_repeated_proto2_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.repeated_proto2_message_.Clear();
}
void TestAllTypes::set_allocated_oneof_nested_message(::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage* oneof_nested_message) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_oneof_field();
  if (oneof_nested_message) {
    ::google::protobuf::Arena* submessage_arena = oneof_nested_message->GetArena();
    if (message_arena != submessage_arena) {
      oneof_nested_message = ::google::protobuf::internal::GetOwnedMessage(message_arena, oneof_nested_message, submessage_arena);
    }
    set_has_oneof_nested_message();
    _impl_.oneof_field_.oneof_nested_message_ = oneof_nested_message;
  }
  // @@protoc_insertion_point(field_set_allocated:proto2_nofieldpresence_unittest.TestAllTypes.oneof_nested_message)
}
TestAllTypes::TestAllTypes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto2_nofieldpresence_unittest.TestAllTypes)
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repeated_int32_{visibility, arena, from.repeated_int32_},
        _repeated_int32_cached_byte_size_{0},
        repeated_int64_{visibility, arena, from.repeated_int64_},
        _repeated_int64_cached_byte_size_{0},
        repeated_uint32_{visibility, arena, from.repeated_uint32_},
        _repeated_uint32_cached_byte_size_{0},
        repeated_uint64_{visibility, arena, from.repeated_uint64_},
        _repeated_uint64_cached_byte_size_{0},
        repeated_sint32_{visibility, arena, from.repeated_sint32_},
        _repeated_sint32_cached_byte_size_{0},
        repeated_sint64_{visibility, arena, from.repeated_sint64_},
        _repeated_sint64_cached_byte_size_{0},
        repeated_fixed32_{visibility, arena, from.repeated_fixed32_},
        repeated_fixed64_{visibility, arena, from.repeated_fixed64_},
        repeated_sfixed32_{visibility, arena, from.repeated_sfixed32_},
        repeated_sfixed64_{visibility, arena, from.repeated_sfixed64_},
        repeated_float_{visibility, arena, from.repeated_float_},
        repeated_double_{visibility, arena, from.repeated_double_},
        repeated_bool_{visibility, arena, from.repeated_bool_},
        repeated_string_{visibility, arena, from.repeated_string_},
        repeated_bytes_{visibility, arena, from.repeated_bytes_},
        repeated_nested_message_{visibility, arena, from.repeated_nested_message_},
        repeated_foreign_message_{visibility, arena, from.repeated_foreign_message_},
        repeated_proto2_message_{visibility, arena, from.repeated_proto2_message_},
        repeated_nested_enum_{visibility, arena, from.repeated_nested_enum_},
        _repeated_nested_enum_cached_byte_size_{0},
        repeated_foreign_enum_{visibility, arena, from.repeated_foreign_enum_},
        _repeated_foreign_enum_cached_byte_size_{0},
        repeated_string_piece_{visibility, arena, from.repeated_string_piece_},
        repeated_cord_{visibility, arena, from.repeated_cord_},
        repeated_lazy_message_{visibility, arena, from.repeated_lazy_message_},
        optional_string_(arena, from.optional_string_),
        optional_bytes_(arena, from.optional_bytes_),
        optional_string_piece_(arena, from.optional_string_piece_),
        optional_cord_(arena, from.optional_cord_),
        oneof_field_{},
        _oneof_case_{from._oneof_case_[0]} {}

TestAllTypes::TestAllTypes(
    ::google::protobuf::Arena* arena,
    const TestAllTypes& from)
    : ::google::protobuf::Message(arena) {
  TestAllTypes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.optional_nested_message_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage>(arena, *from._impl_.optional_nested_message_)
                : nullptr;
  _impl_.optional_foreign_message_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::proto2_nofieldpresence_unittest::ForeignMessage>(arena, *from._impl_.optional_foreign_message_)
                : nullptr;
  _impl_.optional_proto2_message_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypes>(arena, *from._impl_.optional_proto2_message_)
                : nullptr;
  _impl_.optional_lazy_message_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage>(arena, *from._impl_.optional_lazy_message_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optional_int64_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, optional_int64_),
           offsetof(Impl_, optional_foreign_enum_) -
               offsetof(Impl_, optional_int64_) +
               sizeof(Impl_::optional_foreign_enum_));
  switch (oneof_field_case()) {
    case ONEOF_FIELD_NOT_SET:
      break;
      case kOneofUint32:
        _impl_.oneof_field_.oneof_uint32_ = from._impl_.oneof_field_.oneof_uint32_;
        break;
      case kOneofNestedMessage:
        _impl_.oneof_field_.oneof_nested_message_ = CreateMaybeMessage<::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage>(arena, *from._impl_.oneof_field_.oneof_nested_message_);
        break;
      case kOneofString:
        new (&_impl_.oneof_field_.oneof_string_) decltype(_impl_.oneof_field_.oneof_string_){arena, from._impl_.oneof_field_.oneof_string_};
        break;
      case kOneofEnum:
        _impl_.oneof_field_.oneof_enum_ = from._impl_.oneof_field_.oneof_enum_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:proto2_nofieldpresence_unittest.TestAllTypes)
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repeated_int32_{visibility, arena},
        _repeated_int32_cached_byte_size_{0},
        repeated_int64_{visibility, arena},
        _repeated_int64_cached_byte_size_{0},
        repeated_uint32_{visibility, arena},
        _repeated_uint32_cached_byte_size_{0},
        repeated_uint64_{visibility, arena},
        _repeated_uint64_cached_byte_size_{0},
        repeated_sint32_{visibility, arena},
        _repeated_sint32_cached_byte_size_{0},
        repeated_sint64_{visibility, arena},
        _repeated_sint64_cached_byte_size_{0},
        repeated_fixed32_{visibility, arena},
        repeated_fixed64_{visibility, arena},
        repeated_sfixed32_{visibility, arena},
        repeated_sfixed64_{visibility, arena},
        repeated_float_{visibility, arena},
        repeated_double_{visibility, arena},
        repeated_bool_{visibility, arena},
        repeated_string_{visibility, arena},
        repeated_bytes_{visibility, arena},
        repeated_nested_message_{visibility, arena},
        repeated_foreign_message_{visibility, arena},
        repeated_proto2_message_{visibility, arena},
        repeated_nested_enum_{visibility, arena},
        _repeated_nested_enum_cached_byte_size_{0},
        repeated_foreign_enum_{visibility, arena},
        _repeated_foreign_enum_cached_byte_size_{0},
        repeated_string_piece_{visibility, arena},
        repeated_cord_{visibility, arena},
        repeated_lazy_message_{visibility, arena},
        optional_string_(arena),
        optional_bytes_(arena),
        optional_string_piece_(arena),
        optional_cord_(arena),
        oneof_field_{},
        _oneof_case_{} {}

inline void TestAllTypes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optional_nested_message_),
           0,
           offsetof(Impl_, optional_foreign_enum_) -
               offsetof(Impl_, optional_nested_message_) +
               sizeof(Impl_::optional_foreign_enum_));
}
TestAllTypes::~TestAllTypes() {
  // @@protoc_insertion_point(destructor:proto2_nofieldpresence_unittest.TestAllTypes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestAllTypes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.optional_string_.Destroy();
  _impl_.optional_bytes_.Destroy();
  _impl_.optional_string_piece_.Destroy();
  _impl_.optional_cord_.Destroy();
  delete _impl_.optional_nested_message_;
  delete _impl_.optional_foreign_message_;
  delete _impl_.optional_proto2_message_;
  delete _impl_.optional_lazy_message_;
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  _impl_.~Impl_();
}

void TestAllTypes::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:proto2_nofieldpresence_unittest.TestAllTypes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofNestedMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.oneof_field_.oneof_nested_message_;
      }
      break;
    }
    case kOneofString: {
      _impl_.oneof_field_.oneof_string_.Destroy();
      break;
    }
    case kOneofEnum: {
      // No need to clear
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


PROTOBUF_NOINLINE void TestAllTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto2_nofieldpresence_unittest.TestAllTypes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_int32_.Clear();
  _impl_.repeated_int64_.Clear();
  _impl_.repeated_uint32_.Clear();
  _impl_.repeated_uint64_.Clear();
  _impl_.repeated_sint32_.Clear();
  _impl_.repeated_sint64_.Clear();
  _impl_.repeated_fixed32_.Clear();
  _impl_.repeated_fixed64_.Clear();
  _impl_.repeated_sfixed32_.Clear();
  _impl_.repeated_sfixed64_.Clear();
  _impl_.repeated_float_.Clear();
  _impl_.repeated_double_.Clear();
  _impl_.repeated_bool_.Clear();
  _impl_.repeated_string_.Clear();
  _impl_.repeated_bytes_.Clear();
  _impl_.repeated_nested_message_.Clear();
  _impl_.repeated_foreign_message_.Clear();
  _impl_.repeated_proto2_message_.Clear();
  _impl_.repeated_nested_enum_.Clear();
  _impl_.repeated_foreign_enum_.Clear();
  _impl_.repeated_string_piece_.Clear();
  _impl_.repeated_cord_.Clear();
  _impl_.repeated_lazy_message_.Clear();
  _impl_.optional_string_.ClearToEmpty();
  _impl_.optional_bytes_.ClearToEmpty();
  _impl_.optional_string_piece_.ClearToEmpty();
  _impl_.optional_cord_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.optional_nested_message_ != nullptr);
      _impl_.optional_nested_message_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.optional_foreign_message_ != nullptr);
      _impl_.optional_foreign_message_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optional_proto2_message_ != nullptr);
      _impl_.optional_proto2_message_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.optional_lazy_message_ != nullptr);
      _impl_.optional_lazy_message_->Clear();
    }
  }
  ::memset(&_impl_.optional_int64_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.optional_foreign_enum_) -
      reinterpret_cast<char*>(&_impl_.optional_int64_)) + sizeof(_impl_.optional_foreign_enum_));
  clear_oneof_field();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestAllTypes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 50, 9, 211, 17> TestAllTypes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_._has_bits_),
    0, // no _extensions_
    114, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    507609088,  // skipmap
    offsetof(decltype(_table_), field_entries),
    50,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestAllTypes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 optional_int32 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestAllTypes, _impl_.optional_int32_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int32_)}},
    // int64 optional_int64 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestAllTypes, _impl_.optional_int64_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int64_)}},
    // uint32 optional_uint32 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestAllTypes, _impl_.optional_uint32_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint32_)}},
    // uint64 optional_uint64 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestAllTypes, _impl_.optional_uint64_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint64_)}},
    // sint32 optional_sint32 = 5;
    {::_pbi::TcParser::FastZ32S1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint32_)}},
    // sint64 optional_sint64 = 6;
    {::_pbi::TcParser::FastZ64S1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint64_)}},
    // fixed32 optional_fixed32 = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed32_)}},
    // fixed64 optional_fixed64 = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed64_)}},
    // sfixed32 optional_sfixed32 = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed32_)}},
    // sfixed64 optional_sfixed64 = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed64_)}},
    // float optional_float = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_float_)}},
    // double optional_double = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_double_)}},
    // bool optional_bool = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TestAllTypes, _impl_.optional_bool_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bool_)}},
    // string optional_string = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_string_)}},
    // bytes optional_bytes = 15;
    {::_pbi::TcParser::FastBS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bytes_)}},
    // repeated int64 repeated_int64 = 32;
    {::_pbi::TcParser::FastV64P2,
     {642, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int64_)}},
    // repeated uint32 repeated_uint32 = 33;
    {::_pbi::TcParser::FastV32P2,
     {650, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_uint32_)}},
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 0, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_message_)}},
    // .proto2_nofieldpresence_unittest.ForeignMessage optional_foreign_message = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 1, 1, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_message_)}},
    // .protobuf_unittest.TestAllTypes optional_proto2_message = 20;
    {::_pbi::TcParser::FastMtS2,
     {418, 2, 2, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_proto2_message_)}},
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_enum_)}},
    // .proto2_nofieldpresence_unittest.ForeignEnum optional_foreign_enum = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_enum_)}},
    // repeated sfixed32 repeated_sfixed32 = 39;
    {::_pbi::TcParser::FastF32P2,
     {698, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed32_)}},
    // repeated sfixed64 repeated_sfixed64 = 40;
    {::_pbi::TcParser::FastF64P2,
     {706, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed64_)}},
    // string optional_cord = 25 [ctype = CORD];
    {::_pbi::TcParser::FastUcS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_cord_)}},
    // repeated double repeated_double = 42;
    {::_pbi::TcParser::FastF64P2,
     {722, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_double_)}},
    // repeated bool repeated_bool = 43;
    {::_pbi::TcParser::FastV8P2,
     {730, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_bool_)}},
    // repeated string repeated_string = 44;
    {::_pbi::TcParser::FastUR2,
     {738, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_string_)}},
    // repeated bytes repeated_bytes = 45;
    {::_pbi::TcParser::FastBR2,
     {746, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_bytes_)}},
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage optional_lazy_message = 30 [lazy = true];
    {::_pbi::TcParser::FastMtS2,
     {498, 3, 3, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_lazy_message_)}},
    // repeated int32 repeated_int32 = 31;
    {::_pbi::TcParser::FastV32P2,
     {506, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int32_)}},
  }}, {{
    33, 0, 6,
    24576, 25, 65168, 39, 65535, 46, 65535, 46, 16383, 46, 65532, 48,
    65535, 65535
  }}, {{
    // int32 optional_int32 = 1;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 optional_int64 = 2;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_int64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // uint32 optional_uint32 = 3;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 optional_uint64 = 4;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_uint64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // sint32 optional_sint32 = 5;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt32)},
    // sint64 optional_sint64 = 6;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sint64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // fixed32 optional_fixed32 = 7;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFixed32)},
    // fixed64 optional_fixed64 = 8;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_fixed64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFixed64)},
    // sfixed32 optional_sfixed32 = 9;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed32_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSFixed32)},
    // sfixed64 optional_sfixed64 = 10;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_sfixed64_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSFixed64)},
    // float optional_float = 11;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_float_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // double optional_double = 12;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_double_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // bool optional_bool = 13;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bool_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string optional_string = 14;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_string_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes optional_bytes = 15;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_bytes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto2_nofieldpresence_unittest.ForeignMessage optional_foreign_message = 19;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_message_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .protobuf_unittest.TestAllTypes optional_proto2_message = 20;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_proto2_message_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_enum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .proto2_nofieldpresence_unittest.ForeignEnum optional_foreign_enum = 22;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_enum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string optional_string_piece = 24 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_string_piece_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string optional_cord = 25 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_cord_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage optional_lazy_message = 30 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_lazy_message_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 repeated_int32 = 31;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int64 repeated_int64 = 32;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_int64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated uint32 repeated_uint32 = 33;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_uint32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint64 repeated_uint64 = 34;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_uint64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // repeated sint32 repeated_sint32 = 35;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sint32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt32)},
    // repeated sint64 repeated_sint64 = 36;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sint64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt64)},
    // repeated fixed32 repeated_fixed32 = 37;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_fixed32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed32)},
    // repeated fixed64 repeated_fixed64 = 38;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_fixed64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed64)},
    // repeated sfixed32 repeated_sfixed32 = 39;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSFixed32)},
    // repeated sfixed64 repeated_sfixed64 = 40;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_sfixed64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSFixed64)},
    // repeated float repeated_float = 41;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_float_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated double repeated_double = 42;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_double_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated bool repeated_bool = 43;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_bool_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // repeated string repeated_string = 44;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_string_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated bytes repeated_bytes = 45;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_bytes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_nested_message_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .proto2_nofieldpresence_unittest.ForeignMessage repeated_foreign_message = 49;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_foreign_message_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypes repeated_proto2_message = 50;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_proto2_message_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .proto2_nofieldpresence_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_nested_enum_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .proto2_nofieldpresence_unittest.ForeignEnum repeated_foreign_enum = 52;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_foreign_enum_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_string_piece_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string repeated_cord = 55 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_cord_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.repeated_lazy_message_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 oneof_uint32 = 111;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_uint32_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_nested_message_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string oneof_string = 113;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedEnum oneof_enum = 114;
    {PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.oneof_field_.oneof_enum_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::proto2_nofieldpresence_unittest::ForeignMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::proto2_nofieldpresence_unittest::ForeignMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypes>()},
    {::_pbi::TcParser::GetTable<::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage>()},
  }}, {{
    "\54\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\25\15\0\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\25\15\0\0\0\14\0\0\0\0\0\0"
    "proto2_nofieldpresence_unittest.TestAllTypes"
    "optional_string"
    "optional_string_piece"
    "optional_cord"
    "repeated_string"
    "repeated_string_piece"
    "repeated_cord"
    "oneof_string"
  }},
};

::uint8_t* TestAllTypes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto2_nofieldpresence_unittest.TestAllTypes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 optional_int32 = 1;
  if (this->_internal_optional_int32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_optional_int32(), target);
  }

  // int64 optional_int64 = 2;
  if (this->_internal_optional_int64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_optional_int64(), target);
  }

  // uint32 optional_uint32 = 3;
  if (this->_internal_optional_uint32() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_optional_uint32(), target);
  }

  // uint64 optional_uint64 = 4;
  if (this->_internal_optional_uint64() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_optional_uint64(), target);
  }

  // sint32 optional_sint32 = 5;
  if (this->_internal_optional_sint32() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        5, this->_internal_optional_sint32(), target);
  }

  // sint64 optional_sint64 = 6;
  if (this->_internal_optional_sint64() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        6, this->_internal_optional_sint64(), target);
  }

  // fixed32 optional_fixed32 = 7;
  if (this->_internal_optional_fixed32() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        7, this->_internal_optional_fixed32(), target);
  }

  // fixed64 optional_fixed64 = 8;
  if (this->_internal_optional_fixed64() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        8, this->_internal_optional_fixed64(), target);
  }

  // sfixed32 optional_sfixed32 = 9;
  if (this->_internal_optional_sfixed32() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
        9, this->_internal_optional_sfixed32(), target);
  }

  // sfixed64 optional_sfixed64 = 10;
  if (this->_internal_optional_sfixed64() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
        10, this->_internal_optional_sfixed64(), target);
  }

  // float optional_float = 11;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_optional_float = this->_internal_optional_float();
  ::uint32_t raw_optional_float;
  memcpy(&raw_optional_float, &tmp_optional_float, sizeof(tmp_optional_float));
  if (raw_optional_float != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        11, this->_internal_optional_float(), target);
  }

  // double optional_double = 12;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_optional_double = this->_internal_optional_double();
  ::uint64_t raw_optional_double;
  memcpy(&raw_optional_double, &tmp_optional_double, sizeof(tmp_optional_double));
  if (raw_optional_double != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        12, this->_internal_optional_double(), target);
  }

  // bool optional_bool = 13;
  if (this->_internal_optional_bool() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        13, this->_internal_optional_bool(), target);
  }

  // string optional_string = 14;
  if (!this->_internal_optional_string().empty()) {
    const std::string& _s = this->_internal_optional_string();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto2_nofieldpresence_unittest.TestAllTypes.optional_string");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // bytes optional_bytes = 15;
  if (!this->_internal_optional_bytes().empty()) {
    const std::string& _s = this->_internal_optional_bytes();
    target = stream->WriteBytesMaybeAliased(15, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        18, _Internal::optional_nested_message(this),
        _Internal::optional_nested_message(this).GetCachedSize(), target, stream);
  }

  // .proto2_nofieldpresence_unittest.ForeignMessage optional_foreign_message = 19;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        19, _Internal::optional_foreign_message(this),
        _Internal::optional_foreign_message(this).GetCachedSize(), target, stream);
  }

  // .protobuf_unittest.TestAllTypes optional_proto2_message = 20;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        20, _Internal::optional_proto2_message(this),
        _Internal::optional_proto2_message(this).GetCachedSize(), target, stream);
  }

  // .proto2_nofieldpresence_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
  if (this->_internal_optional_nested_enum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        21, this->_internal_optional_nested_enum(), target);
  }

  // .proto2_nofieldpresence_unittest.ForeignEnum optional_foreign_enum = 22;
  if (this->_internal_optional_foreign_enum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        22, this->_internal_optional_foreign_enum(), target);
  }

  // string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (!this->_internal_optional_string_piece().empty()) {
    const std::string& _s = this->_internal_optional_string_piece();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto2_nofieldpresence_unittest.TestAllTypes.optional_string_piece");
    target = stream->WriteStringMaybeAliased(24, _s, target);
  }

  // string optional_cord = 25 [ctype = CORD];
  if (!this->_internal_optional_cord().empty()) {
    const std::string& _s = this->_internal_optional_cord();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto2_nofieldpresence_unittest.TestAllTypes.optional_cord");
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage optional_lazy_message = 30 [lazy = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        30, _Internal::optional_lazy_message(this),
        _Internal::optional_lazy_message(this).GetCachedSize(), target, stream);
  }

  // repeated int32 repeated_int32 = 31;
  {
    int byte_size = _impl_._repeated_int32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          31, _internal_repeated_int32(), byte_size, target);
    }
  }

  // repeated int64 repeated_int64 = 32;
  {
    int byte_size = _impl_._repeated_int64_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          32, _internal_repeated_int64(), byte_size, target);
    }
  }

  // repeated uint32 repeated_uint32 = 33;
  {
    int byte_size = _impl_._repeated_uint32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          33, _internal_repeated_uint32(), byte_size, target);
    }
  }

  // repeated uint64 repeated_uint64 = 34;
  {
    int byte_size = _impl_._repeated_uint64_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          34, _internal_repeated_uint64(), byte_size, target);
    }
  }

  // repeated sint32 repeated_sint32 = 35;
  {
    int byte_size = _impl_._repeated_sint32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteSInt32Packed(
          35, _internal_repeated_sint32(), byte_size, target);
    }
  }

  // repeated sint64 repeated_sint64 = 36;
  {
    int byte_size = _impl_._repeated_sint64_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteSInt64Packed(
          36, _internal_repeated_sint64(), byte_size, target);
    }
  }

  // repeated fixed32 repeated_fixed32 = 37;
  if (this->_internal_repeated_fixed32_size() > 0) {
    target = stream->WriteFixedPacked(37, _internal_repeated_fixed32(), target);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  if (this->_internal_repeated_fixed64_size() > 0) {
    target = stream->WriteFixedPacked(38, _internal_repeated_fixed64(), target);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  if (this->_internal_repeated_sfixed32_size() > 0) {
    target = stream->WriteFixedPacked(39, _internal_repeated_sfixed32(), target);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  if (this->_internal_repeated_sfixed64_size() > 0) {
    target = stream->WriteFixedPacked(40, _internal_repeated_sfixed64(), target);
  }

  // repeated float repeated_float = 41;
  if (this->_internal_repeated_float_size() > 0) {
    target = stream->WriteFixedPacked(41, _internal_repeated_float(), target);
  }

  // repeated double repeated_double = 42;
  if (this->_internal_repeated_double_size() > 0) {
    target = stream->WriteFixedPacked(42, _internal_repeated_double(), target);
  }

  // repeated bool repeated_bool = 43;
  if (this->_internal_repeated_bool_size() > 0) {
    target = stream->WriteFixedPacked(43, _internal_repeated_bool(), target);
  }

  // repeated string repeated_string = 44;
  for (int i = 0, n = this->_internal_repeated_string_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto2_nofieldpresence_unittest.TestAllTypes.repeated_string");
    target = stream->WriteString(44, s, target);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0, n = this->_internal_repeated_bytes_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_bytes().Get(i);
    target = stream->WriteBytes(45, s, target);
  }

  // repeated .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_nested_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_nested_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(48, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .proto2_nofieldpresence_unittest.ForeignMessage repeated_foreign_message = 49;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_foreign_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_foreign_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(49, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypes repeated_proto2_message = 50;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_proto2_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_proto2_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(50, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .proto2_nofieldpresence_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  {
    std::size_t byte_size = _impl_._repeated_nested_enum_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(51, _internal_repeated_nested_enum(),
                                       byte_size, target);
    }
  }

  // repeated .proto2_nofieldpresence_unittest.ForeignEnum repeated_foreign_enum = 52;
  {
    std::size_t byte_size = _impl_._repeated_foreign_enum_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(52, _internal_repeated_foreign_enum(),
                                       byte_size, target);
    }
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0, n = this->_internal_repeated_string_piece_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string_piece().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto2_nofieldpresence_unittest.TestAllTypes.repeated_string_piece");
    target = stream->WriteString(54, s, target);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0, n = this->_internal_repeated_cord_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_cord().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto2_nofieldpresence_unittest.TestAllTypes.repeated_cord");
    target = stream->WriteString(55, s, target);
  }

  // repeated .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_lazy_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_lazy_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(57, repfield, repfield.GetCachedSize(), target, stream);
  }

  switch (oneof_field_case()) {
    case kOneofUint32: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          111, this->_internal_oneof_uint32(), target);
      break;
    }
    case kOneofNestedMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          112, _Internal::oneof_nested_message(this),
          _Internal::oneof_nested_message(this).GetCachedSize(), target, stream);
      break;
    }
    case kOneofString: {
      const std::string& _s = this->_internal_oneof_string();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proto2_nofieldpresence_unittest.TestAllTypes.oneof_string");
      target = stream->WriteStringMaybeAliased(113, _s, target);
      break;
    }
    case kOneofEnum: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          114, this->_internal_oneof_enum(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto2_nofieldpresence_unittest.TestAllTypes)
  return target;
}

::size_t TestAllTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto2_nofieldpresence_unittest.TestAllTypes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 repeated_int32 = 31;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32())
    ;
    _impl_._repeated_int32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 repeated_int64 = 32;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_repeated_int64())
    ;
    _impl_._repeated_int64_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint32 repeated_uint32 = 33;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_repeated_uint32())
    ;
    _impl_._repeated_uint32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint64 repeated_uint64 = 34;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_repeated_uint64())
    ;
    _impl_._repeated_uint64_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint32 repeated_sint32 = 35;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt32Size(
        this->_internal_repeated_sint32())
    ;
    _impl_._repeated_sint32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint64 repeated_sint64 = 36;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt64Size(
        this->_internal_repeated_sint64())
    ;
    _impl_._repeated_sint64_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed32 repeated_fixed32 = 37;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed32_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed64 repeated_fixed64 = 38;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed64_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed32 repeated_sfixed32 = 39;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_sfixed32_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed64 repeated_sfixed64 = 40;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_repeated_sfixed64_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float repeated_float = 41;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_float_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double repeated_double = 42;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_repeated_double_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool repeated_bool = 43;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated string repeated_string = 44;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string().size());
  for (int i = 0, n = _internal_repeated_string().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string().Get(i));
  }
  // repeated bytes repeated_bytes = 45;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_bytes().size());
  for (int i = 0, n = _internal_repeated_bytes().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_repeated_bytes().Get(i));
  }
  // repeated .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage repeated_nested_message = 48;
  total_size += 2UL * this->_internal_repeated_nested_message_size();
  for (const auto& msg : this->_internal_repeated_nested_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .proto2_nofieldpresence_unittest.ForeignMessage repeated_foreign_message = 49;
  total_size += 2UL * this->_internal_repeated_foreign_message_size();
  for (const auto& msg : this->_internal_repeated_foreign_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypes repeated_proto2_message = 50;
  total_size += 2UL * this->_internal_repeated_proto2_message_size();
  for (const auto& msg : this->_internal_repeated_proto2_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .proto2_nofieldpresence_unittest.TestAllTypes.NestedEnum repeated_nested_enum = 51;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_nested_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_nested_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 2;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._repeated_nested_enum_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .proto2_nofieldpresence_unittest.ForeignEnum repeated_foreign_enum = 52;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_foreign_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_foreign_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 2;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._repeated_foreign_enum_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string_piece().size());
  for (int i = 0, n = _internal_repeated_string_piece().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string_piece().Get(i));
  }
  // repeated string repeated_cord = 55 [ctype = CORD];
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_cord().size());
  for (int i = 0, n = _internal_repeated_cord().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_cord().Get(i));
  }
  // repeated .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage repeated_lazy_message = 57 [lazy = true];
  total_size += 2UL * this->_internal_repeated_lazy_message_size();
  for (const auto& msg : this->_internal_repeated_lazy_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string optional_string = 14;
  if (!this->_internal_optional_string().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_optional_string());
  }

  // bytes optional_bytes = 15;
  if (!this->_internal_optional_bytes().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_optional_bytes());
  }

  // string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (!this->_internal_optional_string_piece().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_optional_string_piece());
  }

  // string optional_cord = 25 [ctype = CORD];
  if (!this->_internal_optional_cord().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_optional_cord());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage optional_nested_message = 18;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_nested_message_);
    }

    // .proto2_nofieldpresence_unittest.ForeignMessage optional_foreign_message = 19;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_foreign_message_);
    }

    // .protobuf_unittest.TestAllTypes optional_proto2_message = 20;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_proto2_message_);
    }

    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage optional_lazy_message = 30 [lazy = true];
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_lazy_message_);
    }

  }
  // int64 optional_int64 = 2;
  if (this->_internal_optional_int64() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_optional_int64());
  }

  // int32 optional_int32 = 1;
  if (this->_internal_optional_int32() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_optional_int32());
  }

  // uint32 optional_uint32 = 3;
  if (this->_internal_optional_uint32() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_optional_uint32());
  }

  // uint64 optional_uint64 = 4;
  if (this->_internal_optional_uint64() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_optional_uint64());
  }

  // sint64 optional_sint64 = 6;
  if (this->_internal_optional_sint64() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_optional_sint64());
  }

  // sint32 optional_sint32 = 5;
  if (this->_internal_optional_sint32() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
        this->_internal_optional_sint32());
  }

  // fixed32 optional_fixed32 = 7;
  if (this->_internal_optional_fixed32() != 0) {
    total_size += 5;
  }

  // fixed64 optional_fixed64 = 8;
  if (this->_internal_optional_fixed64() != 0) {
    total_size += 9;
  }

  // sfixed64 optional_sfixed64 = 10;
  if (this->_internal_optional_sfixed64() != 0) {
    total_size += 9;
  }

  // sfixed32 optional_sfixed32 = 9;
  if (this->_internal_optional_sfixed32() != 0) {
    total_size += 5;
  }

  // float optional_float = 11;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_optional_float = this->_internal_optional_float();
  ::uint32_t raw_optional_float;
  memcpy(&raw_optional_float, &tmp_optional_float, sizeof(tmp_optional_float));
  if (raw_optional_float != 0) {
    total_size += 5;
  }

  // double optional_double = 12;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_optional_double = this->_internal_optional_double();
  ::uint64_t raw_optional_double;
  memcpy(&raw_optional_double, &tmp_optional_double, sizeof(tmp_optional_double));
  if (raw_optional_double != 0) {
    total_size += 9;
  }

  // bool optional_bool = 13;
  if (this->_internal_optional_bool() != 0) {
    total_size += 2;
  }

  // .proto2_nofieldpresence_unittest.TestAllTypes.NestedEnum optional_nested_enum = 21;
  if (this->_internal_optional_nested_enum() != 0) {
    total_size += 2 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_nested_enum());
  }

  // .proto2_nofieldpresence_unittest.ForeignEnum optional_foreign_enum = 22;
  if (this->_internal_optional_foreign_enum() != 0) {
    total_size += 2 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_foreign_enum());
  }

  switch (oneof_field_case()) {
    // uint32 oneof_uint32 = 111;
    case kOneofUint32: {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_oneof_uint32());
      break;
    }
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedMessage oneof_nested_message = 112;
    case kOneofNestedMessage: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.oneof_field_.oneof_nested_message_);
      break;
    }
    // string oneof_string = 113;
    case kOneofString: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_oneof_string());
      break;
    }
    // .proto2_nofieldpresence_unittest.TestAllTypes.NestedEnum oneof_enum = 114;
    case kOneofEnum: {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_oneof_enum());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestAllTypes::_class_data_ = {
    TestAllTypes::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TestAllTypes::GetClassData() const {
  return &_class_data_;
}

void TestAllTypes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestAllTypes*>(&to_msg);
  auto& from = static_cast<const TestAllTypes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto2_nofieldpresence_unittest.TestAllTypes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32()->MergeFrom(from._internal_repeated_int32());
  _this->_internal_mutable_repeated_int64()->MergeFrom(from._internal_repeated_int64());
  _this->_internal_mutable_repeated_uint32()->MergeFrom(from._internal_repeated_uint32());
  _this->_internal_mutable_repeated_uint64()->MergeFrom(from._internal_repeated_uint64());
  _this->_internal_mutable_repeated_sint32()->MergeFrom(from._internal_repeated_sint32());
  _this->_internal_mutable_repeated_sint64()->MergeFrom(from._internal_repeated_sint64());
  _this->_internal_mutable_repeated_fixed32()->MergeFrom(from._internal_repeated_fixed32());
  _this->_internal_mutable_repeated_fixed64()->MergeFrom(from._internal_repeated_fixed64());
  _this->_internal_mutable_repeated_sfixed32()->MergeFrom(from._internal_repeated_sfixed32());
  _this->_internal_mutable_repeated_sfixed64()->MergeFrom(from._internal_repeated_sfixed64());
  _this->_internal_mutable_repeated_float()->MergeFrom(from._internal_repeated_float());
  _this->_internal_mutable_repeated_double()->MergeFrom(from._internal_repeated_double());
  _this->_internal_mutable_repeated_bool()->MergeFrom(from._internal_repeated_bool());
  _this->_internal_mutable_repeated_string()->MergeFrom(from._internal_repeated_string());
  _this->_internal_mutable_repeated_bytes()->MergeFrom(from._internal_repeated_bytes());
  _this->_internal_mutable_repeated_nested_message()->MergeFrom(
      from._internal_repeated_nested_message());
  _this->_internal_mutable_repeated_foreign_message()->MergeFrom(
      from._internal_repeated_foreign_message());
  _this->_internal_mutable_repeated_proto2_message()->MergeFrom(
      from._internal_repeated_proto2_message());
  _this->_internal_mutable_repeated_nested_enum()->MergeFrom(from._internal_repeated_nested_enum());
  _this->_internal_mutable_repeated_foreign_enum()->MergeFrom(from._internal_repeated_foreign_enum());
  _this->_internal_mutable_repeated_string_piece()->MergeFrom(from._internal_repeated_string_piece());
  _this->_internal_mutable_repeated_cord()->MergeFrom(from._internal_repeated_cord());
  _this->_internal_mutable_repeated_lazy_message()->MergeFrom(
      from._internal_repeated_lazy_message());
  if (!from._internal_optional_string().empty()) {
    _this->_internal_set_optional_string(from._internal_optional_string());
  }
  if (!from._internal_optional_bytes().empty()) {
    _this->_internal_set_optional_bytes(from._internal_optional_bytes());
  }
  if (!from._internal_optional_string_piece().empty()) {
    _this->_internal_set_optional_string_piece(from._internal_optional_string_piece());
  }
  if (!from._internal_optional_cord().empty()) {
    _this->_internal_set_optional_cord(from._internal_optional_cord());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_optional_nested_message()->::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage::MergeFrom(
          from._internal_optional_nested_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_optional_foreign_message()->::proto2_nofieldpresence_unittest::ForeignMessage::MergeFrom(
          from._internal_optional_foreign_message());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_optional_proto2_message()->::protobuf_unittest::TestAllTypes::MergeFrom(
          from._internal_optional_proto2_message());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_optional_lazy_message()->::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage::MergeFrom(
          from._internal_optional_lazy_message());
    }
  }
  if (from._internal_optional_int64() != 0) {
    _this->_internal_set_optional_int64(from._internal_optional_int64());
  }
  if (from._internal_optional_int32() != 0) {
    _this->_internal_set_optional_int32(from._internal_optional_int32());
  }
  if (from._internal_optional_uint32() != 0) {
    _this->_internal_set_optional_uint32(from._internal_optional_uint32());
  }
  if (from._internal_optional_uint64() != 0) {
    _this->_internal_set_optional_uint64(from._internal_optional_uint64());
  }
  if (from._internal_optional_sint64() != 0) {
    _this->_internal_set_optional_sint64(from._internal_optional_sint64());
  }
  if (from._internal_optional_sint32() != 0) {
    _this->_internal_set_optional_sint32(from._internal_optional_sint32());
  }
  if (from._internal_optional_fixed32() != 0) {
    _this->_internal_set_optional_fixed32(from._internal_optional_fixed32());
  }
  if (from._internal_optional_fixed64() != 0) {
    _this->_internal_set_optional_fixed64(from._internal_optional_fixed64());
  }
  if (from._internal_optional_sfixed64() != 0) {
    _this->_internal_set_optional_sfixed64(from._internal_optional_sfixed64());
  }
  if (from._internal_optional_sfixed32() != 0) {
    _this->_internal_set_optional_sfixed32(from._internal_optional_sfixed32());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_optional_float = from._internal_optional_float();
  ::uint32_t raw_optional_float;
  memcpy(&raw_optional_float, &tmp_optional_float, sizeof(tmp_optional_float));
  if (raw_optional_float != 0) {
    _this->_internal_set_optional_float(from._internal_optional_float());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_optional_double = from._internal_optional_double();
  ::uint64_t raw_optional_double;
  memcpy(&raw_optional_double, &tmp_optional_double, sizeof(tmp_optional_double));
  if (raw_optional_double != 0) {
    _this->_internal_set_optional_double(from._internal_optional_double());
  }
  if (from._internal_optional_bool() != 0) {
    _this->_internal_set_optional_bool(from._internal_optional_bool());
  }
  if (from._internal_optional_nested_enum() != 0) {
    _this->_internal_set_optional_nested_enum(from._internal_optional_nested_enum());
  }
  if (from._internal_optional_foreign_enum() != 0) {
    _this->_internal_set_optional_foreign_enum(from._internal_optional_foreign_enum());
  }
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      _this->_internal_set_oneof_uint32(from._internal_oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      _this->_internal_mutable_oneof_nested_message()->::proto2_nofieldpresence_unittest::TestAllTypes_NestedMessage::MergeFrom(
          from._internal_oneof_nested_message());
      break;
    }
    case kOneofString: {
      _this->_internal_set_oneof_string(from._internal_oneof_string());
      break;
    }
    case kOneofEnum: {
      _this->_internal_set_oneof_enum(from._internal_oneof_enum());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestAllTypes::CopyFrom(const TestAllTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto2_nofieldpresence_unittest.TestAllTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypes::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestAllTypes::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestAllTypes::InternalSwap(TestAllTypes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_int32_.InternalSwap(&other->_impl_.repeated_int32_);
  _impl_.repeated_int64_.InternalSwap(&other->_impl_.repeated_int64_);
  _impl_.repeated_uint32_.InternalSwap(&other->_impl_.repeated_uint32_);
  _impl_.repeated_uint64_.InternalSwap(&other->_impl_.repeated_uint64_);
  _impl_.repeated_sint32_.InternalSwap(&other->_impl_.repeated_sint32_);
  _impl_.repeated_sint64_.InternalSwap(&other->_impl_.repeated_sint64_);
  _impl_.repeated_fixed32_.InternalSwap(&other->_impl_.repeated_fixed32_);
  _impl_.repeated_fixed64_.InternalSwap(&other->_impl_.repeated_fixed64_);
  _impl_.repeated_sfixed32_.InternalSwap(&other->_impl_.repeated_sfixed32_);
  _impl_.repeated_sfixed64_.InternalSwap(&other->_impl_.repeated_sfixed64_);
  _impl_.repeated_float_.InternalSwap(&other->_impl_.repeated_float_);
  _impl_.repeated_double_.InternalSwap(&other->_impl_.repeated_double_);
  _impl_.repeated_bool_.InternalSwap(&other->_impl_.repeated_bool_);
  _impl_.repeated_string_.InternalSwap(&other->_impl_.repeated_string_);
  _impl_.repeated_bytes_.InternalSwap(&other->_impl_.repeated_bytes_);
  _impl_.repeated_nested_message_.InternalSwap(&other->_impl_.repeated_nested_message_);
  _impl_.repeated_foreign_message_.InternalSwap(&other->_impl_.repeated_foreign_message_);
  _impl_.repeated_proto2_message_.InternalSwap(&other->_impl_.repeated_proto2_message_);
  _impl_.repeated_nested_enum_.InternalSwap(&other->_impl_.repeated_nested_enum_);
  _impl_.repeated_foreign_enum_.InternalSwap(&other->_impl_.repeated_foreign_enum_);
  _impl_.repeated_string_piece_.InternalSwap(&other->_impl_.repeated_string_piece_);
  _impl_.repeated_cord_.InternalSwap(&other->_impl_.repeated_cord_);
  _impl_.repeated_lazy_message_.InternalSwap(&other->_impl_.repeated_lazy_message_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_, &other->_impl_.optional_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_bytes_, &other->_impl_.optional_bytes_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_piece_, &other->_impl_.optional_string_piece_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_cord_, &other->_impl_.optional_cord_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_foreign_enum_)
      + sizeof(TestAllTypes::_impl_.optional_foreign_enum_)
      - PROTOBUF_FIELD_OFFSET(TestAllTypes, _impl_.optional_nested_message_)>(
          reinterpret_cast<char*>(&_impl_.optional_nested_message_),
          reinterpret_cast<char*>(&other->_impl_.optional_nested_message_));
  swap(_impl_.oneof_field_, other->_impl_.oneof_field_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TestAllTypes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto[1]);
}
// ===================================================================

class TestProto2Required::_Internal {
 public:
  using HasBits = decltype(std::declval<TestProto2Required>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestProto2Required, _impl_._has_bits_);
  static const ::protobuf_unittest::TestRequired& proto2(const TestProto2Required* msg);
  static void set_has_proto2(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestRequired& TestProto2Required::_Internal::proto2(const TestProto2Required* msg) {
  return *msg->_impl_.proto2_;
}
void TestProto2Required::clear_proto2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.proto2_ != nullptr) _impl_.proto2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TestProto2Required::TestProto2Required(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto2_nofieldpresence_unittest.TestProto2Required)
}
inline PROTOBUF_NDEBUG_INLINE TestProto2Required::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TestProto2Required::TestProto2Required(
    ::google::protobuf::Arena* arena,
    const TestProto2Required& from)
    : ::google::protobuf::Message(arena) {
  TestProto2Required* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.proto2_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::protobuf_unittest::TestRequired>(arena, *from._impl_.proto2_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:proto2_nofieldpresence_unittest.TestProto2Required)
}
inline PROTOBUF_NDEBUG_INLINE TestProto2Required::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestProto2Required::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proto2_ = {};
}
TestProto2Required::~TestProto2Required() {
  // @@protoc_insertion_point(destructor:proto2_nofieldpresence_unittest.TestProto2Required)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TestProto2Required::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.proto2_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestProto2Required::Clear() {
// @@protoc_insertion_point(message_clear_start:proto2_nofieldpresence_unittest.TestProto2Required)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.proto2_ != nullptr);
    _impl_.proto2_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TestProto2Required::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestProto2Required::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestProto2Required, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestProto2Required_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .protobuf_unittest.TestRequired proto2 = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestProto2Required, _impl_.proto2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .protobuf_unittest.TestRequired proto2 = 1;
    {PROTOBUF_FIELD_OFFSET(TestProto2Required, _impl_.proto2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestRequired>()},
  }}, {{
  }},
};

::uint8_t* TestProto2Required::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto2_nofieldpresence_unittest.TestProto2Required)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .protobuf_unittest.TestRequired proto2 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::proto2(this),
        _Internal::proto2(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto2_nofieldpresence_unittest.TestProto2Required)
  return target;
}

::size_t TestProto2Required::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto2_nofieldpresence_unittest.TestProto2Required)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protobuf_unittest.TestRequired proto2 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.proto2_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TestProto2Required::_class_data_ = {
    TestProto2Required::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TestProto2Required::GetClassData() const {
  return &_class_data_;
}

void TestProto2Required::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TestProto2Required*>(&to_msg);
  auto& from = static_cast<const TestProto2Required&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto2_nofieldpresence_unittest.TestProto2Required)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_proto2()->::protobuf_unittest::TestRequired::MergeFrom(
        from._internal_proto2());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestProto2Required::CopyFrom(const TestProto2Required& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto2_nofieldpresence_unittest.TestProto2Required)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestProto2Required::IsInitialized() const {
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.proto2_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* TestProto2Required::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestProto2Required::InternalSwap(TestProto2Required* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.proto2_, other->_impl_.proto2_);
}

::google::protobuf::Metadata TestProto2Required::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto[2]);
}
// ===================================================================

class ForeignMessage::_Internal {
 public:
};

ForeignMessage::ForeignMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:proto2_nofieldpresence_unittest.ForeignMessage)
}
ForeignMessage::ForeignMessage(
    ::google::protobuf::Arena* arena, const ForeignMessage& from)
    : ForeignMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ForeignMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ForeignMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.c_ = {};
}
ForeignMessage::~ForeignMessage() {
  // @@protoc_insertion_point(destructor:proto2_nofieldpresence_unittest.ForeignMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ForeignMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ForeignMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto2_nofieldpresence_unittest.ForeignMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.c_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ForeignMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ForeignMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ForeignMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 c = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ForeignMessage, _impl_.c_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_.c_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 c = 1;
    {PROTOBUF_FIELD_OFFSET(ForeignMessage, _impl_.c_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ForeignMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto2_nofieldpresence_unittest.ForeignMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 c = 1;
  if (this->_internal_c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto2_nofieldpresence_unittest.ForeignMessage)
  return target;
}

::size_t ForeignMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto2_nofieldpresence_unittest.ForeignMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 c = 1;
  if (this->_internal_c() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_c());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ForeignMessage::_class_data_ = {
    ForeignMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ForeignMessage::GetClassData() const {
  return &_class_data_;
}

void ForeignMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ForeignMessage*>(&to_msg);
  auto& from = static_cast<const ForeignMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto2_nofieldpresence_unittest.ForeignMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_c() != 0) {
    _this->_internal_set_c(from._internal_c());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ForeignMessage::CopyFrom(const ForeignMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto2_nofieldpresence_unittest.ForeignMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ForeignMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ForeignMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ForeignMessage::InternalSwap(ForeignMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.c_, other->_impl_.c_);
}

::google::protobuf::Metadata ForeignMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_getter, &descriptor_table_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto_once,
      file_level_metadata_google_2fprotobuf_2funittest_5fno_5ffield_5fpresence_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace proto2_nofieldpresence_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
