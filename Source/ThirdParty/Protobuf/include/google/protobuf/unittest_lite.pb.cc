// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_lite.proto

#include "google/protobuf/unittest_lite.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "absl/strings/internal/string_constant.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf_unittest {

inline constexpr V2MessageLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        int_field_{0},
        enum_field_{static_cast< ::protobuf_unittest::V2EnumLite >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR V2MessageLite::V2MessageLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct V2MessageLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR V2MessageLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~V2MessageLiteDefaultTypeInternal() {}
  union {
    V2MessageLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 V2MessageLiteDefaultTypeInternal _V2MessageLite_default_instance_;

inline constexpr V1MessageLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        int_field_{0},
        enum_field_{static_cast< ::protobuf_unittest::V1EnumLite >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR V1MessageLite::V1MessageLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct V1MessageLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR V1MessageLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~V1MessageLiteDefaultTypeInternal() {}
  union {
    V1MessageLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 V1MessageLiteDefaultTypeInternal _V1MessageLite_default_instance_;

inline constexpr TestPackedTypesLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : packed_int32_{},
        _packed_int32_cached_byte_size_{0},
        packed_int64_{},
        _packed_int64_cached_byte_size_{0},
        packed_uint32_{},
        _packed_uint32_cached_byte_size_{0},
        packed_uint64_{},
        _packed_uint64_cached_byte_size_{0},
        packed_sint32_{},
        _packed_sint32_cached_byte_size_{0},
        packed_sint64_{},
        _packed_sint64_cached_byte_size_{0},
        packed_fixed32_{},
        packed_fixed64_{},
        packed_sfixed32_{},
        packed_sfixed64_{},
        packed_float_{},
        packed_double_{},
        packed_bool_{},
        packed_enum_{},
        _packed_enum_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestPackedTypesLite::TestPackedTypesLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestPackedTypesLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPackedTypesLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPackedTypesLiteDefaultTypeInternal() {}
  union {
    TestPackedTypesLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPackedTypesLiteDefaultTypeInternal _TestPackedTypesLite_default_instance_;

inline constexpr TestPackedExtensionsLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestPackedExtensionsLite::TestPackedExtensionsLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestPackedExtensionsLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPackedExtensionsLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPackedExtensionsLiteDefaultTypeInternal() {}
  union {
    TestPackedExtensionsLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPackedExtensionsLiteDefaultTypeInternal _TestPackedExtensionsLite_default_instance_;

inline constexpr TestNestedExtensionLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestNestedExtensionLite::TestNestedExtensionLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestNestedExtensionLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestNestedExtensionLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestNestedExtensionLiteDefaultTypeInternal() {}
  union {
    TestNestedExtensionLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestNestedExtensionLiteDefaultTypeInternal _TestNestedExtensionLite_default_instance_;

inline constexpr TestMessageSetLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestMessageSetLite::TestMessageSetLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestMessageSetLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessageSetLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessageSetLiteDefaultTypeInternal() {}
  union {
    TestMessageSetLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessageSetLiteDefaultTypeInternal _TestMessageSetLite_default_instance_;

inline constexpr TestHugeFieldNumbersLite_OptionalGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        group_a_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestHugeFieldNumbersLite_OptionalGroup::TestHugeFieldNumbersLite_OptionalGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestHugeFieldNumbersLite_OptionalGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestHugeFieldNumbersLite_OptionalGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestHugeFieldNumbersLite_OptionalGroupDefaultTypeInternal() {}
  union {
    TestHugeFieldNumbersLite_OptionalGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestHugeFieldNumbersLite_OptionalGroupDefaultTypeInternal _TestHugeFieldNumbersLite_OptionalGroup_default_instance_;

inline constexpr TestEmptyMessageWithExtensionsLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestEmptyMessageWithExtensionsLite::TestEmptyMessageWithExtensionsLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestEmptyMessageWithExtensionsLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEmptyMessageWithExtensionsLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEmptyMessageWithExtensionsLiteDefaultTypeInternal() {}
  union {
    TestEmptyMessageWithExtensionsLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEmptyMessageWithExtensionsLiteDefaultTypeInternal _TestEmptyMessageWithExtensionsLite_default_instance_;

inline constexpr TestEmptyMessageLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestEmptyMessageLite::TestEmptyMessageLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestEmptyMessageLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestEmptyMessageLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestEmptyMessageLiteDefaultTypeInternal() {}
  union {
    TestEmptyMessageLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestEmptyMessageLiteDefaultTypeInternal _TestEmptyMessageLite_default_instance_;

inline constexpr TestDeprecatedLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        deprecated_field3_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        deprecated_field4_{nullptr},
        deprecated_field_{0},
        deprecated_field2_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestDeprecatedLite::TestDeprecatedLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestDeprecatedLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDeprecatedLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDeprecatedLiteDefaultTypeInternal() {}
  union {
    TestDeprecatedLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDeprecatedLiteDefaultTypeInternal _TestDeprecatedLite_default_instance_;

inline constexpr TestAllTypesLite_RepeatedGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        a_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestAllTypesLite_RepeatedGroup::TestAllTypesLite_RepeatedGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestAllTypesLite_RepeatedGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypesLite_RepeatedGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypesLite_RepeatedGroupDefaultTypeInternal() {}
  union {
    TestAllTypesLite_RepeatedGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypesLite_RepeatedGroupDefaultTypeInternal _TestAllTypesLite_RepeatedGroup_default_instance_;

inline constexpr TestAllTypesLite_OptionalGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        a_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestAllTypesLite_OptionalGroup::TestAllTypesLite_OptionalGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestAllTypesLite_OptionalGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypesLite_OptionalGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypesLite_OptionalGroupDefaultTypeInternal() {}
  union {
    TestAllTypesLite_OptionalGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypesLite_OptionalGroupDefaultTypeInternal _TestAllTypesLite_OptionalGroup_default_instance_;

inline constexpr TestAllTypesLite_NestedMessage2::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dd_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestAllTypesLite_NestedMessage2::TestAllTypesLite_NestedMessage2(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestAllTypesLite_NestedMessage2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypesLite_NestedMessage2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypesLite_NestedMessage2DefaultTypeInternal() {}
  union {
    TestAllTypesLite_NestedMessage2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypesLite_NestedMessage2DefaultTypeInternal _TestAllTypesLite_NestedMessage2_default_instance_;

inline constexpr TestAllTypesLite_NestedMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dd_{},
        _dd_cached_byte_size_{0},
        cc_{::int64_t{0}},
        bb_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestAllTypesLite_NestedMessage::TestAllTypesLite_NestedMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestAllTypesLite_NestedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypesLite_NestedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypesLite_NestedMessageDefaultTypeInternal() {}
  union {
    TestAllTypesLite_NestedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypesLite_NestedMessageDefaultTypeInternal _TestAllTypesLite_NestedMessage_default_instance_;

inline constexpr TestAllExtensionsLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestAllExtensionsLite::TestAllExtensionsLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestAllExtensionsLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllExtensionsLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllExtensionsLiteDefaultTypeInternal() {}
  union {
    TestAllExtensionsLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllExtensionsLiteDefaultTypeInternal _TestAllExtensionsLite_default_instance_;

inline constexpr RepeatedGroup_extension_lite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        a_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RepeatedGroup_extension_lite::RepeatedGroup_extension_lite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepeatedGroup_extension_liteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepeatedGroup_extension_liteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepeatedGroup_extension_liteDefaultTypeInternal() {}
  union {
    RepeatedGroup_extension_lite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepeatedGroup_extension_liteDefaultTypeInternal _RepeatedGroup_extension_lite_default_instance_;

inline constexpr RecursiveMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recurse_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RecursiveMessage::RecursiveMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecursiveMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecursiveMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecursiveMessageDefaultTypeInternal() {}
  union {
    RecursiveMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecursiveMessageDefaultTypeInternal _RecursiveMessage_default_instance_;

inline constexpr PackedInt32::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : repeated_int32_{},
        _repeated_int32_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PackedInt32::PackedInt32(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PackedInt32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackedInt32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackedInt32DefaultTypeInternal() {}
  union {
    PackedInt32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackedInt32DefaultTypeInternal _PackedInt32_default_instance_;

inline constexpr PackedFixed32::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : repeated_fixed32_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PackedFixed32::PackedFixed32(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PackedFixed32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackedFixed32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackedFixed32DefaultTypeInternal() {}
  union {
    PackedFixed32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackedFixed32DefaultTypeInternal _PackedFixed32_default_instance_;

inline constexpr OptionalGroup_extension_lite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        a_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OptionalGroup_extension_lite::OptionalGroup_extension_lite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OptionalGroup_extension_liteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionalGroup_extension_liteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionalGroup_extension_liteDefaultTypeInternal() {}
  union {
    OptionalGroup_extension_lite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionalGroup_extension_liteDefaultTypeInternal _OptionalGroup_extension_lite_default_instance_;

inline constexpr NonPackedInt32::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : repeated_int32_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NonPackedInt32::NonPackedInt32(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NonPackedInt32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR NonPackedInt32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NonPackedInt32DefaultTypeInternal() {}
  union {
    NonPackedInt32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NonPackedInt32DefaultTypeInternal _NonPackedInt32_default_instance_;

inline constexpr NonPackedFixed32::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : repeated_fixed32_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NonPackedFixed32::NonPackedFixed32(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NonPackedFixed32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR NonPackedFixed32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NonPackedFixed32DefaultTypeInternal() {}
  union {
    NonPackedFixed32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NonPackedFixed32DefaultTypeInternal _NonPackedFixed32_default_instance_;

inline constexpr ForeignMessageLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        c_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ForeignMessageLite::ForeignMessageLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ForeignMessageLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForeignMessageLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForeignMessageLiteDefaultTypeInternal() {}
  union {
    ForeignMessageLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForeignMessageLiteDefaultTypeInternal _ForeignMessageLite_default_instance_;

inline constexpr DupEnum::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DupEnum::DupEnum(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DupEnumDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DupEnumDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DupEnumDefaultTypeInternal() {}
  union {
    DupEnum _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DupEnumDefaultTypeInternal _DupEnum_default_instance_;

inline constexpr TestMergeExceptionLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        all_extensions_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestMergeExceptionLite::TestMergeExceptionLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestMergeExceptionLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMergeExceptionLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMergeExceptionLiteDefaultTypeInternal() {}
  union {
    TestMergeExceptionLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMergeExceptionLiteDefaultTypeInternal _TestMergeExceptionLite_default_instance_;

inline constexpr TestAllTypesLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repeated_int32_{},
        repeated_int64_{},
        repeated_uint32_{},
        repeated_uint64_{},
        repeated_sint32_{},
        repeated_sint64_{},
        repeated_fixed32_{},
        repeated_fixed64_{},
        repeated_sfixed32_{},
        repeated_sfixed64_{},
        repeated_float_{},
        repeated_double_{},
        repeated_bool_{},
        repeated_string_{},
        repeated_bytes_{},
        repeatedgroup_{},
        repeated_nested_message_{},
        repeated_foreign_message_{},
        repeated_import_message_{},
        repeated_nested_enum_{},
        repeated_foreign_enum_{},
        repeated_import_enum_{},
        repeated_string_piece_{},
        repeated_cord_{},
        repeated_lazy_message_{},
        optional_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_string_piece_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_cord_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        default_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        default_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        default_string_piece_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        default_cord_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optionalgroup_{nullptr},
        optional_nested_message_{nullptr},
        optional_foreign_message_{nullptr},
        optional_import_message_{nullptr},
        optional_public_import_message_{nullptr},
        optional_lazy_message_{nullptr},
        optional_unverified_lazy_message_{nullptr},
        optional_int64_{::int64_t{0}},
        optional_int32_{0},
        optional_uint32_{0u},
        optional_uint64_{::uint64_t{0u}},
        optional_sint64_{::int64_t{0}},
        optional_sint32_{0},
        optional_fixed32_{0u},
        optional_fixed64_{::uint64_t{0u}},
        optional_sfixed64_{::int64_t{0}},
        optional_sfixed32_{0},
        optional_float_{0},
        optional_double_{0},
        optional_bool_{false},
        deceptively_named_list_{0},
        default_import_enum_{static_cast< ::protobuf_unittest_import::ImportEnumLite >(8)},
        optional_nested_enum_{static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(1)},
        optional_foreign_enum_{static_cast< ::protobuf_unittest::ForeignEnumLite >(4)},
        optional_import_enum_{static_cast< ::protobuf_unittest_import::ImportEnumLite >(7)},
        default_int32_{41},
        default_int64_{::int64_t{42}},
        default_uint64_{::uint64_t{44u}},
        default_uint32_{43u},
        default_sint32_{-45},
        default_sint64_{::int64_t{46}},
        default_fixed64_{::uint64_t{48u}},
        default_fixed32_{47u},
        default_sfixed32_{49},
        default_sfixed64_{::int64_t{-50}},
        default_double_{52000},
        default_float_{51.5f},
        default_bool_{true},
        default_nested_enum_{static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(2)},
        default_foreign_enum_{static_cast< ::protobuf_unittest::ForeignEnumLite >(5)},
        oneof_field_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TestAllTypesLite::TestAllTypesLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestAllTypesLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestAllTypesLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestAllTypesLiteDefaultTypeInternal() {}
  union {
    TestAllTypesLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestAllTypesLiteDefaultTypeInternal _TestAllTypesLite_default_instance_;

inline constexpr TestParsingMergeLite_RepeatedGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repeated_group_all_types_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestParsingMergeLite_RepeatedGroup::TestParsingMergeLite_RepeatedGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestParsingMergeLite_RepeatedGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMergeLite_RepeatedGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMergeLite_RepeatedGroupDefaultTypeInternal() {}
  union {
    TestParsingMergeLite_RepeatedGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMergeLite_RepeatedGroupDefaultTypeInternal _TestParsingMergeLite_RepeatedGroup_default_instance_;

inline constexpr TestParsingMergeLite_RepeatedFieldsGenerator_Group2::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        field1_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestParsingMergeLite_RepeatedFieldsGenerator_Group2::TestParsingMergeLite_RepeatedFieldsGenerator_Group2(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestParsingMergeLite_RepeatedFieldsGenerator_Group2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMergeLite_RepeatedFieldsGenerator_Group2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMergeLite_RepeatedFieldsGenerator_Group2DefaultTypeInternal() {}
  union {
    TestParsingMergeLite_RepeatedFieldsGenerator_Group2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMergeLite_RepeatedFieldsGenerator_Group2DefaultTypeInternal _TestParsingMergeLite_RepeatedFieldsGenerator_Group2_default_instance_;

inline constexpr TestParsingMergeLite_RepeatedFieldsGenerator_Group1::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        field1_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestParsingMergeLite_RepeatedFieldsGenerator_Group1::TestParsingMergeLite_RepeatedFieldsGenerator_Group1(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestParsingMergeLite_RepeatedFieldsGenerator_Group1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMergeLite_RepeatedFieldsGenerator_Group1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMergeLite_RepeatedFieldsGenerator_Group1DefaultTypeInternal() {}
  union {
    TestParsingMergeLite_RepeatedFieldsGenerator_Group1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMergeLite_RepeatedFieldsGenerator_Group1DefaultTypeInternal _TestParsingMergeLite_RepeatedFieldsGenerator_Group1_default_instance_;

inline constexpr TestParsingMergeLite_OptionalGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        optional_group_all_types_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestParsingMergeLite_OptionalGroup::TestParsingMergeLite_OptionalGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestParsingMergeLite_OptionalGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMergeLite_OptionalGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMergeLite_OptionalGroupDefaultTypeInternal() {}
  union {
    TestParsingMergeLite_OptionalGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMergeLite_OptionalGroupDefaultTypeInternal _TestParsingMergeLite_OptionalGroup_default_instance_;

inline constexpr TestOneofParsingLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : oneof_field_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TestOneofParsingLite::TestOneofParsingLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestOneofParsingLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestOneofParsingLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestOneofParsingLiteDefaultTypeInternal() {}
  union {
    TestOneofParsingLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestOneofParsingLiteDefaultTypeInternal _TestOneofParsingLite_default_instance_;

inline constexpr TestHugeFieldNumbersLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repeated_int32_{},
        packed_int32_{},
        _packed_int32_cached_byte_size_{0},
        string_string_map_{},
        optional_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optional_message_{nullptr},
        optionalgroup_{nullptr},
        optional_int32_{0},
        fixed_32_{0},
        optional_enum_{static_cast< ::protobuf_unittest::ForeignEnumLite >(4)},
        oneof_field_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TestHugeFieldNumbersLite::TestHugeFieldNumbersLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestHugeFieldNumbersLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestHugeFieldNumbersLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestHugeFieldNumbersLiteDefaultTypeInternal() {}
  union {
    TestHugeFieldNumbersLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestHugeFieldNumbersLiteDefaultTypeInternal _TestHugeFieldNumbersLite_default_instance_;

inline constexpr TestParsingMergeLite_RepeatedFieldsGenerator::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : field1_{},
        field2_{},
        field3_{},
        group1_{},
        group2_{},
        ext1_{},
        ext2_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestParsingMergeLite_RepeatedFieldsGenerator::TestParsingMergeLite_RepeatedFieldsGenerator(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestParsingMergeLite_RepeatedFieldsGeneratorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMergeLite_RepeatedFieldsGeneratorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMergeLite_RepeatedFieldsGeneratorDefaultTypeInternal() {}
  union {
    TestParsingMergeLite_RepeatedFieldsGenerator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMergeLite_RepeatedFieldsGeneratorDefaultTypeInternal _TestParsingMergeLite_RepeatedFieldsGenerator_default_instance_;

inline constexpr TestParsingMergeLite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repeated_all_types_{},
        repeatedgroup_{},
        required_all_types_{nullptr},
        optional_all_types_{nullptr},
        optionalgroup_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestParsingMergeLite::TestParsingMergeLite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TestParsingMergeLiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestParsingMergeLiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestParsingMergeLiteDefaultTypeInternal() {}
  union {
    TestParsingMergeLite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestParsingMergeLiteDefaultTypeInternal _TestParsingMergeLite_default_instance_;
}  // namespace protobuf_unittest
namespace protobuf_unittest {
PROTOBUF_CONSTINIT const uint32_t TestAllTypesLite_NestedEnum_internal_data_[] = {
    196609u, 0u, };
bool TestAllTypesLite_NestedEnum_IsValid(int value) {
  return 1 <= value && value <= 3;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    TestAllTypesLite_NestedEnum_strings[3] = {};

static const char TestAllTypesLite_NestedEnum_names[] = {
    "BAR"
    "BAZ"
    "FOO"
};

static const ::google::protobuf::internal::EnumEntry TestAllTypesLite_NestedEnum_entries[] =
    {
        {{&TestAllTypesLite_NestedEnum_names[0], 3}, 2},
        {{&TestAllTypesLite_NestedEnum_names[3], 3}, 3},
        {{&TestAllTypesLite_NestedEnum_names[6], 3}, 1},
};

static const int TestAllTypesLite_NestedEnum_entries_by_number[] = {
    2,  // 1 -> FOO
    0,  // 2 -> BAR
    1,  // 3 -> BAZ
};

const std::string& TestAllTypesLite_NestedEnum_Name(TestAllTypesLite_NestedEnum value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          TestAllTypesLite_NestedEnum_entries, TestAllTypesLite_NestedEnum_entries_by_number,
          3, TestAllTypesLite_NestedEnum_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      TestAllTypesLite_NestedEnum_entries, TestAllTypesLite_NestedEnum_entries_by_number, 3,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : TestAllTypesLite_NestedEnum_strings[idx].get();
}

bool TestAllTypesLite_NestedEnum_Parse(absl::string_view name, TestAllTypesLite_NestedEnum* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      TestAllTypesLite_NestedEnum_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<TestAllTypesLite_NestedEnum>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TestAllTypesLite_NestedEnum TestAllTypesLite::FOO;
constexpr TestAllTypesLite_NestedEnum TestAllTypesLite::BAR;
constexpr TestAllTypesLite_NestedEnum TestAllTypesLite::BAZ;
constexpr TestAllTypesLite_NestedEnum TestAllTypesLite::NestedEnum_MIN;
constexpr TestAllTypesLite_NestedEnum TestAllTypesLite::NestedEnum_MAX;
constexpr int TestAllTypesLite::NestedEnum_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
PROTOBUF_CONSTINIT const uint32_t DupEnum_TestEnumWithDupValueLite_internal_data_[] = {
    196609u, 0u, };
bool DupEnum_TestEnumWithDupValueLite_IsValid(int value) {
  return 1 <= value && value <= 3;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    DupEnum_TestEnumWithDupValueLite_strings[3] = {};

static const char DupEnum_TestEnumWithDupValueLite_names[] = {
    "BAR1"
    "BAR2"
    "BAZ"
    "FOO1"
    "FOO2"
};

static const ::google::protobuf::internal::EnumEntry DupEnum_TestEnumWithDupValueLite_entries[] =
    {
        {{&DupEnum_TestEnumWithDupValueLite_names[0], 4}, 2},
        {{&DupEnum_TestEnumWithDupValueLite_names[4], 4}, 2},
        {{&DupEnum_TestEnumWithDupValueLite_names[8], 3}, 3},
        {{&DupEnum_TestEnumWithDupValueLite_names[11], 4}, 1},
        {{&DupEnum_TestEnumWithDupValueLite_names[15], 4}, 1},
};

static const int DupEnum_TestEnumWithDupValueLite_entries_by_number[] = {
    3,  // 1 -> FOO1
    0,  // 2 -> BAR1
    2,  // 3 -> BAZ
};

const std::string& DupEnum_TestEnumWithDupValueLite_Name(DupEnum_TestEnumWithDupValueLite value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          DupEnum_TestEnumWithDupValueLite_entries, DupEnum_TestEnumWithDupValueLite_entries_by_number,
          3, DupEnum_TestEnumWithDupValueLite_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      DupEnum_TestEnumWithDupValueLite_entries, DupEnum_TestEnumWithDupValueLite_entries_by_number, 3,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : DupEnum_TestEnumWithDupValueLite_strings[idx].get();
}

bool DupEnum_TestEnumWithDupValueLite_Parse(absl::string_view name, DupEnum_TestEnumWithDupValueLite* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      DupEnum_TestEnumWithDupValueLite_entries, 5, name, &int_value);
  if (success) {
    *value = static_cast<DupEnum_TestEnumWithDupValueLite>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr DupEnum_TestEnumWithDupValueLite DupEnum::FOO1;
constexpr DupEnum_TestEnumWithDupValueLite DupEnum::BAR1;
constexpr DupEnum_TestEnumWithDupValueLite DupEnum::BAZ;
constexpr DupEnum_TestEnumWithDupValueLite DupEnum::FOO2;
constexpr DupEnum_TestEnumWithDupValueLite DupEnum::BAR2;
constexpr DupEnum_TestEnumWithDupValueLite DupEnum::TestEnumWithDupValueLite_MIN;
constexpr DupEnum_TestEnumWithDupValueLite DupEnum::TestEnumWithDupValueLite_MAX;
constexpr int DupEnum::TestEnumWithDupValueLite_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
PROTOBUF_CONSTINIT const uint32_t ForeignEnumLite_internal_data_[] = {
    196612u, 0u, };
bool ForeignEnumLite_IsValid(int value) {
  return 4 <= value && value <= 6;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    ForeignEnumLite_strings[3] = {};

static const char ForeignEnumLite_names[] = {
    "FOREIGN_LITE_BAR"
    "FOREIGN_LITE_BAZ"
    "FOREIGN_LITE_FOO"
};

static const ::google::protobuf::internal::EnumEntry ForeignEnumLite_entries[] =
    {
        {{&ForeignEnumLite_names[0], 16}, 5},
        {{&ForeignEnumLite_names[16], 16}, 6},
        {{&ForeignEnumLite_names[32], 16}, 4},
};

static const int ForeignEnumLite_entries_by_number[] = {
    2,  // 4 -> FOREIGN_LITE_FOO
    0,  // 5 -> FOREIGN_LITE_BAR
    1,  // 6 -> FOREIGN_LITE_BAZ
};

const std::string& ForeignEnumLite_Name(ForeignEnumLite value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          ForeignEnumLite_entries, ForeignEnumLite_entries_by_number,
          3, ForeignEnumLite_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      ForeignEnumLite_entries, ForeignEnumLite_entries_by_number, 3,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : ForeignEnumLite_strings[idx].get();
}

bool ForeignEnumLite_Parse(absl::string_view name, ForeignEnumLite* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      ForeignEnumLite_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<ForeignEnumLite>(int_value);
  }
  return success;
}
PROTOBUF_CONSTINIT const uint32_t V1EnumLite_internal_data_[] = {
    65537u, 0u, };
bool V1EnumLite_IsValid(int value) {
  return 1 <= value && value <= 1;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    V1EnumLite_strings[1] = {};

static const char V1EnumLite_names[] = {
    "V1_FIRST"
};

static const ::google::protobuf::internal::EnumEntry V1EnumLite_entries[] =
    {
        {{&V1EnumLite_names[0], 8}, 1},
};

static const int V1EnumLite_entries_by_number[] = {
    0,  // 1 -> V1_FIRST
};

const std::string& V1EnumLite_Name(V1EnumLite value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          V1EnumLite_entries, V1EnumLite_entries_by_number,
          1, V1EnumLite_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      V1EnumLite_entries, V1EnumLite_entries_by_number, 1,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : V1EnumLite_strings[idx].get();
}

bool V1EnumLite_Parse(absl::string_view name, V1EnumLite* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      V1EnumLite_entries, 1, name, &int_value);
  if (success) {
    *value = static_cast<V1EnumLite>(int_value);
  }
  return success;
}
PROTOBUF_CONSTINIT const uint32_t V2EnumLite_internal_data_[] = {
    131073u, 0u, };
bool V2EnumLite_IsValid(int value) {
  return 1 <= value && value <= 2;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    V2EnumLite_strings[2] = {};

static const char V2EnumLite_names[] = {
    "V2_FIRST"
    "V2_SECOND"
};

static const ::google::protobuf::internal::EnumEntry V2EnumLite_entries[] =
    {
        {{&V2EnumLite_names[0], 8}, 1},
        {{&V2EnumLite_names[8], 9}, 2},
};

static const int V2EnumLite_entries_by_number[] = {
    0,  // 1 -> V2_FIRST
    1,  // 2 -> V2_SECOND
};

const std::string& V2EnumLite_Name(V2EnumLite value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          V2EnumLite_entries, V2EnumLite_entries_by_number,
          2, V2EnumLite_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      V2EnumLite_entries, V2EnumLite_entries_by_number, 2,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : V2EnumLite_strings[idx].get();
}

bool V2EnumLite_Parse(absl::string_view name, V2EnumLite* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      V2EnumLite_entries, 2, name, &int_value);
  if (success) {
    *value = static_cast<V2EnumLite>(int_value);
  }
  return success;
}
// ===================================================================

class TestAllTypesLite_NestedMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<TestAllTypesLite_NestedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage, _impl_._has_bits_);
  static void set_has_bb(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestAllTypesLite_NestedMessage::TestAllTypesLite_NestedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypesLite.NestedMessage)
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypesLite_NestedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dd_{visibility, arena, from.dd_},
        _dd_cached_byte_size_{0} {}

TestAllTypesLite_NestedMessage::TestAllTypesLite_NestedMessage(
    ::google::protobuf::Arena* arena,
    const TestAllTypesLite_NestedMessage& from)
    : ::google::protobuf::MessageLite(arena) {
  TestAllTypesLite_NestedMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cc_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cc_),
           offsetof(Impl_, bb_) -
               offsetof(Impl_, cc_) +
               sizeof(Impl_::bb_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypesLite.NestedMessage)
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypesLite_NestedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        dd_{visibility, arena},
        _dd_cached_byte_size_{0} {}

inline void TestAllTypesLite_NestedMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cc_),
           0,
           offsetof(Impl_, bb_) -
               offsetof(Impl_, cc_) +
               sizeof(Impl_::bb_));
}
TestAllTypesLite_NestedMessage::~TestAllTypesLite_NestedMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypesLite.NestedMessage)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestAllTypesLite_NestedMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestAllTypesLite_NestedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dd_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.cc_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.bb_) -
        reinterpret_cast<char*>(&_impl_.cc_)) + sizeof(_impl_.bb_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestAllTypesLite_NestedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> TestAllTypesLite_NestedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestAllTypesLite_NestedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 bb = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage, _impl_.bb_)}},
    // optional int64 cc = 2;
    {::_pbi::TcParser::FastV64S1,
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage, _impl_.cc_)}},
    // repeated int32 dd = 3 [packed = true];
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage, _impl_.dd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 bb = 1;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage, _impl_.bb_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 cc = 2;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage, _impl_.cc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated int32 dd = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage, _impl_.dd_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestAllTypesLite_NestedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 bb = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_bb(), target);
  }

  // optional int64 cc = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_cc(), target);
  }

  // repeated int32 dd = 3 [packed = true];
  {
    int byte_size = _impl_._dd_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_dd(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypesLite.NestedMessage)
  return target;
}

::size_t TestAllTypesLite_NestedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 dd = 3 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_dd())
    ;
    _impl_._dd_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 cc = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_cc());
    }

    // optional int32 bb = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_bb());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestAllTypesLite_NestedMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestAllTypesLite_NestedMessage*>(
      &from));
}

void TestAllTypesLite_NestedMessage::MergeFrom(const TestAllTypesLite_NestedMessage& from) {
  TestAllTypesLite_NestedMessage* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dd()->MergeFrom(from._internal_dd());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.cc_ = from._impl_.cc_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.bb_ = from._impl_.bb_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestAllTypesLite_NestedMessage::CopyFrom(const TestAllTypesLite_NestedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypesLite.NestedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypesLite_NestedMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestAllTypesLite_NestedMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestAllTypesLite_NestedMessage::InternalSwap(TestAllTypesLite_NestedMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dd_.InternalSwap(&other->_impl_.dd_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage, _impl_.bb_)
      + sizeof(TestAllTypesLite_NestedMessage::_impl_.bb_)
      - PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage, _impl_.cc_)>(
          reinterpret_cast<char*>(&_impl_.cc_),
          reinterpret_cast<char*>(&other->_impl_.cc_));
}

std::string TestAllTypesLite_NestedMessage::GetTypeName() const {
  return "protobuf_unittest.TestAllTypesLite.NestedMessage";
}

// ===================================================================

class TestAllTypesLite_NestedMessage2::_Internal {
 public:
  using HasBits = decltype(std::declval<TestAllTypesLite_NestedMessage2>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage2, _impl_._has_bits_);
  static void set_has_dd(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestAllTypesLite_NestedMessage2::TestAllTypesLite_NestedMessage2(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypesLite.NestedMessage2)
}
TestAllTypesLite_NestedMessage2::TestAllTypesLite_NestedMessage2(
    ::google::protobuf::Arena* arena, const TestAllTypesLite_NestedMessage2& from)
    : TestAllTypesLite_NestedMessage2(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypesLite_NestedMessage2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestAllTypesLite_NestedMessage2::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.dd_ = {};
}
TestAllTypesLite_NestedMessage2::~TestAllTypesLite_NestedMessage2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypesLite.NestedMessage2)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestAllTypesLite_NestedMessage2::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestAllTypesLite_NestedMessage2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypesLite.NestedMessage2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dd_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestAllTypesLite_NestedMessage2::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TestAllTypesLite_NestedMessage2::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage2, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestAllTypesLite_NestedMessage2_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional int32 dd = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage2, _impl_.dd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 dd = 1;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite_NestedMessage2, _impl_.dd_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestAllTypesLite_NestedMessage2::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypesLite.NestedMessage2)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 dd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_dd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypesLite.NestedMessage2)
  return target;
}

::size_t TestAllTypesLite_NestedMessage2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypesLite.NestedMessage2)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 dd = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_dd());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestAllTypesLite_NestedMessage2::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestAllTypesLite_NestedMessage2*>(
      &from));
}

void TestAllTypesLite_NestedMessage2::MergeFrom(const TestAllTypesLite_NestedMessage2& from) {
  TestAllTypesLite_NestedMessage2* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypesLite.NestedMessage2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_dd(from._internal_dd());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestAllTypesLite_NestedMessage2::CopyFrom(const TestAllTypesLite_NestedMessage2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypesLite.NestedMessage2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypesLite_NestedMessage2::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestAllTypesLite_NestedMessage2::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestAllTypesLite_NestedMessage2::InternalSwap(TestAllTypesLite_NestedMessage2* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.dd_, other->_impl_.dd_);
}

std::string TestAllTypesLite_NestedMessage2::GetTypeName() const {
  return "protobuf_unittest.TestAllTypesLite.NestedMessage2";
}

// ===================================================================

class TestAllTypesLite_OptionalGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestAllTypesLite_OptionalGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestAllTypesLite_OptionalGroup, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestAllTypesLite_OptionalGroup::TestAllTypesLite_OptionalGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypesLite.OptionalGroup)
}
TestAllTypesLite_OptionalGroup::TestAllTypesLite_OptionalGroup(
    ::google::protobuf::Arena* arena, const TestAllTypesLite_OptionalGroup& from)
    : TestAllTypesLite_OptionalGroup(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypesLite_OptionalGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestAllTypesLite_OptionalGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.a_ = {};
}
TestAllTypesLite_OptionalGroup::~TestAllTypesLite_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestAllTypesLite_OptionalGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestAllTypesLite_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestAllTypesLite_OptionalGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 0, 0, 2> TestAllTypesLite_OptionalGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypesLite_OptionalGroup, _impl_._has_bits_),
    0, // no _extensions_
    17, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901759,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestAllTypesLite_OptionalGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG2, {388, 132}},
    // optional int32 a = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 0, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite_OptionalGroup, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 17;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite_OptionalGroup, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestAllTypesLite_OptionalGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 17;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  return target;
}

::size_t TestAllTypesLite_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 17;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_a());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestAllTypesLite_OptionalGroup::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestAllTypesLite_OptionalGroup*>(
      &from));
}

void TestAllTypesLite_OptionalGroup::MergeFrom(const TestAllTypesLite_OptionalGroup& from) {
  TestAllTypesLite_OptionalGroup* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestAllTypesLite_OptionalGroup::CopyFrom(const TestAllTypesLite_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypesLite.OptionalGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypesLite_OptionalGroup::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestAllTypesLite_OptionalGroup::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestAllTypesLite_OptionalGroup::InternalSwap(TestAllTypesLite_OptionalGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

std::string TestAllTypesLite_OptionalGroup::GetTypeName() const {
  return "protobuf_unittest.TestAllTypesLite.OptionalGroup";
}

// ===================================================================

class TestAllTypesLite_RepeatedGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestAllTypesLite_RepeatedGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestAllTypesLite_RepeatedGroup, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestAllTypesLite_RepeatedGroup::TestAllTypesLite_RepeatedGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
}
TestAllTypesLite_RepeatedGroup::TestAllTypesLite_RepeatedGroup(
    ::google::protobuf::Arena* arena, const TestAllTypesLite_RepeatedGroup& from)
    : TestAllTypesLite_RepeatedGroup(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypesLite_RepeatedGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestAllTypesLite_RepeatedGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.a_ = {};
}
TestAllTypesLite_RepeatedGroup::~TestAllTypesLite_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestAllTypesLite_RepeatedGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestAllTypesLite_RepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestAllTypesLite_RepeatedGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 0, 0, 7> TestAllTypesLite_RepeatedGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypesLite_RepeatedGroup, _impl_._has_bits_),
    0, // no _extensions_
    47, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestAllTypesLite_RepeatedGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG2, {756, 372}},
    // optional int32 a = 47;
    {::_pbi::TcParser::FastV32S2,
     {760, 0, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite_RepeatedGroup, _impl_.a_)}},
  }}, {{
    47, 0, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // optional int32 a = 47;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite_RepeatedGroup, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestAllTypesLite_RepeatedGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 47;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        47, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  return target;
}

::size_t TestAllTypesLite_RepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 47;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_a());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestAllTypesLite_RepeatedGroup::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestAllTypesLite_RepeatedGroup*>(
      &from));
}

void TestAllTypesLite_RepeatedGroup::MergeFrom(const TestAllTypesLite_RepeatedGroup& from) {
  TestAllTypesLite_RepeatedGroup* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestAllTypesLite_RepeatedGroup::CopyFrom(const TestAllTypesLite_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypesLite_RepeatedGroup::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestAllTypesLite_RepeatedGroup::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestAllTypesLite_RepeatedGroup::InternalSwap(TestAllTypesLite_RepeatedGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

std::string TestAllTypesLite_RepeatedGroup::GetTypeName() const {
  return "protobuf_unittest.TestAllTypesLite.RepeatedGroup";
}

// ===================================================================

class TestAllTypesLite::_Internal {
 public:
  using HasBits = decltype(std::declval<TestAllTypesLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestAllTypesLite, _impl_._oneof_case_);
  static void set_has_optional_int32(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_optional_int64(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_optional_uint32(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_optional_uint64(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_optional_sint32(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_optional_sint64(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_optional_fixed32(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_optional_fixed64(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_optional_sfixed32(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_optional_sfixed64(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_optional_float(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_optional_double(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_optional_bool(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_optional_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestAllTypesLite_OptionalGroup& optionalgroup(const TestAllTypesLite* msg);
  static void set_has_optionalgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::protobuf_unittest::TestAllTypesLite_NestedMessage& optional_nested_message(const TestAllTypesLite* msg);
  static void set_has_optional_nested_message(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::protobuf_unittest::ForeignMessageLite& optional_foreign_message(const TestAllTypesLite* msg);
  static void set_has_optional_foreign_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::protobuf_unittest_import::ImportMessageLite& optional_import_message(const TestAllTypesLite* msg);
  static void set_has_optional_import_message(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_optional_nested_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_optional_foreign_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_optional_import_enum(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_optional_string_piece(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_optional_cord(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::protobuf_unittest_import::PublicImportMessageLite& optional_public_import_message(const TestAllTypesLite* msg);
  static void set_has_optional_public_import_message(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::protobuf_unittest::TestAllTypesLite_NestedMessage& optional_lazy_message(const TestAllTypesLite* msg);
  static void set_has_optional_lazy_message(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::protobuf_unittest::TestAllTypesLite_NestedMessage& optional_unverified_lazy_message(const TestAllTypesLite* msg);
  static void set_has_optional_unverified_lazy_message(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_default_int32(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_default_int64(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_default_uint32(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_default_uint64(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_default_sint32(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_default_sint64(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_default_fixed32(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static void set_has_default_fixed64(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_default_sfixed32(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static void set_has_default_sfixed64(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static void set_has_default_float(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static void set_has_default_double(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static void set_has_default_bool(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static void set_has_default_string(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_nested_enum(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static void set_has_default_foreign_enum(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static void set_has_default_import_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_default_string_piece(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_default_cord(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::protobuf_unittest::TestAllTypesLite_NestedMessage& oneof_nested_message(const TestAllTypesLite* msg);
  static const ::protobuf_unittest::TestAllTypesLite_NestedMessage& oneof_lazy_nested_message(const TestAllTypesLite* msg);
  static const ::protobuf_unittest::TestAllTypesLite_NestedMessage2& oneof_nested_message2(const TestAllTypesLite* msg);
  static void set_has_deceptively_named_list(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
};

const ::protobuf_unittest::TestAllTypesLite_OptionalGroup& TestAllTypesLite::_Internal::optionalgroup(const TestAllTypesLite* msg) {
  return *msg->_impl_.optionalgroup_;
}
const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::_Internal::optional_nested_message(const TestAllTypesLite* msg) {
  return *msg->_impl_.optional_nested_message_;
}
const ::protobuf_unittest::ForeignMessageLite& TestAllTypesLite::_Internal::optional_foreign_message(const TestAllTypesLite* msg) {
  return *msg->_impl_.optional_foreign_message_;
}
const ::protobuf_unittest_import::ImportMessageLite& TestAllTypesLite::_Internal::optional_import_message(const TestAllTypesLite* msg) {
  return *msg->_impl_.optional_import_message_;
}
const ::protobuf_unittest_import::PublicImportMessageLite& TestAllTypesLite::_Internal::optional_public_import_message(const TestAllTypesLite* msg) {
  return *msg->_impl_.optional_public_import_message_;
}
const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::_Internal::optional_lazy_message(const TestAllTypesLite* msg) {
  return *msg->_impl_.optional_lazy_message_;
}
const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::_Internal::optional_unverified_lazy_message(const TestAllTypesLite* msg) {
  return *msg->_impl_.optional_unverified_lazy_message_;
}
const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::_Internal::oneof_nested_message(const TestAllTypesLite* msg) {
  return *msg->_impl_.oneof_field_.oneof_nested_message_;
}
const ::protobuf_unittest::TestAllTypesLite_NestedMessage& TestAllTypesLite::_Internal::oneof_lazy_nested_message(const TestAllTypesLite* msg) {
  return *msg->_impl_.oneof_field_.oneof_lazy_nested_message_;
}
const ::protobuf_unittest::TestAllTypesLite_NestedMessage2& TestAllTypesLite::_Internal::oneof_nested_message2(const TestAllTypesLite* msg) {
  return *msg->_impl_.oneof_field_.oneof_nested_message2_;
}
void TestAllTypesLite::clear_optional_import_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.optional_import_message_ != nullptr) _impl_.optional_import_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void TestAllTypesLite::clear_optional_public_import_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.optional_public_import_message_ != nullptr) _impl_.optional_public_import_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void TestAllTypesLite::clear_repeated_import_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.repeated_import_message_.Clear();
}
/*static*/ const ::_pbi::LazyString TestAllTypesLite::Impl_::_i_give_permission_to_break_this_code_default_default_string_{
    {{"hello", 5}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestAllTypesLite::Impl_::_i_give_permission_to_break_this_code_default_default_bytes_{
    {{"world", 5}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestAllTypesLite::Impl_::_i_give_permission_to_break_this_code_default_default_string_piece_{
    {{"abc", 3}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestAllTypesLite::Impl_::_i_give_permission_to_break_this_code_default_default_cord_{
    {{"123", 3}},
    {nullptr},
};
void TestAllTypesLite::set_allocated_oneof_nested_message(::protobuf_unittest::TestAllTypesLite_NestedMessage* oneof_nested_message) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_oneof_field();
  if (oneof_nested_message) {
    ::google::protobuf::Arena* submessage_arena = oneof_nested_message->GetArena();
    if (message_arena != submessage_arena) {
      oneof_nested_message = ::google::protobuf::internal::GetOwnedMessage(message_arena, oneof_nested_message, submessage_arena);
    }
    set_has_oneof_nested_message();
    _impl_.oneof_field_.oneof_nested_message_ = oneof_nested_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.oneof_nested_message)
}
void TestAllTypesLite::set_allocated_oneof_lazy_nested_message(::protobuf_unittest::TestAllTypesLite_NestedMessage* oneof_lazy_nested_message) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_oneof_field();
  if (oneof_lazy_nested_message) {
    ::google::protobuf::Arena* submessage_arena = oneof_lazy_nested_message->GetArena();
    if (message_arena != submessage_arena) {
      oneof_lazy_nested_message = ::google::protobuf::internal::GetOwnedMessage(message_arena, oneof_lazy_nested_message, submessage_arena);
    }
    set_has_oneof_lazy_nested_message();
    _impl_.oneof_field_.oneof_lazy_nested_message_ = oneof_lazy_nested_message;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.oneof_lazy_nested_message)
}
void TestAllTypesLite::set_allocated_oneof_nested_message2(::protobuf_unittest::TestAllTypesLite_NestedMessage2* oneof_nested_message2) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_oneof_field();
  if (oneof_nested_message2) {
    ::google::protobuf::Arena* submessage_arena = oneof_nested_message2->GetArena();
    if (message_arena != submessage_arena) {
      oneof_nested_message2 = ::google::protobuf::internal::GetOwnedMessage(message_arena, oneof_nested_message2, submessage_arena);
    }
    set_has_oneof_nested_message2();
    _impl_.oneof_field_.oneof_nested_message2_ = oneof_nested_message2;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestAllTypesLite.oneof_nested_message2)
}
TestAllTypesLite::TestAllTypesLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllTypesLite)
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypesLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repeated_int32_{visibility, arena, from.repeated_int32_},
        repeated_int64_{visibility, arena, from.repeated_int64_},
        repeated_uint32_{visibility, arena, from.repeated_uint32_},
        repeated_uint64_{visibility, arena, from.repeated_uint64_},
        repeated_sint32_{visibility, arena, from.repeated_sint32_},
        repeated_sint64_{visibility, arena, from.repeated_sint64_},
        repeated_fixed32_{visibility, arena, from.repeated_fixed32_},
        repeated_fixed64_{visibility, arena, from.repeated_fixed64_},
        repeated_sfixed32_{visibility, arena, from.repeated_sfixed32_},
        repeated_sfixed64_{visibility, arena, from.repeated_sfixed64_},
        repeated_float_{visibility, arena, from.repeated_float_},
        repeated_double_{visibility, arena, from.repeated_double_},
        repeated_bool_{visibility, arena, from.repeated_bool_},
        repeated_string_{visibility, arena, from.repeated_string_},
        repeated_bytes_{visibility, arena, from.repeated_bytes_},
        repeatedgroup_{visibility, arena, from.repeatedgroup_},
        repeated_nested_message_{visibility, arena, from.repeated_nested_message_},
        repeated_foreign_message_{visibility, arena, from.repeated_foreign_message_},
        repeated_import_message_{visibility, arena, from.repeated_import_message_},
        repeated_nested_enum_{visibility, arena, from.repeated_nested_enum_},
        repeated_foreign_enum_{visibility, arena, from.repeated_foreign_enum_},
        repeated_import_enum_{visibility, arena, from.repeated_import_enum_},
        repeated_string_piece_{visibility, arena, from.repeated_string_piece_},
        repeated_cord_{visibility, arena, from.repeated_cord_},
        repeated_lazy_message_{visibility, arena, from.repeated_lazy_message_},
        optional_string_(arena, from.optional_string_),
        optional_bytes_(arena, from.optional_bytes_),
        optional_string_piece_(arena, from.optional_string_piece_),
        optional_cord_(arena, from.optional_cord_),
        default_string_(arena, from.default_string_, _i_give_permission_to_break_this_code_default_default_string_),
        default_bytes_(arena, from.default_bytes_, _i_give_permission_to_break_this_code_default_default_bytes_),
        default_string_piece_(arena, from.default_string_piece_, _i_give_permission_to_break_this_code_default_default_string_piece_),
        default_cord_(arena, from.default_cord_, _i_give_permission_to_break_this_code_default_default_cord_),
        oneof_field_{},
        _oneof_case_{from._oneof_case_[0]} {}

TestAllTypesLite::TestAllTypesLite(
    ::google::protobuf::Arena* arena,
    const TestAllTypesLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestAllTypesLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.optionalgroup_ = (cached_has_bits & 0x00000100u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite_OptionalGroup>(arena, *from._impl_.optionalgroup_)
                : nullptr;
  _impl_.optional_nested_message_ = (cached_has_bits & 0x00000200u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite_NestedMessage>(arena, *from._impl_.optional_nested_message_)
                : nullptr;
  _impl_.optional_foreign_message_ = (cached_has_bits & 0x00000400u)
                ? CreateMaybeMessage<::protobuf_unittest::ForeignMessageLite>(arena, *from._impl_.optional_foreign_message_)
                : nullptr;
  _impl_.optional_import_message_ = (cached_has_bits & 0x00000800u)
                ? CreateMaybeMessage<::protobuf_unittest_import::ImportMessageLite>(arena, *from._impl_.optional_import_message_)
                : nullptr;
  _impl_.optional_public_import_message_ = (cached_has_bits & 0x00001000u)
                ? CreateMaybeMessage<::protobuf_unittest_import::PublicImportMessageLite>(arena, *from._impl_.optional_public_import_message_)
                : nullptr;
  _impl_.optional_lazy_message_ = (cached_has_bits & 0x00002000u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite_NestedMessage>(arena, *from._impl_.optional_lazy_message_)
                : nullptr;
  _impl_.optional_unverified_lazy_message_ = (cached_has_bits & 0x00004000u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite_NestedMessage>(arena, *from._impl_.optional_unverified_lazy_message_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optional_int64_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, optional_int64_),
           offsetof(Impl_, default_foreign_enum_) -
               offsetof(Impl_, optional_int64_) +
               sizeof(Impl_::default_foreign_enum_));
  switch (oneof_field_case()) {
    case ONEOF_FIELD_NOT_SET:
      break;
      case kOneofUint32:
        _impl_.oneof_field_.oneof_uint32_ = from._impl_.oneof_field_.oneof_uint32_;
        break;
      case kOneofNestedMessage:
        _impl_.oneof_field_.oneof_nested_message_ = CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite_NestedMessage>(arena, *from._impl_.oneof_field_.oneof_nested_message_);
        break;
      case kOneofString:
        new (&_impl_.oneof_field_.oneof_string_) decltype(_impl_.oneof_field_.oneof_string_){arena, from._impl_.oneof_field_.oneof_string_};
        break;
      case kOneofBytes:
        new (&_impl_.oneof_field_.oneof_bytes_) decltype(_impl_.oneof_field_.oneof_bytes_){arena, from._impl_.oneof_field_.oneof_bytes_};
        break;
      case kOneofLazyNestedMessage:
        _impl_.oneof_field_.oneof_lazy_nested_message_ = CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite_NestedMessage>(arena, *from._impl_.oneof_field_.oneof_lazy_nested_message_);
        break;
      case kOneofNestedMessage2:
        _impl_.oneof_field_.oneof_nested_message2_ = CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite_NestedMessage2>(arena, *from._impl_.oneof_field_.oneof_nested_message2_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllTypesLite)
}
inline PROTOBUF_NDEBUG_INLINE TestAllTypesLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repeated_int32_{visibility, arena},
        repeated_int64_{visibility, arena},
        repeated_uint32_{visibility, arena},
        repeated_uint64_{visibility, arena},
        repeated_sint32_{visibility, arena},
        repeated_sint64_{visibility, arena},
        repeated_fixed32_{visibility, arena},
        repeated_fixed64_{visibility, arena},
        repeated_sfixed32_{visibility, arena},
        repeated_sfixed64_{visibility, arena},
        repeated_float_{visibility, arena},
        repeated_double_{visibility, arena},
        repeated_bool_{visibility, arena},
        repeated_string_{visibility, arena},
        repeated_bytes_{visibility, arena},
        repeatedgroup_{visibility, arena},
        repeated_nested_message_{visibility, arena},
        repeated_foreign_message_{visibility, arena},
        repeated_import_message_{visibility, arena},
        repeated_nested_enum_{visibility, arena},
        repeated_foreign_enum_{visibility, arena},
        repeated_import_enum_{visibility, arena},
        repeated_string_piece_{visibility, arena},
        repeated_cord_{visibility, arena},
        repeated_lazy_message_{visibility, arena},
        optional_string_(arena),
        optional_bytes_(arena),
        optional_string_piece_(arena),
        optional_cord_(arena),
        default_string_(arena, Impl_::_i_give_permission_to_break_this_code_default_default_string_),
        default_bytes_(arena, Impl_::_i_give_permission_to_break_this_code_default_default_bytes_),
        default_string_piece_(arena, Impl_::_i_give_permission_to_break_this_code_default_default_string_piece_),
        default_cord_(arena, Impl_::_i_give_permission_to_break_this_code_default_default_cord_),
        default_import_enum_{static_cast< ::protobuf_unittest_import::ImportEnumLite >(8)},
        optional_nested_enum_{static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(1)},
        optional_foreign_enum_{static_cast< ::protobuf_unittest::ForeignEnumLite >(4)},
        optional_import_enum_{static_cast< ::protobuf_unittest_import::ImportEnumLite >(7)},
        default_int32_{41},
        default_int64_{::int64_t{42}},
        default_uint64_{::uint64_t{44u}},
        default_uint32_{43u},
        default_sint32_{-45},
        default_sint64_{::int64_t{46}},
        default_fixed64_{::uint64_t{48u}},
        default_fixed32_{47u},
        default_sfixed32_{49},
        default_sfixed64_{::int64_t{-50}},
        default_double_{52000},
        default_float_{51.5f},
        default_bool_{true},
        default_nested_enum_{static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(2)},
        default_foreign_enum_{static_cast< ::protobuf_unittest::ForeignEnumLite >(5)},
        oneof_field_{},
        _oneof_case_{} {}

inline void TestAllTypesLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optionalgroup_),
           0,
           offsetof(Impl_, deceptively_named_list_) -
               offsetof(Impl_, optionalgroup_) +
               sizeof(Impl_::deceptively_named_list_));
}
TestAllTypesLite::~TestAllTypesLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllTypesLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestAllTypesLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.optional_string_.Destroy();
  _impl_.optional_bytes_.Destroy();
  _impl_.optional_string_piece_.Destroy();
  _impl_.optional_cord_.Destroy();
  _impl_.default_string_.Destroy();
  _impl_.default_bytes_.Destroy();
  _impl_.default_string_piece_.Destroy();
  _impl_.default_cord_.Destroy();
  delete _impl_.optionalgroup_;
  delete _impl_.optional_nested_message_;
  delete _impl_.optional_foreign_message_;
  delete _impl_.optional_import_message_;
  delete _impl_.optional_public_import_message_;
  delete _impl_.optional_lazy_message_;
  delete _impl_.optional_unverified_lazy_message_;
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  _impl_.~Impl_();
}

void TestAllTypesLite::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestAllTypesLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofNestedMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.oneof_field_.oneof_nested_message_;
      }
      break;
    }
    case kOneofString: {
      _impl_.oneof_field_.oneof_string_.Destroy();
      break;
    }
    case kOneofBytes: {
      _impl_.oneof_field_.oneof_bytes_.Destroy();
      break;
    }
    case kOneofLazyNestedMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.oneof_field_.oneof_lazy_nested_message_;
      }
      break;
    }
    case kOneofNestedMessage2: {
      if (GetArena() == nullptr) {
        delete _impl_.oneof_field_.oneof_nested_message2_;
      }
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


PROTOBUF_NOINLINE void TestAllTypesLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllTypesLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_int32_.Clear();
  _impl_.repeated_int64_.Clear();
  _impl_.repeated_uint32_.Clear();
  _impl_.repeated_uint64_.Clear();
  _impl_.repeated_sint32_.Clear();
  _impl_.repeated_sint64_.Clear();
  _impl_.repeated_fixed32_.Clear();
  _impl_.repeated_fixed64_.Clear();
  _impl_.repeated_sfixed32_.Clear();
  _impl_.repeated_sfixed64_.Clear();
  _impl_.repeated_float_.Clear();
  _impl_.repeated_double_.Clear();
  _impl_.repeated_bool_.Clear();
  _impl_.repeated_string_.Clear();
  _impl_.repeated_bytes_.Clear();
  _impl_.repeatedgroup_.Clear();
  _impl_.repeated_nested_message_.Clear();
  _impl_.repeated_foreign_message_.Clear();
  _impl_.repeated_import_message_.Clear();
  _impl_.repeated_nested_enum_.Clear();
  _impl_.repeated_foreign_enum_.Clear();
  _impl_.repeated_import_enum_.Clear();
  _impl_.repeated_string_piece_.Clear();
  _impl_.repeated_cord_.Clear();
  _impl_.repeated_lazy_message_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.optional_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.optional_bytes_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.optional_string_piece_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.optional_cord_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.default_string_.ClearToDefault(::protobuf_unittest::TestAllTypesLite::Impl_::_i_give_permission_to_break_this_code_default_default_string_, GetArena());
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.default_bytes_.ClearToDefault(::protobuf_unittest::TestAllTypesLite::Impl_::_i_give_permission_to_break_this_code_default_default_bytes_, GetArena());
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.default_string_piece_.ClearToDefault(::protobuf_unittest::TestAllTypesLite::Impl_::_i_give_permission_to_break_this_code_default_default_string_piece_, GetArena());
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.default_cord_.ClearToDefault(::protobuf_unittest::TestAllTypesLite::Impl_::_i_give_permission_to_break_this_code_default_default_cord_, GetArena());
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.optionalgroup_ != nullptr);
      _impl_.optionalgroup_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.optional_nested_message_ != nullptr);
      _impl_.optional_nested_message_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.optional_foreign_message_ != nullptr);
      _impl_.optional_foreign_message_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.optional_import_message_ != nullptr);
      _impl_.optional_import_message_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.optional_public_import_message_ != nullptr);
      _impl_.optional_public_import_message_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(_impl_.optional_lazy_message_ != nullptr);
      _impl_.optional_lazy_message_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(_impl_.optional_unverified_lazy_message_ != nullptr);
      _impl_.optional_unverified_lazy_message_->Clear();
    }
  }
  _impl_.optional_int64_ = ::int64_t{0};
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.optional_int32_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.optional_sfixed64_) -
        reinterpret_cast<char*>(&_impl_.optional_int32_)) + sizeof(_impl_.optional_sfixed64_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.optional_sfixed32_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.deceptively_named_list_) -
        reinterpret_cast<char*>(&_impl_.optional_sfixed32_)) + sizeof(_impl_.deceptively_named_list_));
    _impl_.default_import_enum_ = 8;
    _impl_.optional_nested_enum_ = 1;
    _impl_.optional_foreign_enum_ = 4;
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    _impl_.optional_import_enum_ = 7;
    _impl_.default_int32_ = 41;
    _impl_.default_int64_ = ::int64_t{42};
    _impl_.default_uint64_ = ::uint64_t{44u};
    _impl_.default_uint32_ = 43u;
    _impl_.default_sint32_ = -45;
    _impl_.default_sint64_ = ::int64_t{46};
    _impl_.default_fixed64_ = ::uint64_t{48u};
  }
  if (cached_has_bits & 0x0000ff00u) {
    _impl_.default_fixed32_ = 47u;
    _impl_.default_sfixed32_ = 49;
    _impl_.default_sfixed64_ = ::int64_t{-50};
    _impl_.default_double_ = 52000;
    _impl_.default_float_ = 51.5f;
    _impl_.default_bool_ = true;
    _impl_.default_nested_enum_ = 2;
    _impl_.default_foreign_enum_ = 5;
  }
  clear_oneof_field();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestAllTypesLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 79, 24, 0, 17> TestAllTypesLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_._has_bits_),
    0, // no _extensions_
    117, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    805371904,  // skipmap
    offsetof(decltype(_table_), field_entries),
    79,  // num_field_entries
    24,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestAllTypesLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 optional_int32 = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 16, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_int32_)}},
    // optional int64 optional_int64 = 2;
    {::_pbi::TcParser::FastV64S1,
     {16, 15, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_int64_)}},
    // optional uint32 optional_uint32 = 3;
    {::_pbi::TcParser::FastV32S1,
     {24, 17, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_uint32_)}},
    // optional uint64 optional_uint64 = 4;
    {::_pbi::TcParser::FastV64S1,
     {32, 18, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_uint64_)}},
    // optional sint32 optional_sint32 = 5;
    {::_pbi::TcParser::FastZ32S1,
     {40, 20, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_sint32_)}},
    // optional sint64 optional_sint64 = 6;
    {::_pbi::TcParser::FastZ64S1,
     {48, 19, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_sint64_)}},
    // optional fixed32 optional_fixed32 = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 21, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_fixed32_)}},
    // optional fixed64 optional_fixed64 = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 22, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_fixed64_)}},
    // optional sfixed32 optional_sfixed32 = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 24, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_sfixed32_)}},
    // optional sfixed64 optional_sfixed64 = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 23, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_sfixed64_)}},
    // optional float optional_float = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 25, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_float_)}},
    // optional double optional_double = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 26, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_double_)}},
    // optional bool optional_bool = 13;
    {::_pbi::TcParser::FastV8S1,
     {104, 27, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_bool_)}},
    // optional string optional_string = 14;
    {::_pbi::TcParser::FastBS1,
     {114, 0, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_string_)}},
    // optional bytes optional_bytes = 15;
    {::_pbi::TcParser::FastBS1,
     {122, 1, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_bytes_)}},
    // optional group OptionalGroup = 16 { ... };
    {::_pbi::TcParser::FastGtS2,
     {387, 8, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optionalgroup_)}},
    // repeated uint32 repeated_uint32 = 33;
    {::_pbi::TcParser::FastV32R2,
     {648, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_uint32_)}},
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 9, 1, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_nested_message_)}},
    // optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 10, 2, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_foreign_message_)}},
    // optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
    {::_pbi::TcParser::FastMtS2,
     {418, 11, 3, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_import_message_)}},
    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
    {::_pbi::TcParser::FastEr1S2,
     {424, 30, 3, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_nested_enum_)}},
    // optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
    {::_pbi::TcParser::FastErS2,
     {432, 31, 5, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_foreign_enum_)}},
    // repeated sfixed32 repeated_sfixed32 = 39;
    {::_pbi::TcParser::FastF32R2,
     {701, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_sfixed32_)}},
    // repeated sfixed64 repeated_sfixed64 = 40;
    {::_pbi::TcParser::FastF64R2,
     {705, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_sfixed64_)}},
    // optional string optional_cord = 25 [ctype = CORD];
    {::_pbi::TcParser::FastBcS2,
     {458, 3, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_cord_)}},
    // optional .protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 12, 7, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_public_import_message_)}},
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27 [lazy = true];
    {::_pbi::TcParser::FastMtS2,
     {474, 13, 8, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_lazy_message_)}},
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
    {::_pbi::TcParser::FastMtS2,
     {482, 14, 9, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_unverified_lazy_message_)}},
    // repeated bytes repeated_bytes = 45;
    {::_pbi::TcParser::FastBR2,
     {746, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_bytes_)}},
    // repeated group RepeatedGroup = 46 { ... };
    {::_pbi::TcParser::FastGtR2,
     {755, 63, 10, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeatedgroup_)}},
    // repeated int32 repeated_int32 = 31;
    {::_pbi::TcParser::FastV32R2,
     {504, 63, 0, PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_int32_)}},
  }}, {{
    33, 0, 6,
    16384, 29, 3712, 44, 63488, 56, 65504, 67, 16383, 72, 65504, 74,
    65535, 65535
  }}, {{
    // optional int32 optional_int32 = 1;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_int32_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 optional_int64 = 2;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_int64_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 optional_uint32 = 3;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_uint32_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 optional_uint64 = 4;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_uint64_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional sint32 optional_sint32 = 5;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_sint32_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional sint64 optional_sint64 = 6;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_sint64_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt64)},
    // optional fixed32 optional_fixed32 = 7;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_fixed32_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 optional_fixed64 = 8;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_fixed64_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional sfixed32 optional_sfixed32 = 9;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_sfixed32_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // optional sfixed64 optional_sfixed64 = 10;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_sfixed64_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed64)},
    // optional float optional_float = 11;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_float_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional double optional_double = 12;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_double_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool optional_bool = 13;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_bool_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string optional_string = 14;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes optional_bytes = 15;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_bytes_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional group OptionalGroup = 16 { ... };
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optionalgroup_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_nested_message_), _Internal::kHasBitsOffset + 9, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_foreign_message_), _Internal::kHasBitsOffset + 10, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_import_message_), _Internal::kHasBitsOffset + 11, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_nested_enum_), _Internal::kHasBitsOffset + 30, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_foreign_enum_), _Internal::kHasBitsOffset + 31, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_import_enum_), _Internal::kHasBitsOffset + 32, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_string_piece_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string optional_cord = 25 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_cord_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_public_import_message_), _Internal::kHasBitsOffset + 12, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_lazy_message_), _Internal::kHasBitsOffset + 13, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optional_unverified_lazy_message_), _Internal::kHasBitsOffset + 14, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 repeated_int32 = 31;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_int32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int64 repeated_int64 = 32;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_int64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // repeated uint32 repeated_uint32 = 33;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_uint32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // repeated uint64 repeated_uint64 = 34;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_uint64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
    // repeated sint32 repeated_sint32 = 35;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_sint32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSInt32)},
    // repeated sint64 repeated_sint64 = 36;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_sint64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSInt64)},
    // repeated fixed32 repeated_fixed32 = 37;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_fixed32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed32)},
    // repeated fixed64 repeated_fixed64 = 38;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_fixed64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed64)},
    // repeated sfixed32 repeated_sfixed32 = 39;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_sfixed32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSFixed32)},
    // repeated sfixed64 repeated_sfixed64 = 40;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_sfixed64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kSFixed64)},
    // repeated float repeated_float = 41;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_float_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated double repeated_double = 42;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_double_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated bool repeated_bool = 43;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_bool_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBool)},
    // repeated string repeated_string = 44;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_string_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated bytes repeated_bytes = 45;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_bytes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated group RepeatedGroup = 46 { ... };
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeatedgroup_), -1, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_nested_message_), -1, 11,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_foreign_message_), -1, 12,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_import_message_), -1, 13,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_nested_enum_), -1, 14,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_foreign_enum_), -1, 15,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated .protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_import_enum_), -1, 16,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_string_piece_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated string repeated_cord = 55 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_cord_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.repeated_lazy_message_), -1, 17,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 default_int32 = 61 [default = 41];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_int32_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 default_int64 = 62 [default = 42];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_int64_), _Internal::kHasBitsOffset + 34, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 default_uint32 = 63 [default = 43];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_uint32_), _Internal::kHasBitsOffset + 36, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 default_uint64 = 64 [default = 44];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_uint64_), _Internal::kHasBitsOffset + 35, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional sint32 default_sint32 = 65 [default = -45];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_sint32_), _Internal::kHasBitsOffset + 37, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional sint64 default_sint64 = 66 [default = 46];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_sint64_), _Internal::kHasBitsOffset + 38, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt64)},
    // optional fixed32 default_fixed32 = 67 [default = 47];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_fixed32_), _Internal::kHasBitsOffset + 40, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed64 default_fixed64 = 68 [default = 48];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_fixed64_), _Internal::kHasBitsOffset + 39, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional sfixed32 default_sfixed32 = 69 [default = 49];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_sfixed32_), _Internal::kHasBitsOffset + 41, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // optional sfixed64 default_sfixed64 = 70 [default = -50];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_sfixed64_), _Internal::kHasBitsOffset + 42, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed64)},
    // optional float default_float = 71 [default = 51.5];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_float_), _Internal::kHasBitsOffset + 44, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional double default_double = 72 [default = 52000];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_double_), _Internal::kHasBitsOffset + 43, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool default_bool = 73 [default = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_bool_), _Internal::kHasBitsOffset + 45, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string default_string = 74 [default = "hello"];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_string_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes default_bytes = 75 [default = "world"];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_bytes_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_nested_enum_), _Internal::kHasBitsOffset + 46, 18,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_foreign_enum_), _Internal::kHasBitsOffset + 47, 19,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_import_enum_), _Internal::kHasBitsOffset + 29, 20,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_string_piece_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string default_cord = 85 [default = "123", ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_cord_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 oneof_uint32 = 111;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.oneof_field_.oneof_uint32_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // .protobuf_unittest.TestAllTypesLite.NestedMessage oneof_nested_message = 112;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.oneof_field_.oneof_nested_message_), _Internal::kOneofCaseOffset + 0, 21,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string oneof_string = 113;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.oneof_field_.oneof_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes oneof_bytes = 114;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.oneof_field_.oneof_bytes_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // .protobuf_unittest.TestAllTypesLite.NestedMessage oneof_lazy_nested_message = 115 [lazy = true];
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.oneof_field_.oneof_lazy_nested_message_), _Internal::kOneofCaseOffset + 0, 22,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 deceptively_named_list = 116;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.deceptively_named_list_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .protobuf_unittest.TestAllTypesLite.NestedMessage2 oneof_nested_message2 = 117;
    {PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.oneof_field_.oneof_nested_message2_), _Internal::kOneofCaseOffset + 0, 23,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite_OptionalGroup>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessageLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest_import::ImportMessageLite>()},
    {1, 3},
    {4, 3},
    {7, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest_import::PublicImportMessageLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite_RepeatedGroup>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessageLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest_import::ImportMessageLite>()},
    {1, 3},
    {4, 3},
    {7, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite_NestedMessage>()},
    {1, 3},
    {4, 3},
    {7, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite_NestedMessage>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite_NestedMessage2>()},
  }}, {{
  }},
};

::uint8_t* TestAllTypesLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllTypesLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 optional_int32 = 1;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_optional_int32(), target);
  }

  // optional int64 optional_int64 = 2;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_optional_int64(), target);
  }

  // optional uint32 optional_uint32 = 3;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_optional_uint32(), target);
  }

  // optional uint64 optional_uint64 = 4;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_optional_uint64(), target);
  }

  // optional sint32 optional_sint32 = 5;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        5, this->_internal_optional_sint32(), target);
  }

  // optional sint64 optional_sint64 = 6;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        6, this->_internal_optional_sint64(), target);
  }

  // optional fixed32 optional_fixed32 = 7;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        7, this->_internal_optional_fixed32(), target);
  }

  // optional fixed64 optional_fixed64 = 8;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        8, this->_internal_optional_fixed64(), target);
  }

  // optional sfixed32 optional_sfixed32 = 9;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
        9, this->_internal_optional_sfixed32(), target);
  }

  // optional sfixed64 optional_sfixed64 = 10;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
        10, this->_internal_optional_sfixed64(), target);
  }

  // optional float optional_float = 11;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        11, this->_internal_optional_float(), target);
  }

  // optional double optional_double = 12;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        12, this->_internal_optional_double(), target);
  }

  // optional bool optional_bool = 13;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        13, this->_internal_optional_bool(), target);
  }

  // optional string optional_string = 14;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_optional_string();
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // optional bytes optional_bytes = 15;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_optional_bytes();
    target = stream->WriteBytesMaybeAliased(15, _s, target);
  }

  // optional group OptionalGroup = 16 { ... };
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteGroup(
        16, _Internal::optionalgroup(this), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        18, _Internal::optional_nested_message(this),
        _Internal::optional_nested_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        19, _Internal::optional_foreign_message(this),
        _Internal::optional_foreign_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        20, _Internal::optional_import_message(this),
        _Internal::optional_import_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        21, this->_internal_optional_nested_enum(), target);
  }

  // optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        22, this->_internal_optional_foreign_enum(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        23, this->_internal_optional_import_enum(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_optional_string_piece();
    target = stream->WriteStringMaybeAliased(24, _s, target);
  }

  // optional string optional_cord = 25 [ctype = CORD];
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_optional_cord();
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // optional .protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        26, _Internal::optional_public_import_message(this),
        _Internal::optional_public_import_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27 [lazy = true];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        27, _Internal::optional_lazy_message(this),
        _Internal::optional_lazy_message(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        28, _Internal::optional_unverified_lazy_message(this),
        _Internal::optional_unverified_lazy_message(this).GetCachedSize(), target, stream);
  }

  // repeated int32 repeated_int32 = 31;
  for (int i = 0, n = this->_internal_repeated_int32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        31, this->_internal_repeated_int32().Get(i), target);
  }

  // repeated int64 repeated_int64 = 32;
  for (int i = 0, n = this->_internal_repeated_int64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        32, this->_internal_repeated_int64().Get(i), target);
  }

  // repeated uint32 repeated_uint32 = 33;
  for (int i = 0, n = this->_internal_repeated_uint32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        33, this->_internal_repeated_uint32().Get(i), target);
  }

  // repeated uint64 repeated_uint64 = 34;
  for (int i = 0, n = this->_internal_repeated_uint64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        34, this->_internal_repeated_uint64().Get(i), target);
  }

  // repeated sint32 repeated_sint32 = 35;
  for (int i = 0, n = this->_internal_repeated_sint32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        35, this->_internal_repeated_sint32().Get(i), target);
  }

  // repeated sint64 repeated_sint64 = 36;
  for (int i = 0, n = this->_internal_repeated_sint64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        36, this->_internal_repeated_sint64().Get(i), target);
  }

  // repeated fixed32 repeated_fixed32 = 37;
  for (int i = 0, n = this->_internal_repeated_fixed32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        37, this->_internal_repeated_fixed32().Get(i), target);
  }

  // repeated fixed64 repeated_fixed64 = 38;
  for (int i = 0, n = this->_internal_repeated_fixed64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        38, this->_internal_repeated_fixed64().Get(i), target);
  }

  // repeated sfixed32 repeated_sfixed32 = 39;
  for (int i = 0, n = this->_internal_repeated_sfixed32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
        39, this->_internal_repeated_sfixed32().Get(i), target);
  }

  // repeated sfixed64 repeated_sfixed64 = 40;
  for (int i = 0, n = this->_internal_repeated_sfixed64_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
        40, this->_internal_repeated_sfixed64().Get(i), target);
  }

  // repeated float repeated_float = 41;
  for (int i = 0, n = this->_internal_repeated_float_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        41, this->_internal_repeated_float().Get(i), target);
  }

  // repeated double repeated_double = 42;
  for (int i = 0, n = this->_internal_repeated_double_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        42, this->_internal_repeated_double().Get(i), target);
  }

  // repeated bool repeated_bool = 43;
  for (int i = 0, n = this->_internal_repeated_bool_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        43, this->_internal_repeated_bool().Get(i), target);
  }

  // repeated string repeated_string = 44;
  for (int i = 0, n = this->_internal_repeated_string_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string().Get(i);
    target = stream->WriteString(44, s, target);
  }

  // repeated bytes repeated_bytes = 45;
  for (int i = 0, n = this->_internal_repeated_bytes_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_bytes().Get(i);
    target = stream->WriteBytes(45, s, target);
  }

  // repeated group RepeatedGroup = 46 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeatedgroup_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(46, this->_internal_repeatedgroup().Get(i), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_nested_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_nested_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(48, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_foreign_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_foreign_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(49, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_import_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_import_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(50, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
  for (int i = 0, n = this->_internal_repeated_nested_enum_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        51, static_cast<::protobuf_unittest::TestAllTypesLite_NestedEnum>(this->_internal_repeated_nested_enum().Get(i)),
        target);
  }

  // repeated .protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
  for (int i = 0, n = this->_internal_repeated_foreign_enum_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        52, static_cast<::protobuf_unittest::ForeignEnumLite>(this->_internal_repeated_foreign_enum().Get(i)),
        target);
  }

  // repeated .protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
  for (int i = 0, n = this->_internal_repeated_import_enum_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        53, static_cast<::protobuf_unittest_import::ImportEnumLite>(this->_internal_repeated_import_enum().Get(i)),
        target);
  }

  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  for (int i = 0, n = this->_internal_repeated_string_piece_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_string_piece().Get(i);
    target = stream->WriteString(54, s, target);
  }

  // repeated string repeated_cord = 55 [ctype = CORD];
  for (int i = 0, n = this->_internal_repeated_cord_size(); i < n; ++i) {
    const auto& s = this->_internal_repeated_cord().Get(i);
    target = stream->WriteString(55, s, target);
  }

  // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57 [lazy = true];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_lazy_message_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_lazy_message().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(57, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional int32 default_int32 = 61 [default = 41];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        61, this->_internal_default_int32(), target);
  }

  // optional int64 default_int64 = 62 [default = 42];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        62, this->_internal_default_int64(), target);
  }

  // optional uint32 default_uint32 = 63 [default = 43];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        63, this->_internal_default_uint32(), target);
  }

  // optional uint64 default_uint64 = 64 [default = 44];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        64, this->_internal_default_uint64(), target);
  }

  // optional sint32 default_sint32 = 65 [default = -45];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        65, this->_internal_default_sint32(), target);
  }

  // optional sint64 default_sint64 = 66 [default = 46];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        66, this->_internal_default_sint64(), target);
  }

  // optional fixed32 default_fixed32 = 67 [default = 47];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        67, this->_internal_default_fixed32(), target);
  }

  // optional fixed64 default_fixed64 = 68 [default = 48];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        68, this->_internal_default_fixed64(), target);
  }

  // optional sfixed32 default_sfixed32 = 69 [default = 49];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
        69, this->_internal_default_sfixed32(), target);
  }

  // optional sfixed64 default_sfixed64 = 70 [default = -50];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed64ToArray(
        70, this->_internal_default_sfixed64(), target);
  }

  // optional float default_float = 71 [default = 51.5];
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        71, this->_internal_default_float(), target);
  }

  // optional double default_double = 72 [default = 52000];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        72, this->_internal_default_double(), target);
  }

  // optional bool default_bool = 73 [default = true];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        73, this->_internal_default_bool(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string default_string = 74 [default = "hello"];
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_default_string();
    target = stream->WriteStringMaybeAliased(74, _s, target);
  }

  // optional bytes default_bytes = 75 [default = "world"];
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_default_bytes();
    target = stream->WriteBytesMaybeAliased(75, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        81, this->_internal_default_nested_enum(), target);
  }

  // optional .protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        82, this->_internal_default_foreign_enum(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        83, this->_internal_default_import_enum(), target);
  }

  // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_default_string_piece();
    target = stream->WriteStringMaybeAliased(84, _s, target);
  }

  // optional string default_cord = 85 [default = "123", ctype = CORD];
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_default_cord();
    target = stream->WriteStringMaybeAliased(85, _s, target);
  }

  switch (oneof_field_case()) {
    case kOneofUint32: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          111, this->_internal_oneof_uint32(), target);
      break;
    }
    case kOneofNestedMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          112, _Internal::oneof_nested_message(this),
          _Internal::oneof_nested_message(this).GetCachedSize(), target, stream);
      break;
    }
    case kOneofString: {
      const std::string& _s = this->_internal_oneof_string();
      target = stream->WriteStringMaybeAliased(113, _s, target);
      break;
    }
    case kOneofBytes: {
      const std::string& _s = this->_internal_oneof_bytes();
      target = stream->WriteBytesMaybeAliased(114, _s, target);
      break;
    }
    case kOneofLazyNestedMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          115, _Internal::oneof_lazy_nested_message(this),
          _Internal::oneof_lazy_nested_message(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // optional int32 deceptively_named_list = 116;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        116, this->_internal_deceptively_named_list(), target);
  }

  // .protobuf_unittest.TestAllTypesLite.NestedMessage2 oneof_nested_message2 = 117;
  if (oneof_field_case() == kOneofNestedMessage2) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        117, _Internal::oneof_nested_message2(this),
        _Internal::oneof_nested_message2(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllTypesLite)
  return target;
}

::size_t TestAllTypesLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllTypesLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 repeated_int32 = 31;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_int32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 repeated_int64 = 32;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_repeated_int64())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_int64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint32 repeated_uint32 = 33;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_repeated_uint32())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_uint32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint64 repeated_uint64 = 34;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_repeated_uint64())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_uint64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint32 repeated_sint32 = 35;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt32Size(
        this->_internal_repeated_sint32())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_sint32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint64 repeated_sint64 = 36;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt64Size(
        this->_internal_repeated_sint64())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_sint64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed32 repeated_fixed32 = 37;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed32_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed64 repeated_fixed64 = 38;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed64_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed32 repeated_sfixed32 = 39;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_sfixed32_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_sfixed32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed64 repeated_sfixed64 = 40;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_repeated_sfixed64_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_sfixed64_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated float repeated_float = 41;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_float_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_float_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated double repeated_double = 42;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_repeated_double_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_double_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool repeated_bool = 43;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_size())
    ;
    std::size_t tag_size = std::size_t{2} *
        ::_pbi::FromIntSize(this->_internal_repeated_bool_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated string repeated_string = 44;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string().size());
  for (int i = 0, n = _internal_repeated_string().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string().Get(i));
  }
  // repeated bytes repeated_bytes = 45;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_bytes().size());
  for (int i = 0, n = _internal_repeated_bytes().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_repeated_bytes().Get(i));
  }
  // repeated group RepeatedGroup = 46 { ... };
  total_size += 4UL * this->_internal_repeatedgroup_size();
  for (const auto& msg : this->_internal_repeatedgroup()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
  total_size += 2UL * this->_internal_repeated_nested_message_size();
  for (const auto& msg : this->_internal_repeated_nested_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
  total_size += 2UL * this->_internal_repeated_foreign_message_size();
  for (const auto& msg : this->_internal_repeated_foreign_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
  total_size += 2UL * this->_internal_repeated_import_message_size();
  for (const auto& msg : this->_internal_repeated_import_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_nested_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_nested_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  // repeated .protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_foreign_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_foreign_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  // repeated .protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_repeated_import_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_repeated_import_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{2} * count;
  }
  // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_string_piece().size());
  for (int i = 0, n = _internal_repeated_string_piece().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_string_piece().Get(i));
  }
  // repeated string repeated_cord = 55 [ctype = CORD];
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_repeated_cord().size());
  for (int i = 0, n = _internal_repeated_cord().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_repeated_cord().Get(i));
  }
  // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_lazy_message = 57 [lazy = true];
  total_size += 2UL * this->_internal_repeated_lazy_message_size();
  for (const auto& msg : this->_internal_repeated_lazy_message()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string optional_string = 14;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_string());
    }

    // optional bytes optional_bytes = 15;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_optional_bytes());
    }

    // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_string_piece());
    }

    // optional string optional_cord = 25 [ctype = CORD];
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_cord());
    }

    // optional string default_string = 74 [default = "hello"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_default_string());
    }

    // optional bytes default_bytes = 75 [default = "world"];
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_default_bytes());
    }

    // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_default_string_piece());
    }

    // optional string default_cord = 85 [default = "123", ctype = CORD];
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_default_cord());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional group OptionalGroup = 16 { ... };
    if (cached_has_bits & 0x00000100u) {
      total_size +=
          4 + ::google::protobuf::internal::WireFormatLite::GroupSize(*_impl_.optionalgroup_);
    }

    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
    if (cached_has_bits & 0x00000200u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_nested_message_);
    }

    // optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
    if (cached_has_bits & 0x00000400u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_foreign_message_);
    }

    // optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
    if (cached_has_bits & 0x00000800u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_import_message_);
    }

    // optional .protobuf_unittest_import.PublicImportMessageLite optional_public_import_message = 26;
    if (cached_has_bits & 0x00001000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_public_import_message_);
    }

    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_lazy_message = 27 [lazy = true];
    if (cached_has_bits & 0x00002000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_lazy_message_);
    }

    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_unverified_lazy_message = 28 [unverified_lazy = true];
    if (cached_has_bits & 0x00004000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_unverified_lazy_message_);
    }

    // optional int64 optional_int64 = 2;
    if (cached_has_bits & 0x00008000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_optional_int64());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int32 optional_int32 = 1;
    if (cached_has_bits & 0x00010000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_optional_int32());
    }

    // optional uint32 optional_uint32 = 3;
    if (cached_has_bits & 0x00020000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_optional_uint32());
    }

    // optional uint64 optional_uint64 = 4;
    if (cached_has_bits & 0x00040000u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_optional_uint64());
    }

    // optional sint64 optional_sint64 = 6;
    if (cached_has_bits & 0x00080000u) {
      total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
          this->_internal_optional_sint64());
    }

    // optional sint32 optional_sint32 = 5;
    if (cached_has_bits & 0x00100000u) {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
          this->_internal_optional_sint32());
    }

    // optional fixed32 optional_fixed32 = 7;
    if (cached_has_bits & 0x00200000u) {
      total_size += 5;
    }

    // optional fixed64 optional_fixed64 = 8;
    if (cached_has_bits & 0x00400000u) {
      total_size += 9;
    }

    // optional sfixed64 optional_sfixed64 = 10;
    if (cached_has_bits & 0x00800000u) {
      total_size += 9;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional sfixed32 optional_sfixed32 = 9;
    if (cached_has_bits & 0x01000000u) {
      total_size += 5;
    }

    // optional float optional_float = 11;
    if (cached_has_bits & 0x02000000u) {
      total_size += 5;
    }

    // optional double optional_double = 12;
    if (cached_has_bits & 0x04000000u) {
      total_size += 9;
    }

    // optional bool optional_bool = 13;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2;
    }

    // optional int32 deceptively_named_list = 116;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_deceptively_named_list());
    }

    // optional .protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_default_import_enum());
    }

    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_nested_enum());
    }

    // optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_foreign_enum());
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_import_enum());
    }

    // optional int32 default_int32 = 61 [default = 41];
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_default_int32());
    }

    // optional int64 default_int64 = 62 [default = 42];
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_default_int64());
    }

    // optional uint64 default_uint64 = 64 [default = 44];
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_default_uint64());
    }

    // optional uint32 default_uint32 = 63 [default = 43];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_default_uint32());
    }

    // optional sint32 default_sint32 = 65 [default = -45];
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::SInt32Size(
                                      this->_internal_default_sint32());
    }

    // optional sint64 default_sint64 = 66 [default = 46];
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::SInt64Size(
                                      this->_internal_default_sint64());
    }

    // optional fixed64 default_fixed64 = 68 [default = 48];
    if (cached_has_bits & 0x00000080u) {
      total_size += 10;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional fixed32 default_fixed32 = 67 [default = 47];
    if (cached_has_bits & 0x00000100u) {
      total_size += 6;
    }

    // optional sfixed32 default_sfixed32 = 69 [default = 49];
    if (cached_has_bits & 0x00000200u) {
      total_size += 6;
    }

    // optional sfixed64 default_sfixed64 = 70 [default = -50];
    if (cached_has_bits & 0x00000400u) {
      total_size += 10;
    }

    // optional double default_double = 72 [default = 52000];
    if (cached_has_bits & 0x00000800u) {
      total_size += 10;
    }

    // optional float default_float = 71 [default = 51.5];
    if (cached_has_bits & 0x00001000u) {
      total_size += 6;
    }

    // optional bool default_bool = 73 [default = true];
    if (cached_has_bits & 0x00002000u) {
      total_size += 3;
    }

    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_default_nested_enum());
    }

    // optional .protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_default_foreign_enum());
    }

  }
  switch (oneof_field_case()) {
    // uint32 oneof_uint32 = 111;
    case kOneofUint32: {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_oneof_uint32());
      break;
    }
    // .protobuf_unittest.TestAllTypesLite.NestedMessage oneof_nested_message = 112;
    case kOneofNestedMessage: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.oneof_field_.oneof_nested_message_);
      break;
    }
    // string oneof_string = 113;
    case kOneofString: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_oneof_string());
      break;
    }
    // bytes oneof_bytes = 114;
    case kOneofBytes: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_oneof_bytes());
      break;
    }
    // .protobuf_unittest.TestAllTypesLite.NestedMessage oneof_lazy_nested_message = 115 [lazy = true];
    case kOneofLazyNestedMessage: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.oneof_field_.oneof_lazy_nested_message_);
      break;
    }
    // .protobuf_unittest.TestAllTypesLite.NestedMessage2 oneof_nested_message2 = 117;
    case kOneofNestedMessage2: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.oneof_field_.oneof_nested_message2_);
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestAllTypesLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestAllTypesLite*>(
      &from));
}

void TestAllTypesLite::MergeFrom(const TestAllTypesLite& from) {
  TestAllTypesLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllTypesLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32()->MergeFrom(from._internal_repeated_int32());
  _this->_internal_mutable_repeated_int64()->MergeFrom(from._internal_repeated_int64());
  _this->_internal_mutable_repeated_uint32()->MergeFrom(from._internal_repeated_uint32());
  _this->_internal_mutable_repeated_uint64()->MergeFrom(from._internal_repeated_uint64());
  _this->_internal_mutable_repeated_sint32()->MergeFrom(from._internal_repeated_sint32());
  _this->_internal_mutable_repeated_sint64()->MergeFrom(from._internal_repeated_sint64());
  _this->_internal_mutable_repeated_fixed32()->MergeFrom(from._internal_repeated_fixed32());
  _this->_internal_mutable_repeated_fixed64()->MergeFrom(from._internal_repeated_fixed64());
  _this->_internal_mutable_repeated_sfixed32()->MergeFrom(from._internal_repeated_sfixed32());
  _this->_internal_mutable_repeated_sfixed64()->MergeFrom(from._internal_repeated_sfixed64());
  _this->_internal_mutable_repeated_float()->MergeFrom(from._internal_repeated_float());
  _this->_internal_mutable_repeated_double()->MergeFrom(from._internal_repeated_double());
  _this->_internal_mutable_repeated_bool()->MergeFrom(from._internal_repeated_bool());
  _this->_internal_mutable_repeated_string()->MergeFrom(from._internal_repeated_string());
  _this->_internal_mutable_repeated_bytes()->MergeFrom(from._internal_repeated_bytes());
  _this->_internal_mutable_repeatedgroup()->MergeFrom(
      from._internal_repeatedgroup());
  _this->_internal_mutable_repeated_nested_message()->MergeFrom(
      from._internal_repeated_nested_message());
  _this->_internal_mutable_repeated_foreign_message()->MergeFrom(
      from._internal_repeated_foreign_message());
  _this->_internal_mutable_repeated_import_message()->MergeFrom(
      from._internal_repeated_import_message());
  _this->_internal_mutable_repeated_nested_enum()->MergeFrom(from._internal_repeated_nested_enum());
  _this->_internal_mutable_repeated_foreign_enum()->MergeFrom(from._internal_repeated_foreign_enum());
  _this->_internal_mutable_repeated_import_enum()->MergeFrom(from._internal_repeated_import_enum());
  _this->_internal_mutable_repeated_string_piece()->MergeFrom(from._internal_repeated_string_piece());
  _this->_internal_mutable_repeated_cord()->MergeFrom(from._internal_repeated_cord());
  _this->_internal_mutable_repeated_lazy_message()->MergeFrom(
      from._internal_repeated_lazy_message());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_optional_string(from._internal_optional_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_optional_bytes(from._internal_optional_bytes());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_optional_string_piece(from._internal_optional_string_piece());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_optional_cord(from._internal_optional_cord());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_default_string(from._internal_default_string());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_default_bytes(from._internal_default_bytes());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_default_string_piece(from._internal_default_string_piece());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_default_cord(from._internal_default_cord());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_optionalgroup()->::protobuf_unittest::TestAllTypesLite_OptionalGroup::MergeFrom(
          from._internal_optionalgroup());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_optional_nested_message()->::protobuf_unittest::TestAllTypesLite_NestedMessage::MergeFrom(
          from._internal_optional_nested_message());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_optional_foreign_message()->::protobuf_unittest::ForeignMessageLite::MergeFrom(
          from._internal_optional_foreign_message());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_optional_import_message()->::protobuf_unittest_import::ImportMessageLite::MergeFrom(
          from._internal_optional_import_message());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_optional_public_import_message()->::protobuf_unittest_import::PublicImportMessageLite::MergeFrom(
          from._internal_optional_public_import_message());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_optional_lazy_message()->::protobuf_unittest::TestAllTypesLite_NestedMessage::MergeFrom(
          from._internal_optional_lazy_message());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_optional_unverified_lazy_message()->::protobuf_unittest::TestAllTypesLite_NestedMessage::MergeFrom(
          from._internal_optional_unverified_lazy_message());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.optional_int64_ = from._impl_.optional_int64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.optional_int32_ = from._impl_.optional_int32_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.optional_uint32_ = from._impl_.optional_uint32_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.optional_uint64_ = from._impl_.optional_uint64_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.optional_sint64_ = from._impl_.optional_sint64_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.optional_sint32_ = from._impl_.optional_sint32_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.optional_fixed32_ = from._impl_.optional_fixed32_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.optional_fixed64_ = from._impl_.optional_fixed64_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.optional_sfixed64_ = from._impl_.optional_sfixed64_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.optional_sfixed32_ = from._impl_.optional_sfixed32_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.optional_float_ = from._impl_.optional_float_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.optional_double_ = from._impl_.optional_double_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.optional_bool_ = from._impl_.optional_bool_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.deceptively_named_list_ = from._impl_.deceptively_named_list_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.default_import_enum_ = from._impl_.default_import_enum_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.optional_nested_enum_ = from._impl_.optional_nested_enum_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.optional_foreign_enum_ = from._impl_.optional_foreign_enum_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.optional_import_enum_ = from._impl_.optional_import_enum_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.default_int32_ = from._impl_.default_int32_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.default_int64_ = from._impl_.default_int64_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.default_uint64_ = from._impl_.default_uint64_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.default_uint32_ = from._impl_.default_uint32_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.default_sint32_ = from._impl_.default_sint32_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.default_sint64_ = from._impl_.default_sint64_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.default_fixed64_ = from._impl_.default_fixed64_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.default_fixed32_ = from._impl_.default_fixed32_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.default_sfixed32_ = from._impl_.default_sfixed32_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.default_sfixed64_ = from._impl_.default_sfixed64_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.default_double_ = from._impl_.default_double_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.default_float_ = from._impl_.default_float_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.default_bool_ = from._impl_.default_bool_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.default_nested_enum_ = from._impl_.default_nested_enum_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.default_foreign_enum_ = from._impl_.default_foreign_enum_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      _this->_internal_set_oneof_uint32(from._internal_oneof_uint32());
      break;
    }
    case kOneofNestedMessage: {
      _this->_internal_mutable_oneof_nested_message()->::protobuf_unittest::TestAllTypesLite_NestedMessage::MergeFrom(
          from._internal_oneof_nested_message());
      break;
    }
    case kOneofString: {
      _this->_internal_set_oneof_string(from._internal_oneof_string());
      break;
    }
    case kOneofBytes: {
      _this->_internal_set_oneof_bytes(from._internal_oneof_bytes());
      break;
    }
    case kOneofLazyNestedMessage: {
      _this->_internal_mutable_oneof_lazy_nested_message()->::protobuf_unittest::TestAllTypesLite_NestedMessage::MergeFrom(
          from._internal_oneof_lazy_nested_message());
      break;
    }
    case kOneofNestedMessage2: {
      _this->_internal_mutable_oneof_nested_message2()->::protobuf_unittest::TestAllTypesLite_NestedMessage2::MergeFrom(
          from._internal_oneof_nested_message2());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestAllTypesLite::CopyFrom(const TestAllTypesLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllTypesLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllTypesLite::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestAllTypesLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestAllTypesLite::InternalSwap(TestAllTypesLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  _impl_.repeated_int32_.InternalSwap(&other->_impl_.repeated_int32_);
  _impl_.repeated_int64_.InternalSwap(&other->_impl_.repeated_int64_);
  _impl_.repeated_uint32_.InternalSwap(&other->_impl_.repeated_uint32_);
  _impl_.repeated_uint64_.InternalSwap(&other->_impl_.repeated_uint64_);
  _impl_.repeated_sint32_.InternalSwap(&other->_impl_.repeated_sint32_);
  _impl_.repeated_sint64_.InternalSwap(&other->_impl_.repeated_sint64_);
  _impl_.repeated_fixed32_.InternalSwap(&other->_impl_.repeated_fixed32_);
  _impl_.repeated_fixed64_.InternalSwap(&other->_impl_.repeated_fixed64_);
  _impl_.repeated_sfixed32_.InternalSwap(&other->_impl_.repeated_sfixed32_);
  _impl_.repeated_sfixed64_.InternalSwap(&other->_impl_.repeated_sfixed64_);
  _impl_.repeated_float_.InternalSwap(&other->_impl_.repeated_float_);
  _impl_.repeated_double_.InternalSwap(&other->_impl_.repeated_double_);
  _impl_.repeated_bool_.InternalSwap(&other->_impl_.repeated_bool_);
  _impl_.repeated_string_.InternalSwap(&other->_impl_.repeated_string_);
  _impl_.repeated_bytes_.InternalSwap(&other->_impl_.repeated_bytes_);
  _impl_.repeatedgroup_.InternalSwap(&other->_impl_.repeatedgroup_);
  _impl_.repeated_nested_message_.InternalSwap(&other->_impl_.repeated_nested_message_);
  _impl_.repeated_foreign_message_.InternalSwap(&other->_impl_.repeated_foreign_message_);
  _impl_.repeated_import_message_.InternalSwap(&other->_impl_.repeated_import_message_);
  _impl_.repeated_nested_enum_.InternalSwap(&other->_impl_.repeated_nested_enum_);
  _impl_.repeated_foreign_enum_.InternalSwap(&other->_impl_.repeated_foreign_enum_);
  _impl_.repeated_import_enum_.InternalSwap(&other->_impl_.repeated_import_enum_);
  _impl_.repeated_string_piece_.InternalSwap(&other->_impl_.repeated_string_piece_);
  _impl_.repeated_cord_.InternalSwap(&other->_impl_.repeated_cord_);
  _impl_.repeated_lazy_message_.InternalSwap(&other->_impl_.repeated_lazy_message_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_, &other->_impl_.optional_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_bytes_, &other->_impl_.optional_bytes_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_piece_, &other->_impl_.optional_string_piece_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_cord_, &other->_impl_.optional_cord_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.default_string_, &other->_impl_.default_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.default_bytes_, &other->_impl_.default_bytes_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.default_string_piece_, &other->_impl_.default_string_piece_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.default_cord_, &other->_impl_.default_cord_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.default_foreign_enum_)
      + sizeof(TestAllTypesLite::_impl_.default_foreign_enum_)
      - PROTOBUF_FIELD_OFFSET(TestAllTypesLite, _impl_.optionalgroup_)>(
          reinterpret_cast<char*>(&_impl_.optionalgroup_),
          reinterpret_cast<char*>(&other->_impl_.optionalgroup_));
  swap(_impl_.oneof_field_, other->_impl_.oneof_field_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

std::string TestAllTypesLite::GetTypeName() const {
  return "protobuf_unittest.TestAllTypesLite";
}

// ===================================================================

class ForeignMessageLite::_Internal {
 public:
  using HasBits = decltype(std::declval<ForeignMessageLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ForeignMessageLite, _impl_._has_bits_);
  static void set_has_c(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ForeignMessageLite::ForeignMessageLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.ForeignMessageLite)
}
ForeignMessageLite::ForeignMessageLite(
    ::google::protobuf::Arena* arena, const ForeignMessageLite& from)
    : ForeignMessageLite(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ForeignMessageLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ForeignMessageLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.c_ = {};
}
ForeignMessageLite::~ForeignMessageLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.ForeignMessageLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void ForeignMessageLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ForeignMessageLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.ForeignMessageLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.c_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* ForeignMessageLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ForeignMessageLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ForeignMessageLite, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ForeignMessageLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional int32 c = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ForeignMessageLite, _impl_.c_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 c = 1;
    {PROTOBUF_FIELD_OFFSET(ForeignMessageLite, _impl_.c_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ForeignMessageLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.ForeignMessageLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 c = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.ForeignMessageLite)
  return target;
}

::size_t ForeignMessageLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.ForeignMessageLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 c = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_c());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void ForeignMessageLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const ForeignMessageLite*>(
      &from));
}

void ForeignMessageLite::MergeFrom(const ForeignMessageLite& from) {
  ForeignMessageLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.ForeignMessageLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_c(from._internal_c());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void ForeignMessageLite::CopyFrom(const ForeignMessageLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.ForeignMessageLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ForeignMessageLite::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ForeignMessageLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ForeignMessageLite::InternalSwap(ForeignMessageLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.c_, other->_impl_.c_);
}

std::string ForeignMessageLite::GetTypeName() const {
  return "protobuf_unittest.ForeignMessageLite";
}

// ===================================================================

class TestPackedTypesLite::_Internal {
 public:
};

TestPackedTypesLite::TestPackedTypesLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestPackedTypesLite)
}
inline PROTOBUF_NDEBUG_INLINE TestPackedTypesLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : packed_int32_{visibility, arena, from.packed_int32_},
        _packed_int32_cached_byte_size_{0},
        packed_int64_{visibility, arena, from.packed_int64_},
        _packed_int64_cached_byte_size_{0},
        packed_uint32_{visibility, arena, from.packed_uint32_},
        _packed_uint32_cached_byte_size_{0},
        packed_uint64_{visibility, arena, from.packed_uint64_},
        _packed_uint64_cached_byte_size_{0},
        packed_sint32_{visibility, arena, from.packed_sint32_},
        _packed_sint32_cached_byte_size_{0},
        packed_sint64_{visibility, arena, from.packed_sint64_},
        _packed_sint64_cached_byte_size_{0},
        packed_fixed32_{visibility, arena, from.packed_fixed32_},
        packed_fixed64_{visibility, arena, from.packed_fixed64_},
        packed_sfixed32_{visibility, arena, from.packed_sfixed32_},
        packed_sfixed64_{visibility, arena, from.packed_sfixed64_},
        packed_float_{visibility, arena, from.packed_float_},
        packed_double_{visibility, arena, from.packed_double_},
        packed_bool_{visibility, arena, from.packed_bool_},
        packed_enum_{visibility, arena, from.packed_enum_},
        _packed_enum_cached_byte_size_{0},
        _cached_size_{0} {}

TestPackedTypesLite::TestPackedTypesLite(
    ::google::protobuf::Arena* arena,
    const TestPackedTypesLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestPackedTypesLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedTypesLite)
}
inline PROTOBUF_NDEBUG_INLINE TestPackedTypesLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : packed_int32_{visibility, arena},
        _packed_int32_cached_byte_size_{0},
        packed_int64_{visibility, arena},
        _packed_int64_cached_byte_size_{0},
        packed_uint32_{visibility, arena},
        _packed_uint32_cached_byte_size_{0},
        packed_uint64_{visibility, arena},
        _packed_uint64_cached_byte_size_{0},
        packed_sint32_{visibility, arena},
        _packed_sint32_cached_byte_size_{0},
        packed_sint64_{visibility, arena},
        _packed_sint64_cached_byte_size_{0},
        packed_fixed32_{visibility, arena},
        packed_fixed64_{visibility, arena},
        packed_sfixed32_{visibility, arena},
        packed_sfixed64_{visibility, arena},
        packed_float_{visibility, arena},
        packed_double_{visibility, arena},
        packed_bool_{visibility, arena},
        packed_enum_{visibility, arena},
        _packed_enum_cached_byte_size_{0},
        _cached_size_{0} {}

inline void TestPackedTypesLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestPackedTypesLite::~TestPackedTypesLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedTypesLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestPackedTypesLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestPackedTypesLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPackedTypesLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.packed_int32_.Clear();
  _impl_.packed_int64_.Clear();
  _impl_.packed_uint32_.Clear();
  _impl_.packed_uint64_.Clear();
  _impl_.packed_sint32_.Clear();
  _impl_.packed_sint64_.Clear();
  _impl_.packed_fixed32_.Clear();
  _impl_.packed_fixed64_.Clear();
  _impl_.packed_sfixed32_.Clear();
  _impl_.packed_sfixed64_.Clear();
  _impl_.packed_float_.Clear();
  _impl_.packed_double_.Clear();
  _impl_.packed_bool_.Clear();
  _impl_.packed_enum_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestPackedTypesLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 1, 0, 7> TestPackedTypesLite::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    103, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestPackedTypesLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated fixed32 packed_fixed32 = 96 [packed = true];
    {::_pbi::TcParser::FastF32P2,
     {1666, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_fixed32_)}},
    // repeated fixed64 packed_fixed64 = 97 [packed = true];
    {::_pbi::TcParser::FastF64P2,
     {1674, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_fixed64_)}},
    // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
    {::_pbi::TcParser::FastF32P2,
     {1682, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_sfixed32_)}},
    // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
    {::_pbi::TcParser::FastF64P2,
     {1690, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_sfixed64_)}},
    // repeated float packed_float = 100 [packed = true];
    {::_pbi::TcParser::FastF32P2,
     {1698, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_float_)}},
    // repeated double packed_double = 101 [packed = true];
    {::_pbi::TcParser::FastF64P2,
     {1706, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_double_)}},
    // repeated bool packed_bool = 102 [packed = true];
    {::_pbi::TcParser::FastV8P2,
     {1714, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_bool_)}},
    // repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
    {::_pbi::TcParser::FastErP2,
     {1722, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_enum_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 packed_int32 = 90 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {1490, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_int32_)}},
    // repeated int64 packed_int64 = 91 [packed = true];
    {::_pbi::TcParser::FastV64P2,
     {1498, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_int64_)}},
    // repeated uint32 packed_uint32 = 92 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {1506, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_uint32_)}},
    // repeated uint64 packed_uint64 = 93 [packed = true];
    {::_pbi::TcParser::FastV64P2,
     {1514, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_uint64_)}},
    // repeated sint32 packed_sint32 = 94 [packed = true];
    {::_pbi::TcParser::FastZ32P2,
     {1522, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_sint32_)}},
    // repeated sint64 packed_sint64 = 95 [packed = true];
    {::_pbi::TcParser::FastZ64P2,
     {1530, 63, 0, PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_sint64_)}},
  }}, {{
    90, 0, 1,
    49152, 0,
    65535, 65535
  }}, {{
    // repeated int32 packed_int32 = 90 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int64 packed_int64 = 91 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_int64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated uint32 packed_uint32 = 92 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_uint32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint64 packed_uint64 = 93 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_uint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // repeated sint32 packed_sint32 = 94 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_sint32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt32)},
    // repeated sint64 packed_sint64 = 95 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_sint64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt64)},
    // repeated fixed32 packed_fixed32 = 96 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_fixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed32)},
    // repeated fixed64 packed_fixed64 = 97 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_fixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed64)},
    // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_sfixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSFixed32)},
    // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_sfixed64_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSFixed64)},
    // repeated float packed_float = 100 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_float_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated double packed_double = 101 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_double_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated bool packed_bool = 102 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_bool_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestPackedTypesLite, _impl_.packed_enum_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnumRange)},
  }}, {{
    {4, 3},
  }}, {{
  }},
};

::uint8_t* TestPackedTypesLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPackedTypesLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 packed_int32 = 90 [packed = true];
  {
    int byte_size = _impl_._packed_int32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          90, _internal_packed_int32(), byte_size, target);
    }
  }

  // repeated int64 packed_int64 = 91 [packed = true];
  {
    int byte_size = _impl_._packed_int64_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          91, _internal_packed_int64(), byte_size, target);
    }
  }

  // repeated uint32 packed_uint32 = 92 [packed = true];
  {
    int byte_size = _impl_._packed_uint32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          92, _internal_packed_uint32(), byte_size, target);
    }
  }

  // repeated uint64 packed_uint64 = 93 [packed = true];
  {
    int byte_size = _impl_._packed_uint64_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          93, _internal_packed_uint64(), byte_size, target);
    }
  }

  // repeated sint32 packed_sint32 = 94 [packed = true];
  {
    int byte_size = _impl_._packed_sint32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteSInt32Packed(
          94, _internal_packed_sint32(), byte_size, target);
    }
  }

  // repeated sint64 packed_sint64 = 95 [packed = true];
  {
    int byte_size = _impl_._packed_sint64_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteSInt64Packed(
          95, _internal_packed_sint64(), byte_size, target);
    }
  }

  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  if (this->_internal_packed_fixed32_size() > 0) {
    target = stream->WriteFixedPacked(96, _internal_packed_fixed32(), target);
  }

  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  if (this->_internal_packed_fixed64_size() > 0) {
    target = stream->WriteFixedPacked(97, _internal_packed_fixed64(), target);
  }

  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  if (this->_internal_packed_sfixed32_size() > 0) {
    target = stream->WriteFixedPacked(98, _internal_packed_sfixed32(), target);
  }

  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  if (this->_internal_packed_sfixed64_size() > 0) {
    target = stream->WriteFixedPacked(99, _internal_packed_sfixed64(), target);
  }

  // repeated float packed_float = 100 [packed = true];
  if (this->_internal_packed_float_size() > 0) {
    target = stream->WriteFixedPacked(100, _internal_packed_float(), target);
  }

  // repeated double packed_double = 101 [packed = true];
  if (this->_internal_packed_double_size() > 0) {
    target = stream->WriteFixedPacked(101, _internal_packed_double(), target);
  }

  // repeated bool packed_bool = 102 [packed = true];
  if (this->_internal_packed_bool_size() > 0) {
    target = stream->WriteFixedPacked(102, _internal_packed_bool(), target);
  }

  // repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
  {
    std::size_t byte_size = _impl_._packed_enum_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(103, _internal_packed_enum(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPackedTypesLite)
  return target;
}

::size_t TestPackedTypesLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPackedTypesLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 packed_int32 = 90 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_packed_int32())
    ;
    _impl_._packed_int32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 packed_int64 = 91 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_packed_int64())
    ;
    _impl_._packed_int64_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint32 packed_uint32 = 92 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_packed_uint32())
    ;
    _impl_._packed_uint32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint64 packed_uint64 = 93 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_packed_uint64())
    ;
    _impl_._packed_uint64_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint32 packed_sint32 = 94 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt32Size(
        this->_internal_packed_sint32())
    ;
    _impl_._packed_sint32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint64 packed_sint64 = 95 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt64Size(
        this->_internal_packed_sint64())
    ;
    _impl_._packed_sint64_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed32 packed_fixed32 = 96 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_packed_fixed32_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated fixed64 packed_fixed64 = 97 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_packed_fixed64_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_packed_sfixed32_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_packed_sfixed64_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float packed_float = 100 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_packed_float_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double packed_double = 101 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_packed_double_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated bool packed_bool = 102 [packed = true];
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_packed_bool_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_packed_enum_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_packed_enum().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 2;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._packed_enum_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestPackedTypesLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestPackedTypesLite*>(
      &from));
}

void TestPackedTypesLite::MergeFrom(const TestPackedTypesLite& from) {
  TestPackedTypesLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPackedTypesLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_packed_int32()->MergeFrom(from._internal_packed_int32());
  _this->_internal_mutable_packed_int64()->MergeFrom(from._internal_packed_int64());
  _this->_internal_mutable_packed_uint32()->MergeFrom(from._internal_packed_uint32());
  _this->_internal_mutable_packed_uint64()->MergeFrom(from._internal_packed_uint64());
  _this->_internal_mutable_packed_sint32()->MergeFrom(from._internal_packed_sint32());
  _this->_internal_mutable_packed_sint64()->MergeFrom(from._internal_packed_sint64());
  _this->_internal_mutable_packed_fixed32()->MergeFrom(from._internal_packed_fixed32());
  _this->_internal_mutable_packed_fixed64()->MergeFrom(from._internal_packed_fixed64());
  _this->_internal_mutable_packed_sfixed32()->MergeFrom(from._internal_packed_sfixed32());
  _this->_internal_mutable_packed_sfixed64()->MergeFrom(from._internal_packed_sfixed64());
  _this->_internal_mutable_packed_float()->MergeFrom(from._internal_packed_float());
  _this->_internal_mutable_packed_double()->MergeFrom(from._internal_packed_double());
  _this->_internal_mutable_packed_bool()->MergeFrom(from._internal_packed_bool());
  _this->_internal_mutable_packed_enum()->MergeFrom(from._internal_packed_enum());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestPackedTypesLite::CopyFrom(const TestPackedTypesLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPackedTypesLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestPackedTypesLite::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestPackedTypesLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestPackedTypesLite::InternalSwap(TestPackedTypesLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.packed_int32_.InternalSwap(&other->_impl_.packed_int32_);
  _impl_.packed_int64_.InternalSwap(&other->_impl_.packed_int64_);
  _impl_.packed_uint32_.InternalSwap(&other->_impl_.packed_uint32_);
  _impl_.packed_uint64_.InternalSwap(&other->_impl_.packed_uint64_);
  _impl_.packed_sint32_.InternalSwap(&other->_impl_.packed_sint32_);
  _impl_.packed_sint64_.InternalSwap(&other->_impl_.packed_sint64_);
  _impl_.packed_fixed32_.InternalSwap(&other->_impl_.packed_fixed32_);
  _impl_.packed_fixed64_.InternalSwap(&other->_impl_.packed_fixed64_);
  _impl_.packed_sfixed32_.InternalSwap(&other->_impl_.packed_sfixed32_);
  _impl_.packed_sfixed64_.InternalSwap(&other->_impl_.packed_sfixed64_);
  _impl_.packed_float_.InternalSwap(&other->_impl_.packed_float_);
  _impl_.packed_double_.InternalSwap(&other->_impl_.packed_double_);
  _impl_.packed_bool_.InternalSwap(&other->_impl_.packed_bool_);
  _impl_.packed_enum_.InternalSwap(&other->_impl_.packed_enum_);
}

std::string TestPackedTypesLite::GetTypeName() const {
  return "protobuf_unittest.TestPackedTypesLite";
}

// ===================================================================

class TestAllExtensionsLite::_Internal {
 public:
};

TestAllExtensionsLite::TestAllExtensionsLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestAllExtensionsLite)
}
inline PROTOBUF_NDEBUG_INLINE TestAllExtensionsLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

TestAllExtensionsLite::TestAllExtensionsLite(
    ::google::protobuf::Arena* arena,
    const TestAllExtensionsLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestAllExtensionsLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestAllExtensionsLite)
}
inline PROTOBUF_NDEBUG_INLINE TestAllExtensionsLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

inline void TestAllExtensionsLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestAllExtensionsLite::~TestAllExtensionsLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestAllExtensionsLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestAllExtensionsLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestAllExtensionsLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestAllExtensionsLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestAllExtensionsLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestAllExtensionsLite::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TestAllExtensionsLite, _impl_._extensions_),
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestAllExtensionsLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestAllExtensionsLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestAllExtensionsLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [1, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestAllExtensionsLite)
  return target;
}

::size_t TestAllExtensionsLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestAllExtensionsLite)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestAllExtensionsLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestAllExtensionsLite*>(
      &from));
}

void TestAllExtensionsLite::MergeFrom(const TestAllExtensionsLite& from) {
  TestAllExtensionsLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestAllExtensionsLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestAllExtensionsLite::CopyFrom(const TestAllExtensionsLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestAllExtensionsLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestAllExtensionsLite::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TestAllExtensionsLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestAllExtensionsLite::InternalSwap(TestAllExtensionsLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

std::string TestAllExtensionsLite::GetTypeName() const {
  return "protobuf_unittest.TestAllExtensionsLite";
}

// ===================================================================

class OptionalGroup_extension_lite::_Internal {
 public:
  using HasBits = decltype(std::declval<OptionalGroup_extension_lite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OptionalGroup_extension_lite, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

OptionalGroup_extension_lite::OptionalGroup_extension_lite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.OptionalGroup_extension_lite)
}
OptionalGroup_extension_lite::OptionalGroup_extension_lite(
    ::google::protobuf::Arena* arena, const OptionalGroup_extension_lite& from)
    : OptionalGroup_extension_lite(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE OptionalGroup_extension_lite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void OptionalGroup_extension_lite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.a_ = {};
}
OptionalGroup_extension_lite::~OptionalGroup_extension_lite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.OptionalGroup_extension_lite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void OptionalGroup_extension_lite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OptionalGroup_extension_lite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.OptionalGroup_extension_lite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* OptionalGroup_extension_lite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> OptionalGroup_extension_lite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OptionalGroup_extension_lite, _impl_._has_bits_),
    0, // no _extensions_
    17, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901759,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OptionalGroup_extension_lite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional int32 a = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 0, 0, PROTOBUF_FIELD_OFFSET(OptionalGroup_extension_lite, _impl_.a_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 a = 17;
    {PROTOBUF_FIELD_OFFSET(OptionalGroup_extension_lite, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* OptionalGroup_extension_lite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.OptionalGroup_extension_lite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 17;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.OptionalGroup_extension_lite)
  return target;
}

::size_t OptionalGroup_extension_lite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.OptionalGroup_extension_lite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 17;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_a());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void OptionalGroup_extension_lite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const OptionalGroup_extension_lite*>(
      &from));
}

void OptionalGroup_extension_lite::MergeFrom(const OptionalGroup_extension_lite& from) {
  OptionalGroup_extension_lite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.OptionalGroup_extension_lite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void OptionalGroup_extension_lite::CopyFrom(const OptionalGroup_extension_lite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.OptionalGroup_extension_lite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OptionalGroup_extension_lite::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OptionalGroup_extension_lite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OptionalGroup_extension_lite::InternalSwap(OptionalGroup_extension_lite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

std::string OptionalGroup_extension_lite::GetTypeName() const {
  return "protobuf_unittest.OptionalGroup_extension_lite";
}

// ===================================================================

class RepeatedGroup_extension_lite::_Internal {
 public:
  using HasBits = decltype(std::declval<RepeatedGroup_extension_lite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepeatedGroup_extension_lite, _impl_._has_bits_);
  static void set_has_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RepeatedGroup_extension_lite::RepeatedGroup_extension_lite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.RepeatedGroup_extension_lite)
}
RepeatedGroup_extension_lite::RepeatedGroup_extension_lite(
    ::google::protobuf::Arena* arena, const RepeatedGroup_extension_lite& from)
    : RepeatedGroup_extension_lite(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RepeatedGroup_extension_lite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RepeatedGroup_extension_lite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.a_ = {};
}
RepeatedGroup_extension_lite::~RepeatedGroup_extension_lite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.RepeatedGroup_extension_lite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void RepeatedGroup_extension_lite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepeatedGroup_extension_lite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.RepeatedGroup_extension_lite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* RepeatedGroup_extension_lite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 7> RepeatedGroup_extension_lite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepeatedGroup_extension_lite, _impl_._has_bits_),
    0, // no _extensions_
    47, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepeatedGroup_extension_lite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional int32 a = 47;
    {::_pbi::TcParser::FastV32S2,
     {760, 0, 0, PROTOBUF_FIELD_OFFSET(RepeatedGroup_extension_lite, _impl_.a_)}},
  }}, {{
    47, 0, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // optional int32 a = 47;
    {PROTOBUF_FIELD_OFFSET(RepeatedGroup_extension_lite, _impl_.a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RepeatedGroup_extension_lite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.RepeatedGroup_extension_lite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 a = 47;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        47, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.RepeatedGroup_extension_lite)
  return target;
}

::size_t RepeatedGroup_extension_lite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.RepeatedGroup_extension_lite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 a = 47;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_a());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void RepeatedGroup_extension_lite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const RepeatedGroup_extension_lite*>(
      &from));
}

void RepeatedGroup_extension_lite::MergeFrom(const RepeatedGroup_extension_lite& from) {
  RepeatedGroup_extension_lite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.RepeatedGroup_extension_lite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void RepeatedGroup_extension_lite::CopyFrom(const RepeatedGroup_extension_lite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.RepeatedGroup_extension_lite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepeatedGroup_extension_lite::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RepeatedGroup_extension_lite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepeatedGroup_extension_lite::InternalSwap(RepeatedGroup_extension_lite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.a_, other->_impl_.a_);
}

std::string RepeatedGroup_extension_lite::GetTypeName() const {
  return "protobuf_unittest.RepeatedGroup_extension_lite";
}

// ===================================================================

class TestPackedExtensionsLite::_Internal {
 public:
};

TestPackedExtensionsLite::TestPackedExtensionsLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestPackedExtensionsLite)
}
inline PROTOBUF_NDEBUG_INLINE TestPackedExtensionsLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

TestPackedExtensionsLite::TestPackedExtensionsLite(
    ::google::protobuf::Arena* arena,
    const TestPackedExtensionsLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestPackedExtensionsLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestPackedExtensionsLite)
}
inline PROTOBUF_NDEBUG_INLINE TestPackedExtensionsLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

inline void TestPackedExtensionsLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestPackedExtensionsLite::~TestPackedExtensionsLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestPackedExtensionsLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestPackedExtensionsLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestPackedExtensionsLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestPackedExtensionsLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestPackedExtensionsLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestPackedExtensionsLite::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TestPackedExtensionsLite, _impl_._extensions_),
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestPackedExtensionsLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestPackedExtensionsLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestPackedExtensionsLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [1, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestPackedExtensionsLite)
  return target;
}

::size_t TestPackedExtensionsLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestPackedExtensionsLite)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestPackedExtensionsLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestPackedExtensionsLite*>(
      &from));
}

void TestPackedExtensionsLite::MergeFrom(const TestPackedExtensionsLite& from) {
  TestPackedExtensionsLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestPackedExtensionsLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestPackedExtensionsLite::CopyFrom(const TestPackedExtensionsLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestPackedExtensionsLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestPackedExtensionsLite::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TestPackedExtensionsLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestPackedExtensionsLite::InternalSwap(TestPackedExtensionsLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

std::string TestPackedExtensionsLite::GetTypeName() const {
  return "protobuf_unittest.TestPackedExtensionsLite";
}

// ===================================================================

class TestNestedExtensionLite::_Internal {
 public:
};

TestNestedExtensionLite::TestNestedExtensionLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestNestedExtensionLite)
}
TestNestedExtensionLite::TestNestedExtensionLite(
    ::google::protobuf::Arena* arena, const TestNestedExtensionLite& from)
    : TestNestedExtensionLite(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestNestedExtensionLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestNestedExtensionLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestNestedExtensionLite::~TestNestedExtensionLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestNestedExtensionLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestNestedExtensionLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestNestedExtensionLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestNestedExtensionLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<std::string>();
}

const char* TestNestedExtensionLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestNestedExtensionLite::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestNestedExtensionLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestNestedExtensionLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestNestedExtensionLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestNestedExtensionLite)
  return target;
}

::size_t TestNestedExtensionLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestNestedExtensionLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestNestedExtensionLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestNestedExtensionLite*>(
      &from));
}

void TestNestedExtensionLite::MergeFrom(const TestNestedExtensionLite& from) {
  TestNestedExtensionLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestNestedExtensionLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestNestedExtensionLite::CopyFrom(const TestNestedExtensionLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestNestedExtensionLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestNestedExtensionLite::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestNestedExtensionLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestNestedExtensionLite::InternalSwap(TestNestedExtensionLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

std::string TestNestedExtensionLite::GetTypeName() const {
  return "protobuf_unittest.TestNestedExtensionLite";
}

// ===================================================================

class TestDeprecatedLite::_Internal {
 public:
  using HasBits = decltype(std::declval<TestDeprecatedLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_._has_bits_);
  static void set_has_deprecated_field(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_deprecated_field2(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_deprecated_field3(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestDeprecatedLite& deprecated_field4(const TestDeprecatedLite* msg);
  static void set_has_deprecated_field4(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000008) ^ 0x00000008) != 0;
  }
};

const ::protobuf_unittest::TestDeprecatedLite& TestDeprecatedLite::_Internal::deprecated_field4(const TestDeprecatedLite* msg) {
  return *msg->_impl_.deprecated_field4_;
}
TestDeprecatedLite::TestDeprecatedLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestDeprecatedLite)
}
inline PROTOBUF_NDEBUG_INLINE TestDeprecatedLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        deprecated_field3_(arena, from.deprecated_field3_) {}

TestDeprecatedLite::TestDeprecatedLite(
    ::google::protobuf::Arena* arena,
    const TestDeprecatedLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestDeprecatedLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.deprecated_field4_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::protobuf_unittest::TestDeprecatedLite>(arena, *from._impl_.deprecated_field4_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, deprecated_field_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, deprecated_field_),
           offsetof(Impl_, deprecated_field2_) -
               offsetof(Impl_, deprecated_field_) +
               sizeof(Impl_::deprecated_field2_));

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestDeprecatedLite)
}
inline PROTOBUF_NDEBUG_INLINE TestDeprecatedLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        deprecated_field3_(arena) {}

inline void TestDeprecatedLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, deprecated_field4_),
           0,
           offsetof(Impl_, deprecated_field2_) -
               offsetof(Impl_, deprecated_field4_) +
               sizeof(Impl_::deprecated_field2_));
}
TestDeprecatedLite::~TestDeprecatedLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestDeprecatedLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestDeprecatedLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.deprecated_field3_.Destroy();
  delete _impl_.deprecated_field4_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestDeprecatedLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestDeprecatedLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.deprecated_field3_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.deprecated_field4_ != nullptr);
      _impl_.deprecated_field4_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.deprecated_field_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.deprecated_field2_) -
        reinterpret_cast<char*>(&_impl_.deprecated_field_)) + sizeof(_impl_.deprecated_field2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestDeprecatedLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> TestDeprecatedLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestDeprecatedLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional .protobuf_unittest.TestDeprecatedLite deprecated_field4 = 4 [deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_.deprecated_field4_)}},
    // optional int32 deprecated_field = 1 [deprecated = true];
    {::_pbi::TcParser::FastV32S1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_.deprecated_field_)}},
    // required int32 deprecated_field2 = 2 [deprecated = true];
    {::_pbi::TcParser::FastV32S1,
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_.deprecated_field2_)}},
    // optional string deprecated_field3 = 3 [deprecated = true];
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_.deprecated_field3_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 deprecated_field = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_.deprecated_field_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 deprecated_field2 = 2 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_.deprecated_field2_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string deprecated_field3 = 3 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_.deprecated_field3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .protobuf_unittest.TestDeprecatedLite deprecated_field4 = 4 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_.deprecated_field4_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestDeprecatedLite>()},
  }}, {{
  }},
};

::uint8_t* TestDeprecatedLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestDeprecatedLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 deprecated_field = 1 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_deprecated_field(), target);
  }

  // required int32 deprecated_field2 = 2 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_deprecated_field2(), target);
  }

  // optional string deprecated_field3 = 3 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_deprecated_field3();
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional .protobuf_unittest.TestDeprecatedLite deprecated_field4 = 4 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::deprecated_field4(this),
        _Internal::deprecated_field4(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestDeprecatedLite)
  return target;
}

::size_t TestDeprecatedLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestDeprecatedLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string deprecated_field3 = 3 [deprecated = true];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_deprecated_field3());
    }

    // optional .protobuf_unittest.TestDeprecatedLite deprecated_field4 = 4 [deprecated = true];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.deprecated_field4_);
    }

    // optional int32 deprecated_field = 1 [deprecated = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_deprecated_field());
    }

  }
  // required int32 deprecated_field2 = 2 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_deprecated_field2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestDeprecatedLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestDeprecatedLite*>(
      &from));
}

void TestDeprecatedLite::MergeFrom(const TestDeprecatedLite& from) {
  TestDeprecatedLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestDeprecatedLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_deprecated_field3(from._internal_deprecated_field3());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_deprecated_field4()->::protobuf_unittest::TestDeprecatedLite::MergeFrom(
          from._internal_deprecated_field4());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.deprecated_field_ = from._impl_.deprecated_field_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.deprecated_field2_ = from._impl_.deprecated_field2_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestDeprecatedLite::CopyFrom(const TestDeprecatedLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestDeprecatedLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestDeprecatedLite::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.deprecated_field4_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* TestDeprecatedLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestDeprecatedLite::InternalSwap(TestDeprecatedLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.deprecated_field3_, &other->_impl_.deprecated_field3_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_.deprecated_field2_)
      + sizeof(TestDeprecatedLite::_impl_.deprecated_field2_)
      - PROTOBUF_FIELD_OFFSET(TestDeprecatedLite, _impl_.deprecated_field4_)>(
          reinterpret_cast<char*>(&_impl_.deprecated_field4_),
          reinterpret_cast<char*>(&other->_impl_.deprecated_field4_));
}

std::string TestDeprecatedLite::GetTypeName() const {
  return "protobuf_unittest.TestDeprecatedLite";
}

// ===================================================================

class TestParsingMergeLite_RepeatedFieldsGenerator_Group1::_Internal {
 public:
  using HasBits = decltype(std::declval<TestParsingMergeLite_RepeatedFieldsGenerator_Group1>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator_Group1, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypesLite& field1(const TestParsingMergeLite_RepeatedFieldsGenerator_Group1* msg);
  static void set_has_field1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedFieldsGenerator_Group1::_Internal::field1(const TestParsingMergeLite_RepeatedFieldsGenerator_Group1* msg) {
  return *msg->_impl_.field1_;
}
TestParsingMergeLite_RepeatedFieldsGenerator_Group1::TestParsingMergeLite_RepeatedFieldsGenerator_Group1(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite_RepeatedFieldsGenerator_Group1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TestParsingMergeLite_RepeatedFieldsGenerator_Group1::TestParsingMergeLite_RepeatedFieldsGenerator_Group1(
    ::google::protobuf::Arena* arena,
    const TestParsingMergeLite_RepeatedFieldsGenerator_Group1& from)
    : ::google::protobuf::MessageLite(arena) {
  TestParsingMergeLite_RepeatedFieldsGenerator_Group1* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.field1_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite>(arena, *from._impl_.field1_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite_RepeatedFieldsGenerator_Group1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.field1_ = {};
}
TestParsingMergeLite_RepeatedFieldsGenerator_Group1::~TestParsingMergeLite_RepeatedFieldsGenerator_Group1() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.field1_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.field1_ != nullptr);
    _impl_.field1_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestParsingMergeLite_RepeatedFieldsGenerator_Group1::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 1, 0, 2> TestParsingMergeLite_RepeatedFieldsGenerator_Group1::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator_Group1, _impl_._has_bits_),
    0, // no _extensions_
    11, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966271,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMergeLite_RepeatedFieldsGenerator_Group1_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG1, {84, 84}},
    // optional .protobuf_unittest.TestAllTypesLite field1 = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator_Group1, _impl_.field1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypesLite field1 = 11;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator_Group1, _impl_.field1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMergeLite_RepeatedFieldsGenerator_Group1::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypesLite field1 = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::field1(this),
        _Internal::field1(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  return target;
}

::size_t TestParsingMergeLite_RepeatedFieldsGenerator_Group1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypesLite field1 = 11;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.field1_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestParsingMergeLite_RepeatedFieldsGenerator_Group1*>(
      &from));
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::MergeFrom(const TestParsingMergeLite_RepeatedFieldsGenerator_Group1& from) {
  TestParsingMergeLite_RepeatedFieldsGenerator_Group1* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_field1()->::protobuf_unittest::TestAllTypesLite::MergeFrom(
        from._internal_field1());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::CopyFrom(const TestParsingMergeLite_RepeatedFieldsGenerator_Group1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMergeLite_RepeatedFieldsGenerator_Group1::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestParsingMergeLite_RepeatedFieldsGenerator_Group1::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group1::InternalSwap(TestParsingMergeLite_RepeatedFieldsGenerator_Group1* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.field1_, other->_impl_.field1_);
}

std::string TestParsingMergeLite_RepeatedFieldsGenerator_Group1::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group1";
}

// ===================================================================

class TestParsingMergeLite_RepeatedFieldsGenerator_Group2::_Internal {
 public:
  using HasBits = decltype(std::declval<TestParsingMergeLite_RepeatedFieldsGenerator_Group2>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator_Group2, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypesLite& field1(const TestParsingMergeLite_RepeatedFieldsGenerator_Group2* msg);
  static void set_has_field1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedFieldsGenerator_Group2::_Internal::field1(const TestParsingMergeLite_RepeatedFieldsGenerator_Group2* msg) {
  return *msg->_impl_.field1_;
}
TestParsingMergeLite_RepeatedFieldsGenerator_Group2::TestParsingMergeLite_RepeatedFieldsGenerator_Group2(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite_RepeatedFieldsGenerator_Group2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TestParsingMergeLite_RepeatedFieldsGenerator_Group2::TestParsingMergeLite_RepeatedFieldsGenerator_Group2(
    ::google::protobuf::Arena* arena,
    const TestParsingMergeLite_RepeatedFieldsGenerator_Group2& from)
    : ::google::protobuf::MessageLite(arena) {
  TestParsingMergeLite_RepeatedFieldsGenerator_Group2* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.field1_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite>(arena, *from._impl_.field1_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite_RepeatedFieldsGenerator_Group2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.field1_ = {};
}
TestParsingMergeLite_RepeatedFieldsGenerator_Group2::~TestParsingMergeLite_RepeatedFieldsGenerator_Group2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.field1_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.field1_ != nullptr);
    _impl_.field1_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestParsingMergeLite_RepeatedFieldsGenerator_Group2::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 1, 0, 2> TestParsingMergeLite_RepeatedFieldsGenerator_Group2::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator_Group2, _impl_._has_bits_),
    0, // no _extensions_
    21, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918719,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMergeLite_RepeatedFieldsGenerator_Group2_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG2, {420, 164}},
    // optional .protobuf_unittest.TestAllTypesLite field1 = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 0, 0, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator_Group2, _impl_.field1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypesLite field1 = 21;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator_Group2, _impl_.field1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMergeLite_RepeatedFieldsGenerator_Group2::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypesLite field1 = 21;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, _Internal::field1(this),
        _Internal::field1(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  return target;
}

::size_t TestParsingMergeLite_RepeatedFieldsGenerator_Group2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypesLite field1 = 21;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.field1_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestParsingMergeLite_RepeatedFieldsGenerator_Group2*>(
      &from));
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::MergeFrom(const TestParsingMergeLite_RepeatedFieldsGenerator_Group2& from) {
  TestParsingMergeLite_RepeatedFieldsGenerator_Group2* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_field1()->::protobuf_unittest::TestAllTypesLite::MergeFrom(
        from._internal_field1());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::CopyFrom(const TestParsingMergeLite_RepeatedFieldsGenerator_Group2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMergeLite_RepeatedFieldsGenerator_Group2::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestParsingMergeLite_RepeatedFieldsGenerator_Group2::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestParsingMergeLite_RepeatedFieldsGenerator_Group2::InternalSwap(TestParsingMergeLite_RepeatedFieldsGenerator_Group2* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.field1_, other->_impl_.field1_);
}

std::string TestParsingMergeLite_RepeatedFieldsGenerator_Group2::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator.Group2";
}

// ===================================================================

class TestParsingMergeLite_RepeatedFieldsGenerator::_Internal {
 public:
};

TestParsingMergeLite_RepeatedFieldsGenerator::TestParsingMergeLite_RepeatedFieldsGenerator(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite_RepeatedFieldsGenerator::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : field1_{visibility, arena, from.field1_},
        field2_{visibility, arena, from.field2_},
        field3_{visibility, arena, from.field3_},
        group1_{visibility, arena, from.group1_},
        group2_{visibility, arena, from.group2_},
        ext1_{visibility, arena, from.ext1_},
        ext2_{visibility, arena, from.ext2_},
        _cached_size_{0} {}

TestParsingMergeLite_RepeatedFieldsGenerator::TestParsingMergeLite_RepeatedFieldsGenerator(
    ::google::protobuf::Arena* arena,
    const TestParsingMergeLite_RepeatedFieldsGenerator& from)
    : ::google::protobuf::MessageLite(arena) {
  TestParsingMergeLite_RepeatedFieldsGenerator* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite_RepeatedFieldsGenerator::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : field1_{visibility, arena},
        field2_{visibility, arena},
        field3_{visibility, arena},
        group1_{visibility, arena},
        group2_{visibility, arena},
        ext1_{visibility, arena},
        ext2_{visibility, arena},
        _cached_size_{0} {}

inline void TestParsingMergeLite_RepeatedFieldsGenerator::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestParsingMergeLite_RepeatedFieldsGenerator::~TestParsingMergeLite_RepeatedFieldsGenerator() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestParsingMergeLite_RepeatedFieldsGenerator::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestParsingMergeLite_RepeatedFieldsGenerator::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field1_.Clear();
  _impl_.field2_.Clear();
  _impl_.field3_.Clear();
  _impl_.group1_.Clear();
  _impl_.group2_.Clear();
  _impl_.ext1_.Clear();
  _impl_.ext2_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestParsingMergeLite_RepeatedFieldsGenerator::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 7, 0, 7> TestParsingMergeLite_RepeatedFieldsGenerator::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1001, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294442488,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMergeLite_RepeatedFieldsGenerator_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;
    {::_pbi::TcParser::FastMtR2,
     {16066, 63, 5, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.ext1_)}},
    // repeated .protobuf_unittest.TestAllTypesLite field1 = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.field1_)}},
    // repeated .protobuf_unittest.TestAllTypesLite field2 = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.field2_)}},
    // repeated .protobuf_unittest.TestAllTypesLite field3 = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.field3_)}},
    // repeated group Group2 = 20 { ... };
    {::_pbi::TcParser::FastGtR2,
     {419, 63, 4, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.group2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    1000, 0, 1,
    65532, 5,
    65535, 65535
  }}, {{
    // repeated .protobuf_unittest.TestAllTypesLite field1 = 1;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.field1_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypesLite field2 = 2;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.field2_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypesLite field3 = 3;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.field3_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated group Group1 = 10 { ... };
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.group1_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated group Group2 = 20 { ... };
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.group2_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.ext1_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedFieldsGenerator, _impl_.ext2_), 0, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group1>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestParsingMergeLite_RepeatedFieldsGenerator_Group2>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMergeLite_RepeatedFieldsGenerator::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypesLite field1 = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_field1_size()); i < n; i++) {
    const auto& repfield = this->_internal_field1().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypesLite field2 = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_field2_size()); i < n; i++) {
    const auto& repfield = this->_internal_field2().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypesLite field3 = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_field3_size()); i < n; i++) {
    const auto& repfield = this->_internal_field3().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated group Group1 = 10 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_group1_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(10, this->_internal_group1().Get(i), target, stream);
  }

  // repeated group Group2 = 20 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_group2_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(20, this->_internal_group2().Get(i), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ext1_size()); i < n; i++) {
    const auto& repfield = this->_internal_ext1().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1000, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ext2_size()); i < n; i++) {
    const auto& repfield = this->_internal_ext2().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1001, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  return target;
}

::size_t TestParsingMergeLite_RepeatedFieldsGenerator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypesLite field1 = 1;
  total_size += 1UL * this->_internal_field1_size();
  for (const auto& msg : this->_internal_field1()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypesLite field2 = 2;
  total_size += 1UL * this->_internal_field2_size();
  for (const auto& msg : this->_internal_field2()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypesLite field3 = 3;
  total_size += 1UL * this->_internal_field3_size();
  for (const auto& msg : this->_internal_field3()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated group Group1 = 10 { ... };
  total_size += 2UL * this->_internal_group1_size();
  for (const auto& msg : this->_internal_group1()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  // repeated group Group2 = 20 { ... };
  total_size += 4UL * this->_internal_group2_size();
  for (const auto& msg : this->_internal_group2()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypesLite ext1 = 1000;
  total_size += 2UL * this->_internal_ext1_size();
  for (const auto& msg : this->_internal_ext1()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .protobuf_unittest.TestAllTypesLite ext2 = 1001;
  total_size += 2UL * this->_internal_ext2_size();
  for (const auto& msg : this->_internal_ext2()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestParsingMergeLite_RepeatedFieldsGenerator::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestParsingMergeLite_RepeatedFieldsGenerator*>(
      &from));
}

void TestParsingMergeLite_RepeatedFieldsGenerator::MergeFrom(const TestParsingMergeLite_RepeatedFieldsGenerator& from) {
  TestParsingMergeLite_RepeatedFieldsGenerator* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_field1()->MergeFrom(
      from._internal_field1());
  _this->_internal_mutable_field2()->MergeFrom(
      from._internal_field2());
  _this->_internal_mutable_field3()->MergeFrom(
      from._internal_field3());
  _this->_internal_mutable_group1()->MergeFrom(
      from._internal_group1());
  _this->_internal_mutable_group2()->MergeFrom(
      from._internal_group2());
  _this->_internal_mutable_ext1()->MergeFrom(
      from._internal_ext1());
  _this->_internal_mutable_ext2()->MergeFrom(
      from._internal_ext2());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestParsingMergeLite_RepeatedFieldsGenerator::CopyFrom(const TestParsingMergeLite_RepeatedFieldsGenerator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMergeLite_RepeatedFieldsGenerator::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestParsingMergeLite_RepeatedFieldsGenerator::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestParsingMergeLite_RepeatedFieldsGenerator::InternalSwap(TestParsingMergeLite_RepeatedFieldsGenerator* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.field1_.InternalSwap(&other->_impl_.field1_);
  _impl_.field2_.InternalSwap(&other->_impl_.field2_);
  _impl_.field3_.InternalSwap(&other->_impl_.field3_);
  _impl_.group1_.InternalSwap(&other->_impl_.group1_);
  _impl_.group2_.InternalSwap(&other->_impl_.group2_);
  _impl_.ext1_.InternalSwap(&other->_impl_.ext1_);
  _impl_.ext2_.InternalSwap(&other->_impl_.ext2_);
}

std::string TestParsingMergeLite_RepeatedFieldsGenerator::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite.RepeatedFieldsGenerator";
}

// ===================================================================

class TestParsingMergeLite_OptionalGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestParsingMergeLite_OptionalGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_OptionalGroup, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypesLite& optional_group_all_types(const TestParsingMergeLite_OptionalGroup* msg);
  static void set_has_optional_group_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_OptionalGroup::_Internal::optional_group_all_types(const TestParsingMergeLite_OptionalGroup* msg) {
  return *msg->_impl_.optional_group_all_types_;
}
TestParsingMergeLite_OptionalGroup::TestParsingMergeLite_OptionalGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite_OptionalGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TestParsingMergeLite_OptionalGroup::TestParsingMergeLite_OptionalGroup(
    ::google::protobuf::Arena* arena,
    const TestParsingMergeLite_OptionalGroup& from)
    : ::google::protobuf::MessageLite(arena) {
  TestParsingMergeLite_OptionalGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.optional_group_all_types_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite>(arena, *from._impl_.optional_group_all_types_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite_OptionalGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestParsingMergeLite_OptionalGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.optional_group_all_types_ = {};
}
TestParsingMergeLite_OptionalGroup::~TestParsingMergeLite_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestParsingMergeLite_OptionalGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.optional_group_all_types_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestParsingMergeLite_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.optional_group_all_types_ != nullptr);
    _impl_.optional_group_all_types_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestParsingMergeLite_OptionalGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 1, 0, 2> TestParsingMergeLite_OptionalGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_OptionalGroup, _impl_._has_bits_),
    0, // no _extensions_
    11, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966271,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMergeLite_OptionalGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG1, {84, 84}},
    // optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_OptionalGroup, _impl_.optional_group_all_types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_OptionalGroup, _impl_.optional_group_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMergeLite_OptionalGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::optional_group_all_types(this),
        _Internal::optional_group_all_types(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  return target;
}

::size_t TestParsingMergeLite_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypesLite optional_group_all_types = 11;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_group_all_types_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestParsingMergeLite_OptionalGroup::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestParsingMergeLite_OptionalGroup*>(
      &from));
}

void TestParsingMergeLite_OptionalGroup::MergeFrom(const TestParsingMergeLite_OptionalGroup& from) {
  TestParsingMergeLite_OptionalGroup* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_optional_group_all_types()->::protobuf_unittest::TestAllTypesLite::MergeFrom(
        from._internal_optional_group_all_types());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestParsingMergeLite_OptionalGroup::CopyFrom(const TestParsingMergeLite_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite.OptionalGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMergeLite_OptionalGroup::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestParsingMergeLite_OptionalGroup::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestParsingMergeLite_OptionalGroup::InternalSwap(TestParsingMergeLite_OptionalGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.optional_group_all_types_, other->_impl_.optional_group_all_types_);
}

std::string TestParsingMergeLite_OptionalGroup::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite.OptionalGroup";
}

// ===================================================================

class TestParsingMergeLite_RepeatedGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestParsingMergeLite_RepeatedGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedGroup, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypesLite& repeated_group_all_types(const TestParsingMergeLite_RepeatedGroup* msg);
  static void set_has_repeated_group_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite_RepeatedGroup::_Internal::repeated_group_all_types(const TestParsingMergeLite_RepeatedGroup* msg) {
  return *msg->_impl_.repeated_group_all_types_;
}
TestParsingMergeLite_RepeatedGroup::TestParsingMergeLite_RepeatedGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite_RepeatedGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TestParsingMergeLite_RepeatedGroup::TestParsingMergeLite_RepeatedGroup(
    ::google::protobuf::Arena* arena,
    const TestParsingMergeLite_RepeatedGroup& from)
    : ::google::protobuf::MessageLite(arena) {
  TestParsingMergeLite_RepeatedGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.repeated_group_all_types_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite>(arena, *from._impl_.repeated_group_all_types_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite_RepeatedGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestParsingMergeLite_RepeatedGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.repeated_group_all_types_ = {};
}
TestParsingMergeLite_RepeatedGroup::~TestParsingMergeLite_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestParsingMergeLite_RepeatedGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.repeated_group_all_types_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestParsingMergeLite_RepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.repeated_group_all_types_ != nullptr);
    _impl_.repeated_group_all_types_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestParsingMergeLite_RepeatedGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 1, 1, 0, 2> TestParsingMergeLite_RepeatedGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedGroup, _impl_._has_bits_),
    0, // no _extensions_
    21, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918719,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMergeLite_RepeatedGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::FastEndG2, {420, 164}},
    // optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 0, 0, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedGroup, _impl_.repeated_group_all_types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite_RepeatedGroup, _impl_.repeated_group_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMergeLite_RepeatedGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, _Internal::repeated_group_all_types(this),
        _Internal::repeated_group_all_types(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  return target;
}

::size_t TestParsingMergeLite_RepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllTypesLite repeated_group_all_types = 21;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.repeated_group_all_types_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestParsingMergeLite_RepeatedGroup::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestParsingMergeLite_RepeatedGroup*>(
      &from));
}

void TestParsingMergeLite_RepeatedGroup::MergeFrom(const TestParsingMergeLite_RepeatedGroup& from) {
  TestParsingMergeLite_RepeatedGroup* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_repeated_group_all_types()->::protobuf_unittest::TestAllTypesLite::MergeFrom(
        from._internal_repeated_group_all_types());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestParsingMergeLite_RepeatedGroup::CopyFrom(const TestParsingMergeLite_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite.RepeatedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMergeLite_RepeatedGroup::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestParsingMergeLite_RepeatedGroup::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestParsingMergeLite_RepeatedGroup::InternalSwap(TestParsingMergeLite_RepeatedGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.repeated_group_all_types_, other->_impl_.repeated_group_all_types_);
}

std::string TestParsingMergeLite_RepeatedGroup::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite.RepeatedGroup";
}

// ===================================================================

class TestParsingMergeLite::_Internal {
 public:
  using HasBits = decltype(std::declval<TestParsingMergeLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllTypesLite& required_all_types(const TestParsingMergeLite* msg);
  static void set_has_required_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::protobuf_unittest::TestAllTypesLite& optional_all_types(const TestParsingMergeLite* msg);
  static void set_has_optional_all_types(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::TestParsingMergeLite_OptionalGroup& optionalgroup(const TestParsingMergeLite* msg);
  static void set_has_optionalgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite::_Internal::required_all_types(const TestParsingMergeLite* msg) {
  return *msg->_impl_.required_all_types_;
}
const ::protobuf_unittest::TestAllTypesLite& TestParsingMergeLite::_Internal::optional_all_types(const TestParsingMergeLite* msg) {
  return *msg->_impl_.optional_all_types_;
}
const ::protobuf_unittest::TestParsingMergeLite_OptionalGroup& TestParsingMergeLite::_Internal::optionalgroup(const TestParsingMergeLite* msg) {
  return *msg->_impl_.optionalgroup_;
}
TestParsingMergeLite::TestParsingMergeLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestParsingMergeLite)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        repeated_all_types_{visibility, arena, from.repeated_all_types_},
        repeatedgroup_{visibility, arena, from.repeatedgroup_} {}

TestParsingMergeLite::TestParsingMergeLite(
    ::google::protobuf::Arena* arena,
    const TestParsingMergeLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestParsingMergeLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.required_all_types_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite>(arena, *from._impl_.required_all_types_)
                : nullptr;
  _impl_.optional_all_types_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite>(arena, *from._impl_.optional_all_types_)
                : nullptr;
  _impl_.optionalgroup_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::protobuf_unittest::TestParsingMergeLite_OptionalGroup>(arena, *from._impl_.optionalgroup_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestParsingMergeLite)
}
inline PROTOBUF_NDEBUG_INLINE TestParsingMergeLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        repeated_all_types_{visibility, arena},
        repeatedgroup_{visibility, arena} {}

inline void TestParsingMergeLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, required_all_types_),
           0,
           offsetof(Impl_, optionalgroup_) -
               offsetof(Impl_, required_all_types_) +
               sizeof(Impl_::optionalgroup_));
}
TestParsingMergeLite::~TestParsingMergeLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestParsingMergeLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestParsingMergeLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.required_all_types_;
  delete _impl_.optional_all_types_;
  delete _impl_.optionalgroup_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestParsingMergeLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestParsingMergeLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _impl_.repeated_all_types_.Clear();
  _impl_.repeatedgroup_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.required_all_types_ != nullptr);
      _impl_.required_all_types_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.optional_all_types_ != nullptr);
      _impl_.optional_all_types_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optionalgroup_ != nullptr);
      _impl_.optionalgroup_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestParsingMergeLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 5, 0, 2> TestParsingMergeLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_._extensions_),
    20, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294442488,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestParsingMergeLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated group RepeatedGroup = 20 { ... };
    {::_pbi::TcParser::FastGtR2,
     {419, 63, 4, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.repeatedgroup_)}},
    // required .protobuf_unittest.TestAllTypesLite required_all_types = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.required_all_types_)}},
    // optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.optional_all_types_)}},
    // repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.repeated_all_types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .protobuf_unittest.TestAllTypesLite required_all_types = 1;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.required_all_types_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.optional_all_types_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.repeated_all_types_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional group OptionalGroup = 10 { ... };
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.optionalgroup_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // repeated group RepeatedGroup = 20 { ... };
    {PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.repeatedgroup_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestParsingMergeLite_OptionalGroup>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestParsingMergeLite_RepeatedGroup>()},
  }}, {{
  }},
};

::uint8_t* TestParsingMergeLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestParsingMergeLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .protobuf_unittest.TestAllTypesLite required_all_types = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::required_all_types(this),
        _Internal::required_all_types(this).GetCachedSize(), target, stream);
  }

  // optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::optional_all_types(this),
        _Internal::optional_all_types(this).GetCachedSize(), target, stream);
  }

  // repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeated_all_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_repeated_all_types().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional group OptionalGroup = 10 { ... };
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteGroup(
        10, _Internal::optionalgroup(this), target, stream);
  }

  // repeated group RepeatedGroup = 20 { ... };
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repeatedgroup_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroup(20, this->_internal_repeatedgroup().Get(i), target, stream);
  }

  // Extension range [1000, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestParsingMergeLite)
  return target;
}

::size_t TestParsingMergeLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestParsingMergeLite)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf_unittest.TestAllTypesLite repeated_all_types = 3;
  total_size += 1UL * this->_internal_repeated_all_types_size();
  for (const auto& msg : this->_internal_repeated_all_types()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated group RepeatedGroup = 20 { ... };
  total_size += 4UL * this->_internal_repeatedgroup_size();
  for (const auto& msg : this->_internal_repeatedgroup()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSize(msg);
  }
  // required .protobuf_unittest.TestAllTypesLite required_all_types = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.required_all_types_);
  }

  if (cached_has_bits & 0x00000006u) {
    // optional .protobuf_unittest.TestAllTypesLite optional_all_types = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_all_types_);
    }

    // optional group OptionalGroup = 10 { ... };
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::GroupSize(*_impl_.optionalgroup_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestParsingMergeLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestParsingMergeLite*>(
      &from));
}

void TestParsingMergeLite::MergeFrom(const TestParsingMergeLite& from) {
  TestParsingMergeLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestParsingMergeLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_all_types()->MergeFrom(
      from._internal_repeated_all_types());
  _this->_internal_mutable_repeatedgroup()->MergeFrom(
      from._internal_repeatedgroup());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_required_all_types()->::protobuf_unittest::TestAllTypesLite::MergeFrom(
          from._internal_required_all_types());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_optional_all_types()->::protobuf_unittest::TestAllTypesLite::MergeFrom(
          from._internal_optional_all_types());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_optionalgroup()->::protobuf_unittest::TestParsingMergeLite_OptionalGroup::MergeFrom(
          from._internal_optionalgroup());
    }
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestParsingMergeLite::CopyFrom(const TestParsingMergeLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestParsingMergeLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestParsingMergeLite::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TestParsingMergeLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestParsingMergeLite::InternalSwap(TestParsingMergeLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_all_types_.InternalSwap(&other->_impl_.repeated_all_types_);
  _impl_.repeatedgroup_.InternalSwap(&other->_impl_.repeatedgroup_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.optionalgroup_)
      + sizeof(TestParsingMergeLite::_impl_.optionalgroup_)
      - PROTOBUF_FIELD_OFFSET(TestParsingMergeLite, _impl_.required_all_types_)>(
          reinterpret_cast<char*>(&_impl_.required_all_types_),
          reinterpret_cast<char*>(&other->_impl_.required_all_types_));
}

std::string TestParsingMergeLite::GetTypeName() const {
  return "protobuf_unittest.TestParsingMergeLite";
}

// ===================================================================

class TestMergeExceptionLite::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMergeExceptionLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestMergeExceptionLite, _impl_._has_bits_);
  static const ::protobuf_unittest::TestAllExtensionsLite& all_extensions(const TestMergeExceptionLite* msg);
  static void set_has_all_extensions(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::TestAllExtensionsLite& TestMergeExceptionLite::_Internal::all_extensions(const TestMergeExceptionLite* msg) {
  return *msg->_impl_.all_extensions_;
}
TestMergeExceptionLite::TestMergeExceptionLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMergeExceptionLite)
}
inline PROTOBUF_NDEBUG_INLINE TestMergeExceptionLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TestMergeExceptionLite::TestMergeExceptionLite(
    ::google::protobuf::Arena* arena,
    const TestMergeExceptionLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestMergeExceptionLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.all_extensions_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::protobuf_unittest::TestAllExtensionsLite>(arena, *from._impl_.all_extensions_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMergeExceptionLite)
}
inline PROTOBUF_NDEBUG_INLINE TestMergeExceptionLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestMergeExceptionLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.all_extensions_ = {};
}
TestMergeExceptionLite::~TestMergeExceptionLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMergeExceptionLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestMergeExceptionLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.all_extensions_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestMergeExceptionLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMergeExceptionLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.all_extensions_ != nullptr);
    _impl_.all_extensions_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestMergeExceptionLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TestMergeExceptionLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestMergeExceptionLite, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestMergeExceptionLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional .protobuf_unittest.TestAllExtensionsLite all_extensions = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestMergeExceptionLite, _impl_.all_extensions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.TestAllExtensionsLite all_extensions = 1;
    {PROTOBUF_FIELD_OFFSET(TestMergeExceptionLite, _impl_.all_extensions_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllExtensionsLite>()},
  }}, {{
  }},
};

::uint8_t* TestMergeExceptionLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMergeExceptionLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.TestAllExtensionsLite all_extensions = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::all_extensions(this),
        _Internal::all_extensions(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMergeExceptionLite)
  return target;
}

::size_t TestMergeExceptionLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMergeExceptionLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .protobuf_unittest.TestAllExtensionsLite all_extensions = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.all_extensions_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestMergeExceptionLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestMergeExceptionLite*>(
      &from));
}

void TestMergeExceptionLite::MergeFrom(const TestMergeExceptionLite& from) {
  TestMergeExceptionLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMergeExceptionLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_all_extensions()->::protobuf_unittest::TestAllExtensionsLite::MergeFrom(
        from._internal_all_extensions());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestMergeExceptionLite::CopyFrom(const TestMergeExceptionLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMergeExceptionLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMergeExceptionLite::IsInitialized() const {
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.all_extensions_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* TestMergeExceptionLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestMergeExceptionLite::InternalSwap(TestMergeExceptionLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.all_extensions_, other->_impl_.all_extensions_);
}

std::string TestMergeExceptionLite::GetTypeName() const {
  return "protobuf_unittest.TestMergeExceptionLite";
}

// ===================================================================

class TestEmptyMessageLite::_Internal {
 public:
};

TestEmptyMessageLite::TestEmptyMessageLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEmptyMessageLite)
}
TestEmptyMessageLite::TestEmptyMessageLite(
    ::google::protobuf::Arena* arena, const TestEmptyMessageLite& from)
    : TestEmptyMessageLite(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestEmptyMessageLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestEmptyMessageLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestEmptyMessageLite::~TestEmptyMessageLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmptyMessageLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestEmptyMessageLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestEmptyMessageLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEmptyMessageLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<std::string>();
}

const char* TestEmptyMessageLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestEmptyMessageLite::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestEmptyMessageLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestEmptyMessageLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEmptyMessageLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEmptyMessageLite)
  return target;
}

::size_t TestEmptyMessageLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEmptyMessageLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestEmptyMessageLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestEmptyMessageLite*>(
      &from));
}

void TestEmptyMessageLite::MergeFrom(const TestEmptyMessageLite& from) {
  TestEmptyMessageLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEmptyMessageLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestEmptyMessageLite::CopyFrom(const TestEmptyMessageLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEmptyMessageLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestEmptyMessageLite::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestEmptyMessageLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestEmptyMessageLite::InternalSwap(TestEmptyMessageLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

std::string TestEmptyMessageLite::GetTypeName() const {
  return "protobuf_unittest.TestEmptyMessageLite";
}

// ===================================================================

class TestEmptyMessageWithExtensionsLite::_Internal {
 public:
};

TestEmptyMessageWithExtensionsLite::TestEmptyMessageWithExtensionsLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
}
inline PROTOBUF_NDEBUG_INLINE TestEmptyMessageWithExtensionsLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

TestEmptyMessageWithExtensionsLite::TestEmptyMessageWithExtensionsLite(
    ::google::protobuf::Arena* arena,
    const TestEmptyMessageWithExtensionsLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestEmptyMessageWithExtensionsLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
}
inline PROTOBUF_NDEBUG_INLINE TestEmptyMessageWithExtensionsLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

inline void TestEmptyMessageWithExtensionsLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestEmptyMessageWithExtensionsLite::~TestEmptyMessageWithExtensionsLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestEmptyMessageWithExtensionsLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestEmptyMessageWithExtensionsLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestEmptyMessageWithExtensionsLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestEmptyMessageWithExtensionsLite::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TestEmptyMessageWithExtensionsLite, _impl_._extensions_),
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestEmptyMessageWithExtensionsLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestEmptyMessageWithExtensionsLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [1, 536870912)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1, 536870912, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  return target;
}

::size_t TestEmptyMessageWithExtensionsLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestEmptyMessageWithExtensionsLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestEmptyMessageWithExtensionsLite*>(
      &from));
}

void TestEmptyMessageWithExtensionsLite::MergeFrom(const TestEmptyMessageWithExtensionsLite& from) {
  TestEmptyMessageWithExtensionsLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestEmptyMessageWithExtensionsLite::CopyFrom(const TestEmptyMessageWithExtensionsLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestEmptyMessageWithExtensionsLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestEmptyMessageWithExtensionsLite::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TestEmptyMessageWithExtensionsLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestEmptyMessageWithExtensionsLite::InternalSwap(TestEmptyMessageWithExtensionsLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

std::string TestEmptyMessageWithExtensionsLite::GetTypeName() const {
  return "protobuf_unittest.TestEmptyMessageWithExtensionsLite";
}

// ===================================================================

class V1MessageLite::_Internal {
 public:
  using HasBits = decltype(std::declval<V1MessageLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(V1MessageLite, _impl_._has_bits_);
  static void set_has_int_field(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_enum_field(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

V1MessageLite::V1MessageLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.V1MessageLite)
}
V1MessageLite::V1MessageLite(
    ::google::protobuf::Arena* arena, const V1MessageLite& from)
    : V1MessageLite(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE V1MessageLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        enum_field_{static_cast< ::protobuf_unittest::V1EnumLite >(1)} {}

inline void V1MessageLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.int_field_ = {};
}
V1MessageLite::~V1MessageLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.V1MessageLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void V1MessageLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void V1MessageLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.V1MessageLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.int_field_ = 0;
    _impl_.enum_field_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* V1MessageLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> V1MessageLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(V1MessageLite, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_V1MessageLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional .protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
    {::_pbi::TcParser::FastEr1S1,
     {16, 1, 1, PROTOBUF_FIELD_OFFSET(V1MessageLite, _impl_.enum_field_)}},
    // required int32 int_field = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(V1MessageLite, _impl_.int_field_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 int_field = 1;
    {PROTOBUF_FIELD_OFFSET(V1MessageLite, _impl_.int_field_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
    {PROTOBUF_FIELD_OFFSET(V1MessageLite, _impl_.enum_field_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 1},
  }}, {{
  }},
};

::uint8_t* V1MessageLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.V1MessageLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 int_field = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_int_field(), target);
  }

  // optional .protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_enum_field(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.V1MessageLite)
  return target;
}

::size_t V1MessageLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.V1MessageLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int32 int_field = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_int_field());
  }

  // optional .protobuf_unittest.V1EnumLite enum_field = 2 [default = V1_FIRST];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_enum_field());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void V1MessageLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const V1MessageLite*>(
      &from));
}

void V1MessageLite::MergeFrom(const V1MessageLite& from) {
  V1MessageLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.V1MessageLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.int_field_ = from._impl_.int_field_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.enum_field_ = from._impl_.enum_field_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void V1MessageLite::CopyFrom(const V1MessageLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.V1MessageLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool V1MessageLite::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* V1MessageLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void V1MessageLite::InternalSwap(V1MessageLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(V1MessageLite, _impl_.enum_field_)
      + sizeof(V1MessageLite::_impl_.enum_field_)
      - PROTOBUF_FIELD_OFFSET(V1MessageLite, _impl_.int_field_)>(
          reinterpret_cast<char*>(&_impl_.int_field_),
          reinterpret_cast<char*>(&other->_impl_.int_field_));
}

std::string V1MessageLite::GetTypeName() const {
  return "protobuf_unittest.V1MessageLite";
}

// ===================================================================

class V2MessageLite::_Internal {
 public:
  using HasBits = decltype(std::declval<V2MessageLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(V2MessageLite, _impl_._has_bits_);
  static void set_has_int_field(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_enum_field(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

V2MessageLite::V2MessageLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.V2MessageLite)
}
V2MessageLite::V2MessageLite(
    ::google::protobuf::Arena* arena, const V2MessageLite& from)
    : V2MessageLite(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE V2MessageLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        enum_field_{static_cast< ::protobuf_unittest::V2EnumLite >(1)} {}

inline void V2MessageLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.int_field_ = {};
}
V2MessageLite::~V2MessageLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.V2MessageLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void V2MessageLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void V2MessageLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.V2MessageLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.int_field_ = 0;
    _impl_.enum_field_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* V2MessageLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> V2MessageLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(V2MessageLite, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_V2MessageLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional .protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
    {::_pbi::TcParser::FastEr1S1,
     {16, 1, 2, PROTOBUF_FIELD_OFFSET(V2MessageLite, _impl_.enum_field_)}},
    // required int32 int_field = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(V2MessageLite, _impl_.int_field_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 int_field = 1;
    {PROTOBUF_FIELD_OFFSET(V2MessageLite, _impl_.int_field_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
    {PROTOBUF_FIELD_OFFSET(V2MessageLite, _impl_.enum_field_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 2},
  }}, {{
  }},
};

::uint8_t* V2MessageLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.V2MessageLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 int_field = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_int_field(), target);
  }

  // optional .protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_enum_field(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.V2MessageLite)
  return target;
}

::size_t V2MessageLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.V2MessageLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int32 int_field = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_int_field());
  }

  // optional .protobuf_unittest.V2EnumLite enum_field = 2 [default = V2_FIRST];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_enum_field());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void V2MessageLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const V2MessageLite*>(
      &from));
}

void V2MessageLite::MergeFrom(const V2MessageLite& from) {
  V2MessageLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.V2MessageLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.int_field_ = from._impl_.int_field_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.enum_field_ = from._impl_.enum_field_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void V2MessageLite::CopyFrom(const V2MessageLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.V2MessageLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool V2MessageLite::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* V2MessageLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void V2MessageLite::InternalSwap(V2MessageLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(V2MessageLite, _impl_.enum_field_)
      + sizeof(V2MessageLite::_impl_.enum_field_)
      - PROTOBUF_FIELD_OFFSET(V2MessageLite, _impl_.int_field_)>(
          reinterpret_cast<char*>(&_impl_.int_field_),
          reinterpret_cast<char*>(&other->_impl_.int_field_));
}

std::string V2MessageLite::GetTypeName() const {
  return "protobuf_unittest.V2MessageLite";
}

// ===================================================================

class TestHugeFieldNumbersLite_OptionalGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TestHugeFieldNumbersLite_OptionalGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite_OptionalGroup, _impl_._has_bits_);
  static void set_has_group_a(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestHugeFieldNumbersLite_OptionalGroup::TestHugeFieldNumbersLite_OptionalGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup)
}
TestHugeFieldNumbersLite_OptionalGroup::TestHugeFieldNumbersLite_OptionalGroup(
    ::google::protobuf::Arena* arena, const TestHugeFieldNumbersLite_OptionalGroup& from)
    : TestHugeFieldNumbersLite_OptionalGroup(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TestHugeFieldNumbersLite_OptionalGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TestHugeFieldNumbersLite_OptionalGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.group_a_ = {};
}
TestHugeFieldNumbersLite_OptionalGroup::~TestHugeFieldNumbersLite_OptionalGroup() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestHugeFieldNumbersLite_OptionalGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestHugeFieldNumbersLite_OptionalGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_a_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestHugeFieldNumbersLite_OptionalGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 7> TestHugeFieldNumbersLite_OptionalGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite_OptionalGroup, _impl_._has_bits_),
    0, // no _extensions_
    536870009, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestHugeFieldNumbersLite_OptionalGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    64633, 8191, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // optional int32 group_a = 536870009;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite_OptionalGroup, _impl_.group_a_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TestHugeFieldNumbersLite_OptionalGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 group_a = 536870009;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        536870009, this->_internal_group_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup)
  return target;
}

::size_t TestHugeFieldNumbersLite_OptionalGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 group_a = 536870009;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_group_a());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestHugeFieldNumbersLite_OptionalGroup::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestHugeFieldNumbersLite_OptionalGroup*>(
      &from));
}

void TestHugeFieldNumbersLite_OptionalGroup::MergeFrom(const TestHugeFieldNumbersLite_OptionalGroup& from) {
  TestHugeFieldNumbersLite_OptionalGroup* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_group_a(from._internal_group_a());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestHugeFieldNumbersLite_OptionalGroup::CopyFrom(const TestHugeFieldNumbersLite_OptionalGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestHugeFieldNumbersLite_OptionalGroup::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestHugeFieldNumbersLite_OptionalGroup::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestHugeFieldNumbersLite_OptionalGroup::InternalSwap(TestHugeFieldNumbersLite_OptionalGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.group_a_, other->_impl_.group_a_);
}

std::string TestHugeFieldNumbersLite_OptionalGroup::GetTypeName() const {
  return "protobuf_unittest.TestHugeFieldNumbersLite.OptionalGroup";
}

// ===================================================================

// ===================================================================

class TestHugeFieldNumbersLite::_Internal {
 public:
  using HasBits = decltype(std::declval<TestHugeFieldNumbersLite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestHugeFieldNumbersLite, _impl_._oneof_case_);
  static void set_has_optional_int32(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_fixed_32(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_optional_enum(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_optional_string(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_optional_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::protobuf_unittest::ForeignMessageLite& optional_message(const TestHugeFieldNumbersLite* msg);
  static void set_has_optional_message(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::protobuf_unittest::TestHugeFieldNumbersLite_OptionalGroup& optionalgroup(const TestHugeFieldNumbersLite* msg);
  static void set_has_optionalgroup(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::protobuf_unittest::TestAllTypesLite& oneof_test_all_types(const TestHugeFieldNumbersLite* msg);
};

const ::protobuf_unittest::ForeignMessageLite& TestHugeFieldNumbersLite::_Internal::optional_message(const TestHugeFieldNumbersLite* msg) {
  return *msg->_impl_.optional_message_;
}
const ::protobuf_unittest::TestHugeFieldNumbersLite_OptionalGroup& TestHugeFieldNumbersLite::_Internal::optionalgroup(const TestHugeFieldNumbersLite* msg) {
  return *msg->_impl_.optionalgroup_;
}
const ::protobuf_unittest::TestAllTypesLite& TestHugeFieldNumbersLite::_Internal::oneof_test_all_types(const TestHugeFieldNumbersLite* msg) {
  return *msg->_impl_.oneof_field_.oneof_test_all_types_;
}
void TestHugeFieldNumbersLite::set_allocated_oneof_test_all_types(::protobuf_unittest::TestAllTypesLite* oneof_test_all_types) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_oneof_field();
  if (oneof_test_all_types) {
    ::google::protobuf::Arena* submessage_arena = oneof_test_all_types->GetArena();
    if (message_arena != submessage_arena) {
      oneof_test_all_types = ::google::protobuf::internal::GetOwnedMessage(message_arena, oneof_test_all_types, submessage_arena);
    }
    set_has_oneof_test_all_types();
    _impl_.oneof_field_.oneof_test_all_types_ = oneof_test_all_types;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestHugeFieldNumbersLite.oneof_test_all_types)
}
TestHugeFieldNumbersLite::TestHugeFieldNumbersLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestHugeFieldNumbersLite)
}
inline PROTOBUF_NDEBUG_INLINE TestHugeFieldNumbersLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        repeated_int32_{visibility, arena, from.repeated_int32_},
        packed_int32_{visibility, arena, from.packed_int32_},
        _packed_int32_cached_byte_size_{0},
        string_string_map_{visibility, arena, from.string_string_map_},
        optional_string_(arena, from.optional_string_),
        optional_bytes_(arena, from.optional_bytes_),
        oneof_field_{},
        _oneof_case_{from._oneof_case_[0]} {}

TestHugeFieldNumbersLite::TestHugeFieldNumbersLite(
    ::google::protobuf::Arena* arena,
    const TestHugeFieldNumbersLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestHugeFieldNumbersLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.optional_message_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::protobuf_unittest::ForeignMessageLite>(arena, *from._impl_.optional_message_)
                : nullptr;
  _impl_.optionalgroup_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::protobuf_unittest::TestHugeFieldNumbersLite_OptionalGroup>(arena, *from._impl_.optionalgroup_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optional_int32_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, optional_int32_),
           offsetof(Impl_, optional_enum_) -
               offsetof(Impl_, optional_int32_) +
               sizeof(Impl_::optional_enum_));
  switch (oneof_field_case()) {
    case ONEOF_FIELD_NOT_SET:
      break;
      case kOneofUint32:
        _impl_.oneof_field_.oneof_uint32_ = from._impl_.oneof_field_.oneof_uint32_;
        break;
      case kOneofTestAllTypes:
        _impl_.oneof_field_.oneof_test_all_types_ = CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite>(arena, *from._impl_.oneof_field_.oneof_test_all_types_);
        break;
      case kOneofString:
        new (&_impl_.oneof_field_.oneof_string_) decltype(_impl_.oneof_field_.oneof_string_){arena, from._impl_.oneof_field_.oneof_string_};
        break;
      case kOneofBytes:
        new (&_impl_.oneof_field_.oneof_bytes_) decltype(_impl_.oneof_field_.oneof_bytes_){arena, from._impl_.oneof_field_.oneof_bytes_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestHugeFieldNumbersLite)
}
inline PROTOBUF_NDEBUG_INLINE TestHugeFieldNumbersLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        repeated_int32_{visibility, arena},
        packed_int32_{visibility, arena},
        _packed_int32_cached_byte_size_{0},
        string_string_map_{visibility, arena},
        optional_string_(arena),
        optional_bytes_(arena),
        optional_enum_{static_cast< ::protobuf_unittest::ForeignEnumLite >(4)},
        oneof_field_{},
        _oneof_case_{} {}

inline void TestHugeFieldNumbersLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optional_message_),
           0,
           offsetof(Impl_, fixed_32_) -
               offsetof(Impl_, optional_message_) +
               sizeof(Impl_::fixed_32_));
}
TestHugeFieldNumbersLite::~TestHugeFieldNumbersLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestHugeFieldNumbersLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestHugeFieldNumbersLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.optional_string_.Destroy();
  _impl_.optional_bytes_.Destroy();
  delete _impl_.optional_message_;
  delete _impl_.optionalgroup_;
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  _impl_.~Impl_();
}

void TestHugeFieldNumbersLite::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestHugeFieldNumbersLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (oneof_field_case()) {
    case kOneofUint32: {
      // No need to clear
      break;
    }
    case kOneofTestAllTypes: {
      if (GetArena() == nullptr) {
        delete _impl_.oneof_field_.oneof_test_all_types_;
      }
      break;
    }
    case kOneofString: {
      _impl_.oneof_field_.oneof_string_.Destroy();
      break;
    }
    case kOneofBytes: {
      _impl_.oneof_field_.oneof_bytes_.Destroy();
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


PROTOBUF_NOINLINE void TestHugeFieldNumbersLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestHugeFieldNumbersLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _impl_.repeated_int32_.Clear();
  _impl_.packed_int32_.Clear();
  _impl_.string_string_map_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.optional_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.optional_bytes_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optional_message_ != nullptr);
      _impl_.optional_message_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.optionalgroup_ != nullptr);
      _impl_.optionalgroup_->Clear();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    ::memset(&_impl_.optional_int32_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fixed_32_) -
        reinterpret_cast<char*>(&_impl_.optional_int32_)) + sizeof(_impl_.fixed_32_));
    _impl_.optional_enum_ = 4;
  }
  clear_oneof_field();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestHugeFieldNumbersLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 14, 5, 0, 7> TestHugeFieldNumbersLite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_._extensions_),
    536870014, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestHugeFieldNumbersLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    64624, 8191, 1,
    33280, 0,
    65535, 65535
  }}, {{
    // optional int32 optional_int32 = 536870000;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.optional_int32_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 fixed_32 = 536870001;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.fixed_32_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 repeated_int32 = 536870002 [packed = false];
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.repeated_int32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // repeated int32 packed_int32 = 536870003 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.packed_int32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // optional .protobuf_unittest.ForeignEnumLite optional_enum = 536870004;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.optional_enum_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string optional_string = 536870005;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.optional_string_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes optional_bytes = 536870006;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.optional_bytes_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .protobuf_unittest.ForeignMessageLite optional_message = 536870007;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.optional_message_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional group OptionalGroup = 536870008 { ... };
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.optionalgroup_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kRepGroup | ::_fl::kTvTable)},
    // map<string, string> string_string_map = 536870010;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.string_string_map_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // uint32 oneof_uint32 = 536870011;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.oneof_field_.oneof_uint32_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // .protobuf_unittest.TestAllTypesLite oneof_test_all_types = 536870012;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.oneof_field_.oneof_test_all_types_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string oneof_string = 536870013;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.oneof_field_.oneof_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes oneof_bytes = 536870014;
    {PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.oneof_field_.oneof_bytes_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {4, 3},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::ForeignMessageLite>()},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestHugeFieldNumbersLite_OptionalGroup>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TestHugeFieldNumbersLite()._impl_.string_string_map_)>(
        0, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
  }}, {{
  }},
};

::uint8_t* TestHugeFieldNumbersLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestHugeFieldNumbersLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // Extension range [536860000, 536870000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 536860000, 536870000, target, stream);
  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 optional_int32 = 536870000;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        536870000, this->_internal_optional_int32(), target);
  }

  // optional int32 fixed_32 = 536870001;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        536870001, this->_internal_fixed_32(), target);
  }

  // repeated int32 repeated_int32 = 536870002 [packed = false];
  for (int i = 0, n = this->_internal_repeated_int32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        536870002, this->_internal_repeated_int32().Get(i), target);
  }

  // repeated int32 packed_int32 = 536870003 [packed = true];
  {
    int byte_size = _impl_._packed_int32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          536870003, _internal_packed_int32(), byte_size, target);
    }
  }

  // optional .protobuf_unittest.ForeignEnumLite optional_enum = 536870004;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        536870004, this->_internal_optional_enum(), target);
  }

  // optional string optional_string = 536870005;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_optional_string();
    target = stream->WriteStringMaybeAliased(536870005, _s, target);
  }

  // optional bytes optional_bytes = 536870006;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_optional_bytes();
    target = stream->WriteBytesMaybeAliased(536870006, _s, target);
  }

  // optional .protobuf_unittest.ForeignMessageLite optional_message = 536870007;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        536870007, _Internal::optional_message(this),
        _Internal::optional_message(this).GetCachedSize(), target, stream);
  }

  // optional group OptionalGroup = 536870008 { ... };
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteGroup(
        536870008, _Internal::optionalgroup(this), target, stream);
  }

  // map<string, string> string_string_map = 536870010;
  if (!_internal_string_string_map().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_string_string_map();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            536870010, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            536870010, entry.first, entry.second, target, stream);
      }
    }
  }

  switch (oneof_field_case()) {
    case kOneofUint32: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          536870011, this->_internal_oneof_uint32(), target);
      break;
    }
    case kOneofTestAllTypes: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          536870012, _Internal::oneof_test_all_types(this),
          _Internal::oneof_test_all_types(this).GetCachedSize(), target, stream);
      break;
    }
    case kOneofString: {
      const std::string& _s = this->_internal_oneof_string();
      target = stream->WriteStringMaybeAliased(536870013, _s, target);
      break;
    }
    case kOneofBytes: {
      const std::string& _s = this->_internal_oneof_bytes();
      target = stream->WriteBytesMaybeAliased(536870014, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestHugeFieldNumbersLite)
  return target;
}

::size_t TestHugeFieldNumbersLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestHugeFieldNumbersLite)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 repeated_int32 = 536870002 [packed = false];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32())
    ;
    std::size_t tag_size = std::size_t{5} *
        ::_pbi::FromIntSize(this->_internal_repeated_int32_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 packed_int32 = 536870003 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_packed_int32())
    ;
    _impl_._packed_int32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 5 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // map<string, string> string_string_map = 536870010;
  total_size += 5 * ::google::protobuf::internal::FromIntSize(_internal_string_string_map_size());
  for (const auto& entry : _internal_string_string_map()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string optional_string = 536870005;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_optional_string());
    }

    // optional bytes optional_bytes = 536870006;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_optional_bytes());
    }

    // optional .protobuf_unittest.ForeignMessageLite optional_message = 536870007;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          5 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optional_message_);
    }

    // optional group OptionalGroup = 536870008 { ... };
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          10 + ::google::protobuf::internal::WireFormatLite::GroupSize(*_impl_.optionalgroup_);
    }

    // optional int32 optional_int32 = 536870000;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_optional_int32());
    }

    // optional int32 fixed_32 = 536870001;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_fixed_32());
    }

    // optional .protobuf_unittest.ForeignEnumLite optional_enum = 536870004;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_optional_enum());
    }

  }
  switch (oneof_field_case()) {
    // uint32 oneof_uint32 = 536870011;
    case kOneofUint32: {
      total_size += 5 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_oneof_uint32());
      break;
    }
    // .protobuf_unittest.TestAllTypesLite oneof_test_all_types = 536870012;
    case kOneofTestAllTypes: {
      total_size +=
          5 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.oneof_field_.oneof_test_all_types_);
      break;
    }
    // string oneof_string = 536870013;
    case kOneofString: {
      total_size += 5 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_oneof_string());
      break;
    }
    // bytes oneof_bytes = 536870014;
    case kOneofBytes: {
      total_size += 5 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestHugeFieldNumbersLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestHugeFieldNumbersLite*>(
      &from));
}

void TestHugeFieldNumbersLite::MergeFrom(const TestHugeFieldNumbersLite& from) {
  TestHugeFieldNumbersLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestHugeFieldNumbersLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32()->MergeFrom(from._internal_repeated_int32());
  _this->_internal_mutable_packed_int32()->MergeFrom(from._internal_packed_int32());
  _this->_impl_.string_string_map_.MergeFrom(from._impl_.string_string_map_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_optional_string(from._internal_optional_string());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_optional_bytes(from._internal_optional_bytes());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_optional_message()->::protobuf_unittest::ForeignMessageLite::MergeFrom(
          from._internal_optional_message());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_optionalgroup()->::protobuf_unittest::TestHugeFieldNumbersLite_OptionalGroup::MergeFrom(
          from._internal_optionalgroup());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.optional_int32_ = from._impl_.optional_int32_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.fixed_32_ = from._impl_.fixed_32_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.optional_enum_ = from._impl_.optional_enum_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  switch (from.oneof_field_case()) {
    case kOneofUint32: {
      _this->_internal_set_oneof_uint32(from._internal_oneof_uint32());
      break;
    }
    case kOneofTestAllTypes: {
      _this->_internal_mutable_oneof_test_all_types()->::protobuf_unittest::TestAllTypesLite::MergeFrom(
          from._internal_oneof_test_all_types());
      break;
    }
    case kOneofString: {
      _this->_internal_set_oneof_string(from._internal_oneof_string());
      break;
    }
    case kOneofBytes: {
      _this->_internal_set_oneof_bytes(from._internal_oneof_bytes());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestHugeFieldNumbersLite::CopyFrom(const TestHugeFieldNumbersLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestHugeFieldNumbersLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestHugeFieldNumbersLite::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TestHugeFieldNumbersLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestHugeFieldNumbersLite::InternalSwap(TestHugeFieldNumbersLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.repeated_int32_.InternalSwap(&other->_impl_.repeated_int32_);
  _impl_.packed_int32_.InternalSwap(&other->_impl_.packed_int32_);
  _impl_.string_string_map_.InternalSwap(&other->_impl_.string_string_map_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_string_, &other->_impl_.optional_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.optional_bytes_, &other->_impl_.optional_bytes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.optional_enum_)
      + sizeof(TestHugeFieldNumbersLite::_impl_.optional_enum_)
      - PROTOBUF_FIELD_OFFSET(TestHugeFieldNumbersLite, _impl_.optional_message_)>(
          reinterpret_cast<char*>(&_impl_.optional_message_),
          reinterpret_cast<char*>(&other->_impl_.optional_message_));
  swap(_impl_.oneof_field_, other->_impl_.oneof_field_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

std::string TestHugeFieldNumbersLite::GetTypeName() const {
  return "protobuf_unittest.TestHugeFieldNumbersLite";
}

// ===================================================================

class TestOneofParsingLite::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestOneofParsingLite, _impl_._oneof_case_);
  static const ::protobuf_unittest::TestAllTypesLite& oneof_submessage(const TestOneofParsingLite* msg);
};

const ::protobuf_unittest::TestAllTypesLite& TestOneofParsingLite::_Internal::oneof_submessage(const TestOneofParsingLite* msg) {
  return *msg->_impl_.oneof_field_.oneof_submessage_;
}
void TestOneofParsingLite::set_allocated_oneof_submessage(::protobuf_unittest::TestAllTypesLite* oneof_submessage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_oneof_field();
  if (oneof_submessage) {
    ::google::protobuf::Arena* submessage_arena = oneof_submessage->GetArena();
    if (message_arena != submessage_arena) {
      oneof_submessage = ::google::protobuf::internal::GetOwnedMessage(message_arena, oneof_submessage, submessage_arena);
    }
    set_has_oneof_submessage();
    _impl_.oneof_field_.oneof_submessage_ = oneof_submessage;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestOneofParsingLite.oneof_submessage)
}
/*static*/ const ::_pbi::LazyString TestOneofParsingLite::Impl_::_i_give_permission_to_break_this_code_default_oneof_bytes_{
    {{"default bytes", 13}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestOneofParsingLite::Impl_::_i_give_permission_to_break_this_code_default_oneof_string_cord_{
    {{"default Cord", 12}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString TestOneofParsingLite::Impl_::_i_give_permission_to_break_this_code_default_oneof_bytes_string_piece_{
    {{"default StringPiece", 19}},
    {nullptr},
};
TestOneofParsingLite::TestOneofParsingLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestOneofParsingLite)
}
inline PROTOBUF_NDEBUG_INLINE TestOneofParsingLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : oneof_field_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

TestOneofParsingLite::TestOneofParsingLite(
    ::google::protobuf::Arena* arena,
    const TestOneofParsingLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestOneofParsingLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (oneof_field_case()) {
    case ONEOF_FIELD_NOT_SET:
      break;
      case kOneofInt32:
        _impl_.oneof_field_.oneof_int32_ = from._impl_.oneof_field_.oneof_int32_;
        break;
      case kOneofSubmessage:
        _impl_.oneof_field_.oneof_submessage_ = CreateMaybeMessage<::protobuf_unittest::TestAllTypesLite>(arena, *from._impl_.oneof_field_.oneof_submessage_);
        break;
      case kOneofString:
        new (&_impl_.oneof_field_.oneof_string_) decltype(_impl_.oneof_field_.oneof_string_){arena, from._impl_.oneof_field_.oneof_string_};
        break;
      case kOneofBytes:
        new (&_impl_.oneof_field_.oneof_bytes_) decltype(_impl_.oneof_field_.oneof_bytes_){arena, from._impl_.oneof_field_.oneof_bytes_, Impl_::_i_give_permission_to_break_this_code_default_oneof_bytes_};
        break;
      case kOneofStringCord:
        new (&_impl_.oneof_field_.oneof_string_cord_) decltype(_impl_.oneof_field_.oneof_string_cord_){arena, from._impl_.oneof_field_.oneof_string_cord_, Impl_::_i_give_permission_to_break_this_code_default_oneof_string_cord_};
        break;
      case kOneofBytesCord:
        _impl_.oneof_field_.oneof_bytes_cord_ = ::google::protobuf::Arena::Create<absl::Cord>(arena, *from._impl_.oneof_field_.oneof_bytes_cord_);
        break;
      case kOneofStringStringPiece:
        new (&_impl_.oneof_field_.oneof_string_string_piece_) decltype(_impl_.oneof_field_.oneof_string_string_piece_){arena, from._impl_.oneof_field_.oneof_string_string_piece_};
        break;
      case kOneofBytesStringPiece:
        new (&_impl_.oneof_field_.oneof_bytes_string_piece_) decltype(_impl_.oneof_field_.oneof_bytes_string_piece_){arena, from._impl_.oneof_field_.oneof_bytes_string_piece_, Impl_::_i_give_permission_to_break_this_code_default_oneof_bytes_string_piece_};
        break;
      case kOneofEnum:
        _impl_.oneof_field_.oneof_enum_ = from._impl_.oneof_field_.oneof_enum_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestOneofParsingLite)
}
inline PROTOBUF_NDEBUG_INLINE TestOneofParsingLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : oneof_field_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void TestOneofParsingLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestOneofParsingLite::~TestOneofParsingLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestOneofParsingLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestOneofParsingLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_oneof_field()) {
    clear_oneof_field();
  }
  _impl_.~Impl_();
}

void TestOneofParsingLite::clear_oneof_field() {
// @@protoc_insertion_point(one_of_clear_start:protobuf_unittest.TestOneofParsingLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (oneof_field_case()) {
    case kOneofInt32: {
      // No need to clear
      break;
    }
    case kOneofSubmessage: {
      if (GetArena() == nullptr) {
        delete _impl_.oneof_field_.oneof_submessage_;
      }
      break;
    }
    case kOneofString: {
      _impl_.oneof_field_.oneof_string_.Destroy();
      break;
    }
    case kOneofBytes: {
      _impl_.oneof_field_.oneof_bytes_.Destroy();
      break;
    }
    case kOneofStringCord: {
      _impl_.oneof_field_.oneof_string_cord_.Destroy();
      break;
    }
    case kOneofBytesCord: {
      if (GetArena() == nullptr) {
        delete _impl_.oneof_field_.oneof_bytes_cord_;
      }
      break;
    }
    case kOneofStringStringPiece: {
      _impl_.oneof_field_.oneof_string_string_piece_.Destroy();
      break;
    }
    case kOneofBytesStringPiece: {
      _impl_.oneof_field_.oneof_bytes_string_piece_.Destroy();
      break;
    }
    case kOneofEnum: {
      // No need to clear
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ONEOF_FIELD_NOT_SET;
}


PROTOBUF_NOINLINE void TestOneofParsingLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestOneofParsingLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_oneof_field();
  _internal_metadata_.Clear<std::string>();
}

const char* TestOneofParsingLite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 9, 2, 0, 2> TestOneofParsingLite::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TestOneofParsingLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 oneof_int32 = 1;
    {PROTOBUF_FIELD_OFFSET(TestOneofParsingLite, _impl_.oneof_field_.oneof_int32_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // .protobuf_unittest.TestAllTypesLite oneof_submessage = 2;
    {PROTOBUF_FIELD_OFFSET(TestOneofParsingLite, _impl_.oneof_field_.oneof_submessage_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string oneof_string = 3;
    {PROTOBUF_FIELD_OFFSET(TestOneofParsingLite, _impl_.oneof_field_.oneof_string_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes oneof_bytes = 4 [default = "default bytes"];
    {PROTOBUF_FIELD_OFFSET(TestOneofParsingLite, _impl_.oneof_field_.oneof_bytes_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // string oneof_string_cord = 5 [default = "default Cord", ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestOneofParsingLite, _impl_.oneof_field_.oneof_string_cord_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes oneof_bytes_cord = 6 [ctype = CORD];
    {PROTOBUF_FIELD_OFFSET(TestOneofParsingLite, _impl_.oneof_field_.oneof_bytes_cord_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepCord)},
    // string oneof_string_string_piece = 7 [ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestOneofParsingLite, _impl_.oneof_field_.oneof_string_string_piece_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes oneof_bytes_string_piece = 8 [default = "default StringPiece", ctype = STRING_PIECE];
    {PROTOBUF_FIELD_OFFSET(TestOneofParsingLite, _impl_.oneof_field_.oneof_bytes_string_piece_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // .protobuf_unittest.V2EnumLite oneof_enum = 9;
    {PROTOBUF_FIELD_OFFSET(TestOneofParsingLite, _impl_.oneof_field_.oneof_enum_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kEnumRange)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::TestAllTypesLite>()},
    {1, 2},
  }}, {{
  }},
};

::uint8_t* TestOneofParsingLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestOneofParsingLite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (oneof_field_case()) {
    case kOneofInt32: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt32ToArrayWithField<1>(
              stream, this->_internal_oneof_int32(), target);
      break;
    }
    case kOneofSubmessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::oneof_submessage(this),
          _Internal::oneof_submessage(this).GetCachedSize(), target, stream);
      break;
    }
    case kOneofString: {
      const std::string& _s = this->_internal_oneof_string();
      target = stream->WriteStringMaybeAliased(3, _s, target);
      break;
    }
    case kOneofBytes: {
      const std::string& _s = this->_internal_oneof_bytes();
      target = stream->WriteBytesMaybeAliased(4, _s, target);
      break;
    }
    case kOneofStringCord: {
      const std::string& _s = this->_internal_oneof_string_cord();
      target = stream->WriteStringMaybeAliased(5, _s, target);
      break;
    }
    case kOneofBytesCord: {
      target = stream->WriteBytes(6, this->_internal_oneof_bytes_cord(), target);
      break;
    }
    case kOneofStringStringPiece: {
      const std::string& _s = this->_internal_oneof_string_string_piece();
      target = stream->WriteStringMaybeAliased(7, _s, target);
      break;
    }
    case kOneofBytesStringPiece: {
      const std::string& _s = this->_internal_oneof_bytes_string_piece();
      target = stream->WriteBytesMaybeAliased(8, _s, target);
      break;
    }
    case kOneofEnum: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this->_internal_oneof_enum(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestOneofParsingLite)
  return target;
}

::size_t TestOneofParsingLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestOneofParsingLite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (oneof_field_case()) {
    // int32 oneof_int32 = 1;
    case kOneofInt32: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_oneof_int32());
      break;
    }
    // .protobuf_unittest.TestAllTypesLite oneof_submessage = 2;
    case kOneofSubmessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.oneof_field_.oneof_submessage_);
      break;
    }
    // string oneof_string = 3;
    case kOneofString: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_oneof_string());
      break;
    }
    // bytes oneof_bytes = 4 [default = "default bytes"];
    case kOneofBytes: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_oneof_bytes());
      break;
    }
    // string oneof_string_cord = 5 [default = "default Cord", ctype = CORD];
    case kOneofStringCord: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_oneof_string_cord());
      break;
    }
    // bytes oneof_bytes_cord = 6 [ctype = CORD];
    case kOneofBytesCord: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->_internal_oneof_bytes_cord());
      break;
    }
    // string oneof_string_string_piece = 7 [ctype = STRING_PIECE];
    case kOneofStringStringPiece: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_oneof_string_string_piece());
      break;
    }
    // bytes oneof_bytes_string_piece = 8 [default = "default StringPiece", ctype = STRING_PIECE];
    case kOneofBytesStringPiece: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_oneof_bytes_string_piece());
      break;
    }
    // .protobuf_unittest.V2EnumLite oneof_enum = 9;
    case kOneofEnum: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_oneof_enum());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestOneofParsingLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestOneofParsingLite*>(
      &from));
}

void TestOneofParsingLite::MergeFrom(const TestOneofParsingLite& from) {
  TestOneofParsingLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestOneofParsingLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.oneof_field_case()) {
    case kOneofInt32: {
      _this->_internal_set_oneof_int32(from._internal_oneof_int32());
      break;
    }
    case kOneofSubmessage: {
      _this->_internal_mutable_oneof_submessage()->::protobuf_unittest::TestAllTypesLite::MergeFrom(
          from._internal_oneof_submessage());
      break;
    }
    case kOneofString: {
      _this->_internal_set_oneof_string(from._internal_oneof_string());
      break;
    }
    case kOneofBytes: {
      _this->_internal_set_oneof_bytes(from._internal_oneof_bytes());
      break;
    }
    case kOneofStringCord: {
      _this->_internal_set_oneof_string_cord(from._internal_oneof_string_cord());
      break;
    }
    case kOneofBytesCord: {
      _this->_internal_set_oneof_bytes_cord(from._internal_oneof_bytes_cord());
      break;
    }
    case kOneofStringStringPiece: {
      _this->_internal_set_oneof_string_string_piece(from._internal_oneof_string_string_piece());
      break;
    }
    case kOneofBytesStringPiece: {
      _this->_internal_set_oneof_bytes_string_piece(from._internal_oneof_bytes_string_piece());
      break;
    }
    case kOneofEnum: {
      _this->_internal_set_oneof_enum(from._internal_oneof_enum());
      break;
    }
    case ONEOF_FIELD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestOneofParsingLite::CopyFrom(const TestOneofParsingLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestOneofParsingLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestOneofParsingLite::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TestOneofParsingLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestOneofParsingLite::InternalSwap(TestOneofParsingLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.oneof_field_, other->_impl_.oneof_field_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

std::string TestOneofParsingLite::GetTypeName() const {
  return "protobuf_unittest.TestOneofParsingLite";
}

// ===================================================================

class TestMessageSetLite::_Internal {
 public:
};

TestMessageSetLite::TestMessageSetLite(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMessageSetLite)
}
inline PROTOBUF_NDEBUG_INLINE TestMessageSetLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

TestMessageSetLite::TestMessageSetLite(
    ::google::protobuf::Arena* arena,
    const TestMessageSetLite& from)
    : ::google::protobuf::MessageLite(arena) {
  TestMessageSetLite* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMessageSetLite)
}
inline PROTOBUF_NDEBUG_INLINE TestMessageSetLite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

inline void TestMessageSetLite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TestMessageSetLite::~TestMessageSetLite() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMessageSetLite)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void TestMessageSetLite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TestMessageSetLite::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMessageSetLite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* TestMessageSetLite::_InternalParse(const char* ptr,
                  ::_pbi::ParseContext* ctx) {
  return _impl_._extensions_.ParseMessageSet(ptr, 
      internal_default_instance(), &_internal_metadata_, ctx);
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> TestMessageSetLite::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TestMessageSetLite, _impl_._extensions_),
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TestMessageSetLite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* TestMessageSetLite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
   target =
      _impl_._extensions_.InternalSerializeMessageSetWithCachedSizesToArray(
          internal_default_instance(), target, stream);
  target = ::_pbi::InternalSerializeUnknownMessageSetItemsToArray(
      _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString), target, stream);
  return target;
}

PROTOBUF_NOINLINE ::size_t TestMessageSetLite::ByteSizeLong() const {
  // @@protoc_insertion_point(message_set_byte_size_start:protobuf_unittest.TestMessageSetLite)
  ::size_t total_size = _impl_._extensions_.MessageSetByteSize();
  if (_internal_metadata_.have_unknown_fields()) {
    total_size += ::_pbi::ComputeUnknownMessageSetItemsSize(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString));
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TestMessageSetLite::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const TestMessageSetLite*>(
      &from));
}

void TestMessageSetLite::MergeFrom(const TestMessageSetLite& from) {
  TestMessageSetLite* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMessageSetLite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TestMessageSetLite::CopyFrom(const TestMessageSetLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMessageSetLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TestMessageSetLite::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TestMessageSetLite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TestMessageSetLite::InternalSwap(TestMessageSetLite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

std::string TestMessageSetLite::GetTypeName() const {
  return "protobuf_unittest.TestMessageSetLite";
}

// ===================================================================

class PackedInt32::_Internal {
 public:
};

PackedInt32::PackedInt32(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.PackedInt32)
}
inline PROTOBUF_NDEBUG_INLINE PackedInt32::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : repeated_int32_{visibility, arena, from.repeated_int32_},
        _repeated_int32_cached_byte_size_{0},
        _cached_size_{0} {}

PackedInt32::PackedInt32(
    ::google::protobuf::Arena* arena,
    const PackedInt32& from)
    : ::google::protobuf::MessageLite(arena) {
  PackedInt32* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.PackedInt32)
}
inline PROTOBUF_NDEBUG_INLINE PackedInt32::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : repeated_int32_{visibility, arena},
        _repeated_int32_cached_byte_size_{0},
        _cached_size_{0} {}

inline void PackedInt32::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PackedInt32::~PackedInt32() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.PackedInt32)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void PackedInt32::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PackedInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.PackedInt32)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_int32_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* PackedInt32::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 7> PackedInt32::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2048, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PackedInt32_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    2048, 0, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // repeated int32 repeated_int32 = 2048 [packed = true];
    {PROTOBUF_FIELD_OFFSET(PackedInt32, _impl_.repeated_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PackedInt32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.PackedInt32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 repeated_int32 = 2048 [packed = true];
  {
    int byte_size = _impl_._repeated_int32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2048, _internal_repeated_int32(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.PackedInt32)
  return target;
}

::size_t PackedInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.PackedInt32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 repeated_int32 = 2048 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32())
    ;
    _impl_._repeated_int32_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 3 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void PackedInt32::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const PackedInt32*>(
      &from));
}

void PackedInt32::MergeFrom(const PackedInt32& from) {
  PackedInt32* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.PackedInt32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32()->MergeFrom(from._internal_repeated_int32());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void PackedInt32::CopyFrom(const PackedInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.PackedInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PackedInt32::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PackedInt32::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PackedInt32::InternalSwap(PackedInt32* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.repeated_int32_.InternalSwap(&other->_impl_.repeated_int32_);
}

std::string PackedInt32::GetTypeName() const {
  return "protobuf_unittest.PackedInt32";
}

// ===================================================================

class NonPackedInt32::_Internal {
 public:
};

NonPackedInt32::NonPackedInt32(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.NonPackedInt32)
}
inline PROTOBUF_NDEBUG_INLINE NonPackedInt32::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : repeated_int32_{visibility, arena, from.repeated_int32_},
        _cached_size_{0} {}

NonPackedInt32::NonPackedInt32(
    ::google::protobuf::Arena* arena,
    const NonPackedInt32& from)
    : ::google::protobuf::MessageLite(arena) {
  NonPackedInt32* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.NonPackedInt32)
}
inline PROTOBUF_NDEBUG_INLINE NonPackedInt32::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : repeated_int32_{visibility, arena},
        _cached_size_{0} {}

inline void NonPackedInt32::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NonPackedInt32::~NonPackedInt32() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.NonPackedInt32)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void NonPackedInt32::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NonPackedInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.NonPackedInt32)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_int32_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* NonPackedInt32::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 7> NonPackedInt32::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2048, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NonPackedInt32_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    2048, 0, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // repeated int32 repeated_int32 = 2048;
    {PROTOBUF_FIELD_OFFSET(NonPackedInt32, _impl_.repeated_int32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NonPackedInt32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.NonPackedInt32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 repeated_int32 = 2048;
  for (int i = 0, n = this->_internal_repeated_int32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2048, this->_internal_repeated_int32().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.NonPackedInt32)
  return target;
}

::size_t NonPackedInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.NonPackedInt32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 repeated_int32 = 2048;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_repeated_int32())
    ;
    std::size_t tag_size = std::size_t{3} *
        ::_pbi::FromIntSize(this->_internal_repeated_int32_size());
    ;
    total_size += tag_size + data_size;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void NonPackedInt32::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const NonPackedInt32*>(
      &from));
}

void NonPackedInt32::MergeFrom(const NonPackedInt32& from) {
  NonPackedInt32* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.NonPackedInt32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_int32()->MergeFrom(from._internal_repeated_int32());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void NonPackedInt32::CopyFrom(const NonPackedInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.NonPackedInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NonPackedInt32::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NonPackedInt32::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NonPackedInt32::InternalSwap(NonPackedInt32* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.repeated_int32_.InternalSwap(&other->_impl_.repeated_int32_);
}

std::string NonPackedInt32::GetTypeName() const {
  return "protobuf_unittest.NonPackedInt32";
}

// ===================================================================

class PackedFixed32::_Internal {
 public:
};

PackedFixed32::PackedFixed32(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.PackedFixed32)
}
inline PROTOBUF_NDEBUG_INLINE PackedFixed32::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : repeated_fixed32_{visibility, arena, from.repeated_fixed32_},
        _cached_size_{0} {}

PackedFixed32::PackedFixed32(
    ::google::protobuf::Arena* arena,
    const PackedFixed32& from)
    : ::google::protobuf::MessageLite(arena) {
  PackedFixed32* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.PackedFixed32)
}
inline PROTOBUF_NDEBUG_INLINE PackedFixed32::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : repeated_fixed32_{visibility, arena},
        _cached_size_{0} {}

inline void PackedFixed32::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PackedFixed32::~PackedFixed32() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.PackedFixed32)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void PackedFixed32::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PackedFixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.PackedFixed32)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_fixed32_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* PackedFixed32::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 7> PackedFixed32::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2048, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PackedFixed32_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    2048, 0, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // repeated fixed32 repeated_fixed32 = 2048 [packed = true];
    {PROTOBUF_FIELD_OFFSET(PackedFixed32, _impl_.repeated_fixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PackedFixed32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.PackedFixed32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated fixed32 repeated_fixed32 = 2048 [packed = true];
  if (this->_internal_repeated_fixed32_size() > 0) {
    target = stream->WriteFixedPacked(2048, _internal_repeated_fixed32(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.PackedFixed32)
  return target;
}

::size_t PackedFixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.PackedFixed32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed32 repeated_fixed32 = 2048 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed32_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 3 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void PackedFixed32::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const PackedFixed32*>(
      &from));
}

void PackedFixed32::MergeFrom(const PackedFixed32& from) {
  PackedFixed32* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.PackedFixed32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_fixed32()->MergeFrom(from._internal_repeated_fixed32());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void PackedFixed32::CopyFrom(const PackedFixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.PackedFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PackedFixed32::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PackedFixed32::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PackedFixed32::InternalSwap(PackedFixed32* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.repeated_fixed32_.InternalSwap(&other->_impl_.repeated_fixed32_);
}

std::string PackedFixed32::GetTypeName() const {
  return "protobuf_unittest.PackedFixed32";
}

// ===================================================================

class NonPackedFixed32::_Internal {
 public:
};

NonPackedFixed32::NonPackedFixed32(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.NonPackedFixed32)
}
inline PROTOBUF_NDEBUG_INLINE NonPackedFixed32::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : repeated_fixed32_{visibility, arena, from.repeated_fixed32_},
        _cached_size_{0} {}

NonPackedFixed32::NonPackedFixed32(
    ::google::protobuf::Arena* arena,
    const NonPackedFixed32& from)
    : ::google::protobuf::MessageLite(arena) {
  NonPackedFixed32* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.NonPackedFixed32)
}
inline PROTOBUF_NDEBUG_INLINE NonPackedFixed32::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : repeated_fixed32_{visibility, arena},
        _cached_size_{0} {}

inline void NonPackedFixed32::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NonPackedFixed32::~NonPackedFixed32() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.NonPackedFixed32)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void NonPackedFixed32::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NonPackedFixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.NonPackedFixed32)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repeated_fixed32_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* NonPackedFixed32::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 7> NonPackedFixed32::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2048, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NonPackedFixed32_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    2048, 0, 1,
    65534, 0,
    65535, 65535
  }}, {{
    // repeated fixed32 repeated_fixed32 = 2048;
    {PROTOBUF_FIELD_OFFSET(NonPackedFixed32, _impl_.repeated_fixed32_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NonPackedFixed32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.NonPackedFixed32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated fixed32 repeated_fixed32 = 2048;
  for (int i = 0, n = this->_internal_repeated_fixed32_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        2048, this->_internal_repeated_fixed32().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.NonPackedFixed32)
  return target;
}

::size_t NonPackedFixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.NonPackedFixed32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed32 repeated_fixed32 = 2048;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed32_size())
    ;
    std::size_t tag_size = std::size_t{3} *
        ::_pbi::FromIntSize(this->_internal_repeated_fixed32_size());
    ;
    total_size += tag_size + data_size;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void NonPackedFixed32::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const NonPackedFixed32*>(
      &from));
}

void NonPackedFixed32::MergeFrom(const NonPackedFixed32& from) {
  NonPackedFixed32* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.NonPackedFixed32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repeated_fixed32()->MergeFrom(from._internal_repeated_fixed32());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void NonPackedFixed32::CopyFrom(const NonPackedFixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.NonPackedFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NonPackedFixed32::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NonPackedFixed32::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NonPackedFixed32::InternalSwap(NonPackedFixed32* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.repeated_fixed32_.InternalSwap(&other->_impl_.repeated_fixed32_);
}

std::string NonPackedFixed32::GetTypeName() const {
  return "protobuf_unittest.NonPackedFixed32";
}

// ===================================================================

class DupEnum::_Internal {
 public:
};

DupEnum::DupEnum(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.DupEnum)
}
DupEnum::DupEnum(
    ::google::protobuf::Arena* arena, const DupEnum& from)
    : DupEnum(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DupEnum::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DupEnum::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DupEnum::~DupEnum() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.DupEnum)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void DupEnum::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DupEnum::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.DupEnum)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<std::string>();
}

const char* DupEnum::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> DupEnum::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DupEnum_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

::uint8_t* DupEnum::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.DupEnum)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.DupEnum)
  return target;
}

::size_t DupEnum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.DupEnum)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void DupEnum::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const DupEnum*>(
      &from));
}

void DupEnum::MergeFrom(const DupEnum& from) {
  DupEnum* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.DupEnum)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void DupEnum::CopyFrom(const DupEnum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.DupEnum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DupEnum::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DupEnum::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DupEnum::InternalSwap(DupEnum* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

std::string DupEnum::GetTypeName() const {
  return "protobuf_unittest.DupEnum";
}

// ===================================================================

class RecursiveMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<RecursiveMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecursiveMessage, _impl_._has_bits_);
  static const ::protobuf_unittest::RecursiveMessage& recurse(const RecursiveMessage* msg);
  static void set_has_recurse(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_payload(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf_unittest::RecursiveMessage& RecursiveMessage::_Internal::recurse(const RecursiveMessage* msg) {
  return *msg->_impl_.recurse_;
}
RecursiveMessage::RecursiveMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.RecursiveMessage)
}
inline PROTOBUF_NDEBUG_INLINE RecursiveMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_(arena, from.payload_) {}

RecursiveMessage::RecursiveMessage(
    ::google::protobuf::Arena* arena,
    const RecursiveMessage& from)
    : ::google::protobuf::MessageLite(arena) {
  RecursiveMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.recurse_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::protobuf_unittest::RecursiveMessage>(arena, *from._impl_.recurse_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.RecursiveMessage)
}
inline PROTOBUF_NDEBUG_INLINE RecursiveMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        payload_(arena) {}

inline void RecursiveMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.recurse_ = {};
}
RecursiveMessage::~RecursiveMessage() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.RecursiveMessage)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void RecursiveMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.payload_.Destroy();
  delete _impl_.recurse_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecursiveMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.RecursiveMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.payload_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.recurse_ != nullptr);
      _impl_.recurse_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* RecursiveMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RecursiveMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecursiveMessage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RecursiveMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // optional bytes payload = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RecursiveMessage, _impl_.payload_)}},
    // optional .protobuf_unittest.RecursiveMessage recurse = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(RecursiveMessage, _impl_.recurse_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf_unittest.RecursiveMessage recurse = 1;
    {PROTOBUF_FIELD_OFFSET(RecursiveMessage, _impl_.recurse_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes payload = 2;
    {PROTOBUF_FIELD_OFFSET(RecursiveMessage, _impl_.payload_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf_unittest::RecursiveMessage>()},
  }}, {{
  }},
};

::uint8_t* RecursiveMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.RecursiveMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .protobuf_unittest.RecursiveMessage recurse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::recurse(this),
        _Internal::recurse(this).GetCachedSize(), target, stream);
  }

  // optional bytes payload = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_payload();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.RecursiveMessage)
  return target;
}

::size_t RecursiveMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.RecursiveMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes payload = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_payload());
    }

    // optional .protobuf_unittest.RecursiveMessage recurse = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.recurse_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void RecursiveMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const RecursiveMessage*>(
      &from));
}

void RecursiveMessage::MergeFrom(const RecursiveMessage& from) {
  RecursiveMessage* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.RecursiveMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_payload(from._internal_payload());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_recurse()->::protobuf_unittest::RecursiveMessage::MergeFrom(
          from._internal_recurse());
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void RecursiveMessage::CopyFrom(const RecursiveMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.RecursiveMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecursiveMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RecursiveMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecursiveMessage::InternalSwap(RecursiveMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  swap(_impl_.recurse_, other->_impl_.recurse_);
}

std::string RecursiveMessage::GetTypeName() const {
  return "protobuf_unittest.RecursiveMessage";
}

#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestNestedExtensionLite::kNestedExtensionFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  TestNestedExtensionLite::nested_extension(kNestedExtensionFieldNumber, 0, nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestParsingMergeLite::kOptionalExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestParsingMergeLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypesLite >, 11, false>
  TestParsingMergeLite::optional_ext(kOptionalExtFieldNumber, ::protobuf_unittest::TestAllTypesLite::default_instance(), nullptr);
#if !defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912)
const int TestParsingMergeLite::kRepeatedExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestParsingMergeLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypesLite >, 11, false>
  TestParsingMergeLite::repeated_ext(kRepeatedExtFieldNumber, ::protobuf_unittest::TestAllTypesLite::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  optional_int32_extension_lite(kOptionalInt32ExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 3, false>
  optional_int64_extension_lite(kOptionalInt64ExtensionLiteFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13, false>
  optional_uint32_extension_lite(kOptionalUint32ExtensionLiteFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 4, false>
  optional_uint64_extension_lite(kOptionalUint64ExtensionLiteFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 17, false>
  optional_sint32_extension_lite(kOptionalSint32ExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 18, false>
  optional_sint64_extension_lite(kOptionalSint64ExtensionLiteFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 7, false>
  optional_fixed32_extension_lite(kOptionalFixed32ExtensionLiteFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 6, false>
  optional_fixed64_extension_lite(kOptionalFixed64ExtensionLiteFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 15, false>
  optional_sfixed32_extension_lite(kOptionalSfixed32ExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 16, false>
  optional_sfixed64_extension_lite(kOptionalSfixed64ExtensionLiteFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2, false>
  optional_float_extension_lite(kOptionalFloatExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false>
  optional_double_extension_lite(kOptionalDoubleExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  optional_bool_extension_lite(kOptionalBoolExtensionLiteFieldNumber, false, nullptr);
const std::string optional_string_extension_lite_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  optional_string_extension_lite(kOptionalStringExtensionLiteFieldNumber, optional_string_extension_lite_default, nullptr);
const std::string optional_bytes_extension_lite_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 12, false>
  optional_bytes_extension_lite(kOptionalBytesExtensionLiteFieldNumber, optional_bytes_extension_lite_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::OptionalGroup_extension_lite >, 10, false>
  optionalgroup_extension_lite(kOptionalgroupExtensionLiteFieldNumber, ::protobuf_unittest::OptionalGroup_extension_lite::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false>
  optional_nested_message_extension_lite(kOptionalNestedMessageExtensionLiteFieldNumber, ::protobuf_unittest::TestAllTypesLite_NestedMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::ForeignMessageLite >, 11, false>
  optional_foreign_message_extension_lite(kOptionalForeignMessageExtensionLiteFieldNumber, ::protobuf_unittest::ForeignMessageLite::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::ImportMessageLite >, 11, false>
  optional_import_message_extension_lite(kOptionalImportMessageExtensionLiteFieldNumber, ::protobuf_unittest_import::ImportMessageLite::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedEnum, ::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid>, 14, false>
  optional_nested_enum_extension_lite(kOptionalNestedEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(1), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnumLite, ::protobuf_unittest::ForeignEnumLite_IsValid>, 14, false>
  optional_foreign_enum_extension_lite(kOptionalForeignEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::ForeignEnumLite >(4), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnumLite, ::protobuf_unittest_import::ImportEnumLite_IsValid>, 14, false>
  optional_import_enum_extension_lite(kOptionalImportEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnumLite >(7), nullptr);
const std::string optional_string_piece_extension_lite_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  optional_string_piece_extension_lite(kOptionalStringPieceExtensionLiteFieldNumber, optional_string_piece_extension_lite_default, nullptr);
const std::string optional_cord_extension_lite_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  optional_cord_extension_lite(kOptionalCordExtensionLiteFieldNumber, optional_cord_extension_lite_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest_import::PublicImportMessageLite >, 11, false>
  optional_public_import_message_extension_lite(kOptionalPublicImportMessageExtensionLiteFieldNumber, ::protobuf_unittest_import::PublicImportMessageLite::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false>
  optional_lazy_message_extension_lite(kOptionalLazyMessageExtensionLiteFieldNumber, ::protobuf_unittest::TestAllTypesLite_NestedMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false>
  optional_unverified_lazy_message_extension_lite(kOptionalUnverifiedLazyMessageExtensionLiteFieldNumber, ::protobuf_unittest::TestAllTypesLite_NestedMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5, false>
  repeated_int32_extension_lite(kRepeatedInt32ExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3, false>
  repeated_int64_extension_lite(kRepeatedInt64ExtensionLiteFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 13, false>
  repeated_uint32_extension_lite(kRepeatedUint32ExtensionLiteFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 4, false>
  repeated_uint64_extension_lite(kRepeatedUint64ExtensionLiteFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 17, false>
  repeated_sint32_extension_lite(kRepeatedSint32ExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 18, false>
  repeated_sint64_extension_lite(kRepeatedSint64ExtensionLiteFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 7, false>
  repeated_fixed32_extension_lite(kRepeatedFixed32ExtensionLiteFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 6, false>
  repeated_fixed64_extension_lite(kRepeatedFixed64ExtensionLiteFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 15, false>
  repeated_sfixed32_extension_lite(kRepeatedSfixed32ExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 16, false>
  repeated_sfixed64_extension_lite(kRepeatedSfixed64ExtensionLiteFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, false>
  repeated_float_extension_lite(kRepeatedFloatExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, false>
  repeated_double_extension_lite(kRepeatedDoubleExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, false>
  repeated_bool_extension_lite(kRepeatedBoolExtensionLiteFieldNumber, false, nullptr);
const std::string repeated_string_extension_lite_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false>
  repeated_string_extension_lite(kRepeatedStringExtensionLiteFieldNumber, repeated_string_extension_lite_default, nullptr);
const std::string repeated_bytes_extension_lite_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 12, false>
  repeated_bytes_extension_lite(kRepeatedBytesExtensionLiteFieldNumber, repeated_bytes_extension_lite_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::RepeatedGroup_extension_lite >, 10, false>
  repeatedgroup_extension_lite(kRepeatedgroupExtensionLiteFieldNumber, ::protobuf_unittest::RepeatedGroup_extension_lite::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false>
  repeated_nested_message_extension_lite(kRepeatedNestedMessageExtensionLiteFieldNumber, ::protobuf_unittest::TestAllTypesLite_NestedMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::ForeignMessageLite >, 11, false>
  repeated_foreign_message_extension_lite(kRepeatedForeignMessageExtensionLiteFieldNumber, ::protobuf_unittest::ForeignMessageLite::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest_import::ImportMessageLite >, 11, false>
  repeated_import_message_extension_lite(kRepeatedImportMessageExtensionLiteFieldNumber, ::protobuf_unittest_import::ImportMessageLite::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedEnum, ::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid>, 14, false>
  repeated_nested_enum_extension_lite(kRepeatedNestedEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(1), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnumLite, ::protobuf_unittest::ForeignEnumLite_IsValid>, 14, false>
  repeated_foreign_enum_extension_lite(kRepeatedForeignEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::ForeignEnumLite >(4), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest_import::ImportEnumLite, ::protobuf_unittest_import::ImportEnumLite_IsValid>, 14, false>
  repeated_import_enum_extension_lite(kRepeatedImportEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnumLite >(7), nullptr);
const std::string repeated_string_piece_extension_lite_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false>
  repeated_string_piece_extension_lite(kRepeatedStringPieceExtensionLiteFieldNumber, repeated_string_piece_extension_lite_default, nullptr);
const std::string repeated_cord_extension_lite_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedStringTypeTraits, 9, false>
  repeated_cord_extension_lite(kRepeatedCordExtensionLiteFieldNumber, repeated_cord_extension_lite_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::RepeatedMessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false>
  repeated_lazy_message_extension_lite(kRepeatedLazyMessageExtensionLiteFieldNumber, ::protobuf_unittest::TestAllTypesLite_NestedMessage::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5, false>
  default_int32_extension_lite(kDefaultInt32ExtensionLiteFieldNumber, 41, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 3, false>
  default_int64_extension_lite(kDefaultInt64ExtensionLiteFieldNumber, ::int64_t{42}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13, false>
  default_uint32_extension_lite(kDefaultUint32ExtensionLiteFieldNumber, 43u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 4, false>
  default_uint64_extension_lite(kDefaultUint64ExtensionLiteFieldNumber, ::uint64_t{44u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 17, false>
  default_sint32_extension_lite(kDefaultSint32ExtensionLiteFieldNumber, -45, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 18, false>
  default_sint64_extension_lite(kDefaultSint64ExtensionLiteFieldNumber, ::int64_t{46}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 7, false>
  default_fixed32_extension_lite(kDefaultFixed32ExtensionLiteFieldNumber, 47u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint64_t >, 6, false>
  default_fixed64_extension_lite(kDefaultFixed64ExtensionLiteFieldNumber, ::uint64_t{48u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 15, false>
  default_sfixed32_extension_lite(kDefaultSfixed32ExtensionLiteFieldNumber, 49, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::int64_t >, 16, false>
  default_sfixed64_extension_lite(kDefaultSfixed64ExtensionLiteFieldNumber, ::int64_t{-50}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< float >, 2, false>
  default_float_extension_lite(kDefaultFloatExtensionLiteFieldNumber, 51.5f, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< double >, 1, false>
  default_double_extension_lite(kDefaultDoubleExtensionLiteFieldNumber, 52000, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false>
  default_bool_extension_lite(kDefaultBoolExtensionLiteFieldNumber, true, nullptr);
const std::string default_string_extension_lite_default("hello");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  default_string_extension_lite(kDefaultStringExtensionLiteFieldNumber, default_string_extension_lite_default, nullptr);
const std::string default_bytes_extension_lite_default("world");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 12, false>
  default_bytes_extension_lite(kDefaultBytesExtensionLiteFieldNumber, default_bytes_extension_lite_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedEnum, ::protobuf_unittest::TestAllTypesLite_NestedEnum_IsValid>, 14, false>
  default_nested_enum_extension_lite(kDefaultNestedEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::TestAllTypesLite_NestedEnum >(2), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest::ForeignEnumLite, ::protobuf_unittest::ForeignEnumLite_IsValid>, 14, false>
  default_foreign_enum_extension_lite(kDefaultForeignEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::ForeignEnumLite >(5), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::EnumTypeTraits< ::protobuf_unittest_import::ImportEnumLite, ::protobuf_unittest_import::ImportEnumLite_IsValid>, 14, false>
  default_import_enum_extension_lite(kDefaultImportEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest_import::ImportEnumLite >(8), nullptr);
const std::string default_string_piece_extension_lite_default("abc");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  default_string_piece_extension_lite(kDefaultStringPieceExtensionLiteFieldNumber, default_string_piece_extension_lite_default, nullptr);
const std::string default_cord_extension_lite_default("123");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  default_cord_extension_lite(kDefaultCordExtensionLiteFieldNumber, default_cord_extension_lite_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::uint32_t >, 13, false>
  oneof_uint32_extension_lite(kOneofUint32ExtensionLiteFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypesLite_NestedMessage >, 11, false>
  oneof_nested_message_extension_lite(kOneofNestedMessageExtensionLiteFieldNumber, ::protobuf_unittest::TestAllTypesLite_NestedMessage::default_instance(), nullptr);
const std::string oneof_string_extension_lite_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  oneof_string_extension_lite(kOneofStringExtensionLiteFieldNumber, oneof_string_extension_lite_default, nullptr);
const std::string oneof_bytes_extension_lite_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestAllExtensionsLite,
    ::google::protobuf::internal::StringTypeTraits, 12, false>
  oneof_bytes_extension_lite(kOneofBytesExtensionLiteFieldNumber, oneof_bytes_extension_lite_default, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 5, true>
  packed_int32_extension_lite(kPackedInt32ExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 3, true>
  packed_int64_extension_lite(kPackedInt64ExtensionLiteFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 13, true>
  packed_uint32_extension_lite(kPackedUint32ExtensionLiteFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 4, true>
  packed_uint64_extension_lite(kPackedUint64ExtensionLiteFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 17, true>
  packed_sint32_extension_lite(kPackedSint32ExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 18, true>
  packed_sint64_extension_lite(kPackedSint64ExtensionLiteFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint32_t >, 7, true>
  packed_fixed32_extension_lite(kPackedFixed32ExtensionLiteFieldNumber, 0u, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::uint64_t >, 6, true>
  packed_fixed64_extension_lite(kPackedFixed64ExtensionLiteFieldNumber, ::uint64_t{0u}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int32_t >, 15, true>
  packed_sfixed32_extension_lite(kPackedSfixed32ExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< ::int64_t >, 16, true>
  packed_sfixed64_extension_lite(kPackedSfixed64ExtensionLiteFieldNumber, ::int64_t{0}, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< float >, 2, true>
  packed_float_extension_lite(kPackedFloatExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< double >, 1, true>
  packed_double_extension_lite(kPackedDoubleExtensionLiteFieldNumber, 0, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedPrimitiveTypeTraits< bool >, 8, true>
  packed_bool_extension_lite(kPackedBoolExtensionLiteFieldNumber, false, nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestPackedExtensionsLite,
    ::google::protobuf::internal::RepeatedEnumTypeTraits< ::protobuf_unittest::ForeignEnumLite, ::protobuf_unittest::ForeignEnumLite_IsValid>, 14, true>
  packed_enum_extension_lite(kPackedEnumExtensionLiteFieldNumber, static_cast< ::protobuf_unittest::ForeignEnumLite >(4), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestHugeFieldNumbersLite,
    ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestAllTypesLite >, 11, false>
  test_all_types_lite(kTestAllTypesLiteFieldNumber, ::protobuf_unittest::TestAllTypesLite::default_instance(), nullptr);
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
